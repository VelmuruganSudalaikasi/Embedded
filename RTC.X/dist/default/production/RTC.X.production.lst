

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Oct 26 14:38:13 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    48                           	dabs	1,0x7E,2
    49     0000                     
    50                           ; Generated 22/03/2023 GMT
    51                           ; 
    52                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F877A Definitions
    82                           ; 
    83                           ; SFR Addresses
    84     0000                     	;# 
    85     0001                     	;# 
    86     0002                     	;# 
    87     0003                     	;# 
    88     0004                     	;# 
    89     0005                     	;# 
    90     0006                     	;# 
    91     0007                     	;# 
    92     0008                     	;# 
    93     0009                     	;# 
    94     000A                     	;# 
    95     000B                     	;# 
    96     000C                     	;# 
    97     000D                     	;# 
    98     000E                     	;# 
    99     000E                     	;# 
   100     000F                     	;# 
   101     0010                     	;# 
   102     0011                     	;# 
   103     0012                     	;# 
   104     0013                     	;# 
   105     0014                     	;# 
   106     0015                     	;# 
   107     0015                     	;# 
   108     0016                     	;# 
   109     0017                     	;# 
   110     0018                     	;# 
   111     0019                     	;# 
   112     001A                     	;# 
   113     001B                     	;# 
   114     001B                     	;# 
   115     001C                     	;# 
   116     001D                     	;# 
   117     001E                     	;# 
   118     001F                     	;# 
   119     0081                     	;# 
   120     0085                     	;# 
   121     0086                     	;# 
   122     0087                     	;# 
   123     0088                     	;# 
   124     0089                     	;# 
   125     008C                     	;# 
   126     008D                     	;# 
   127     008E                     	;# 
   128     0091                     	;# 
   129     0092                     	;# 
   130     0093                     	;# 
   131     0094                     	;# 
   132     0098                     	;# 
   133     0099                     	;# 
   134     009C                     	;# 
   135     009D                     	;# 
   136     009E                     	;# 
   137     009F                     	;# 
   138     010C                     	;# 
   139     010D                     	;# 
   140     010E                     	;# 
   141     010F                     	;# 
   142     018C                     	;# 
   143     018D                     	;# 
   144     0000                     	;# 
   145     0001                     	;# 
   146     0002                     	;# 
   147     0003                     	;# 
   148     0004                     	;# 
   149     0005                     	;# 
   150     0006                     	;# 
   151     0007                     	;# 
   152     0008                     	;# 
   153     0009                     	;# 
   154     000A                     	;# 
   155     000B                     	;# 
   156     000C                     	;# 
   157     000D                     	;# 
   158     000E                     	;# 
   159     000E                     	;# 
   160     000F                     	;# 
   161     0010                     	;# 
   162     0011                     	;# 
   163     0012                     	;# 
   164     0013                     	;# 
   165     0014                     	;# 
   166     0015                     	;# 
   167     0015                     	;# 
   168     0016                     	;# 
   169     0017                     	;# 
   170     0018                     	;# 
   171     0019                     	;# 
   172     001A                     	;# 
   173     001B                     	;# 
   174     001B                     	;# 
   175     001C                     	;# 
   176     001D                     	;# 
   177     001E                     	;# 
   178     001F                     	;# 
   179     0081                     	;# 
   180     0085                     	;# 
   181     0086                     	;# 
   182     0087                     	;# 
   183     0088                     	;# 
   184     0089                     	;# 
   185     008C                     	;# 
   186     008D                     	;# 
   187     008E                     	;# 
   188     0091                     	;# 
   189     0092                     	;# 
   190     0093                     	;# 
   191     0094                     	;# 
   192     0098                     	;# 
   193     0099                     	;# 
   194     009C                     	;# 
   195     009D                     	;# 
   196     009E                     	;# 
   197     009F                     	;# 
   198     010C                     	;# 
   199     010D                     	;# 
   200     010E                     	;# 
   201     010F                     	;# 
   202     018C                     	;# 
   203     018D                     	;# 
   204                           
   205                           	psect	idataBANK0
   206     041C                     __pidataBANK0:
   207                           
   208                           ;initializer for _Date
   209     041C  3416               	retlw	22
   210                           
   211                           ;initializer for _Year
   212     041D  341E               	retlw	30
   213                           
   214                           ;initializer for _Month
   215     041E  340C               	retlw	12
   216                           
   217                           ;initializer for _Day
   218     041F  3403               	retlw	3
   219                           
   220                           ;initializer for _Sec
   221     0420  3421               	retlw	33
   222                           
   223                           ;initializer for _Min
   224     0421  3437               	retlw	55
   225                           
   226                           ;initializer for _Hour
   227     0422  3408               	retlw	8
   228                           
   229                           ;initializer for _Mode
   230     0423  3450               	retlw	80
   231                           
   232                           ;initializer for _Current_Time
   233     0424  3420               	retlw	32
   234     0425  3420               	retlw	32
   235     0426  342D               	retlw	45
   236     0427  3420               	retlw	32
   237     0428  3420               	retlw	32
   238     0429  342D               	retlw	45
   239     042A  3420               	retlw	32
   240     042B  3420               	retlw	32
   241     042C  3420               	retlw	32
   242     042D  3420               	retlw	32
   243     042E  3400               	retlw	0
   244                           
   245                           ;initializer for _Current_Date
   246     042F  3420               	retlw	32
   247     0430  3420               	retlw	32
   248     0431  342D               	retlw	45
   249     0432  3420               	retlw	32
   250     0433  3420               	retlw	32
   251     0434  342D               	retlw	45
   252     0435  3420               	retlw	32
   253     0436  3420               	retlw	32
   254     0437  3400               	retlw	0
   255                           
   256                           ;initializer for _DATE
   257     0438  3444               	retlw	68
   258     0439  3441               	retlw	65
   259     043A  3454               	retlw	84
   260     043B  3445               	retlw	69
   261     043C  343A               	retlw	58
   262     043D  3400               	retlw	0
   263                           
   264                           ;initializer for _Time
   265     043E  3454               	retlw	84
   266     043F  3449               	retlw	73
   267     0440  344D               	retlw	77
   268     0441  3445               	retlw	69
   269     0442  343A               	retlw	58
   270     0443  3400               	retlw	0
   271     0007                     _PORTC	set	7
   272     0008                     _PORTD	set	8
   273     0013                     _SSPBUF	set	19
   274     0014                     _SSPCON	set	20
   275     0063                     _SSPIF	set	99
   276     00A5                     _SSPEN	set	165
   277     0087                     _TRISC	set	135
   278     0088                     _TRISD	set	136
   279     0093                     _SSPADD	set	147
   280     0091                     _SSPCON2	set	145
   281     048B                     _RCEN	set	1163
   282     048E                     _ACKSTAT	set	1166
   283     048C                     _ACKEN	set	1164
   284     048D                     _ACKDT	set	1165
   285     04A6                     _CKE	set	1190
   286     04A7                     _SMP	set	1191
   287     043C                     _TRISC4	set	1084
   288     043B                     _TRISC3	set	1083
   289     0489                     _RSEN	set	1161
   290     048A                     _PEN	set	1162
   291     0488                     _SEN	set	1160
   292     04A2                     _READ_WRITE	set	1186
   293                           
   294                           	psect	cinit
   295     07EC                     start_initialization:	
   296                           ; #config settings
   297                           
   298     07EC                     __initialization:
   299                           
   300                           ; Initialize objects allocated to BANK0
   301     07EC  1383               	bcf	3,7	;select IRP bank0
   302     07ED  3048               	movlw	low (__pdataBANK0+40)
   303     07EE  00FD               	movwf	btemp+-1
   304     07EF  3004               	movlw	high __pidataBANK0
   305     07F0  00FE               	movwf	btemp
   306     07F1  301C               	movlw	low __pidataBANK0
   307     07F2  00FF               	movwf	btemp+1
   308     07F3  3020               	movlw	low __pdataBANK0
   309     07F4  0084               	movwf	4
   310     07F5  120A  118A  235D  120A  118A  	fcall	init_ram0
   311                           
   312                           ; Clear objects allocated to BANK0
   313     07FA  01D7               	clrf	__pbssBANK0& (0+127)
   314     07FB  01D8               	clrf	(__pbssBANK0+1)& (0+127)
   315     07FC                     end_of_initialization:	
   316                           ;End of C runtime variable initialization code
   317                           
   318     07FC                     __end_of__initialization:
   319     07FC  0183               	clrf	3
   320     07FD  120A  118A  2F73   	ljmp	_main	;jump to C main() function
   321                           
   322                           	psect	bssBANK0
   323     0057                     __pbssBANK0:
   324     0057                     _temp:
   325     0057                     	ds	1
   326     0058                     _buff:
   327     0058                     	ds	1
   328                           
   329                           	psect	dataBANK0
   330     0020                     __pdataBANK0:
   331     0020                     _Date:
   332     0020                     	ds	1
   333     0021                     _Year:
   334     0021                     	ds	1
   335     0022                     _Month:
   336     0022                     	ds	1
   337     0023                     _Day:
   338     0023                     	ds	1
   339     0024                     _Sec:
   340     0024                     	ds	1
   341     0025                     _Min:
   342     0025                     	ds	1
   343     0026                     _Hour:
   344     0026                     	ds	1
   345     0027                     _Mode:
   346     0027                     	ds	1
   347     0028                     _Current_Time:
   348     0028                     	ds	11
   349     0033                     _Current_Date:
   350     0033                     	ds	9
   351     003C                     _DATE:
   352     003C                     	ds	6
   353     0042                     _Time:
   354     0042                     	ds	6
   355                           
   356                           	psect	inittext
   357     0359                     init_fetch0:	
   358                           ;	Called with low address in FSR and high address in W
   359                           
   360     0359  087E               	movf	btemp,w
   361     035A  008A               	movwf	10
   362     035B  087F               	movf	btemp+1,w
   363     035C  0082               	movwf	2
   364     035D                     init_ram0:	
   365                           ;Called with:
   366                           ;	high address of idata address in btemp 
   367                           ;	low address of idata address in btemp+1 
   368                           ;	low address of data in FSR
   369                           ;	high address + 1 of data in btemp-1
   370                           
   371     035D  120A  118A  2359  120A  118A  	fcall	init_fetch0
   372     0362  0080               	movwf	0
   373     0363  0A84               	incf	4,f
   374     0364  0804               	movf	4,w
   375     0365  067D               	xorwf	btemp+-1,w
   376     0366  1903               	btfsc	3,2
   377     0367  3400               	retlw	0
   378     0368  0AFF               	incf	btemp+1,f
   379     0369  1903               	btfsc	3,2
   380     036A  0AFE               	incf	btemp,f
   381     036B  2B5D               	goto	init_ram0
   382                           
   383                           	psect	cstackCOMMON
   384     0070                     __pcstackCOMMON:
   385     0070                     ?_I2C_Repeat_Start:
   386     0070                     ??_I2C_Repeat_Start:	
   387                           ; 1 bytes @ 0x0
   388                           
   389     0070                     ?_I2C_Read_Data:	
   390                           ; 1 bytes @ 0x0
   391                           
   392     0070                     ?_Lcd_Data:	
   393                           ; 1 bytes @ 0x0
   394                           
   395     0070                     ??_Lcd_Data:	
   396                           ; 1 bytes @ 0x0
   397                           
   398     0070                     ?_Lcd_Cmd:	
   399                           ; 1 bytes @ 0x0
   400                           
   401     0070                     ??_Lcd_Cmd:	
   402                           ; 1 bytes @ 0x0
   403                           
   404     0070                     ?_Bcd_to_Lsb:	
   405                           ; 1 bytes @ 0x0
   406                           
   407     0070                     ??_Bcd_to_Lsb:	
   408                           ; 1 bytes @ 0x0
   409                           
   410     0070                     ?_Bcd_to_Msb:	
   411                           ; 1 bytes @ 0x0
   412                           
   413     0070                     ??_Bcd_to_Msb:	
   414                           ; 1 bytes @ 0x0
   415                           
   416     0070                     ?_Hour_Msb:	
   417                           ; 1 bytes @ 0x0
   418                           
   419     0070                     ??_Hour_Msb:	
   420                           ; 1 bytes @ 0x0
   421                           
   422     0070                     ?_Am_or_Pm:	
   423                           ; 1 bytes @ 0x0
   424                           
   425     0070                     ??_Am_or_Pm:	
   426                           ; 1 bytes @ 0x0
   427                           
   428     0070                     ?_Set_Seconds:	
   429                           ; 1 bytes @ 0x0
   430                           
   431     0070                     ?_Set_Minute:	
   432                           ; 1 bytes @ 0x0
   433                           
   434     0070                     ?_Set_Railway_Hour:	
   435                           ; 1 bytes @ 0x0
   436                           
   437     0070                     ?_Set_Day:	
   438                           ; 1 bytes @ 0x0
   439                           
   440     0070                     ??_Set_Day:	
   441                           ; 1 bytes @ 0x0
   442                           
   443     0070                     ?_Set_Date:	
   444                           ; 1 bytes @ 0x0
   445                           
   446     0070                     ?_Set_Month:	
   447                           ; 1 bytes @ 0x0
   448                           
   449     0070                     ?_Set_Year:	
   450                           ; 1 bytes @ 0x0
   451                           
   452     0070                     ?_Bcd_Conversion:	
   453                           ; 1 bytes @ 0x0
   454                           
   455     0070                     ?_Hour_Conversion:	
   456                           ; 1 bytes @ 0x0
   457                           
   458     0070                     ?_I2C_Master_Init:	
   459                           ; 1 bytes @ 0x0
   460                           
   461     0070                     ??_I2C_Master_Init:	
   462                           ; 1 bytes @ 0x0
   463                           
   464     0070                     ?_I2C_Start:	
   465                           ; 1 bytes @ 0x0
   466                           
   467     0070                     ??_I2C_Start:	
   468                           ; 1 bytes @ 0x0
   469                           
   470     0070                     ?_I2C_Stop:	
   471                           ; 1 bytes @ 0x0
   472                           
   473     0070                     ??_I2C_Stop:	
   474                           ; 1 bytes @ 0x0
   475                           
   476     0070                     ?_Read_Time:	
   477                           ; 1 bytes @ 0x0
   478                           
   479     0070                     ?_Read_Date:	
   480                           ; 1 bytes @ 0x0
   481                           
   482     0070                     ?_I2C_Wait:	
   483                           ; 1 bytes @ 0x0
   484                           
   485     0070                     ??_I2C_Wait:	
   486                           ; 1 bytes @ 0x0
   487                           
   488     0070                     ?_I2C_ACK:	
   489                           ; 1 bytes @ 0x0
   490                           
   491     0070                     ??_I2C_ACK:	
   492                           ; 1 bytes @ 0x0
   493                           
   494     0070                     ?_I2C_NACK:	
   495                           ; 1 bytes @ 0x0
   496                           
   497     0070                     ??_I2C_NACK:	
   498                           ; 1 bytes @ 0x0
   499                           
   500     0070                     ?_Lcd_Print:	
   501                           ; 1 bytes @ 0x0
   502                           
   503     0070                     ?_Lcd_Configuration:	
   504                           ; 1 bytes @ 0x0
   505                           
   506     0070                     ?_main:	
   507                           ; 1 bytes @ 0x0
   508                           
   509     0070                     ?_I2C_Sent_Data:	
   510                           ; 1 bytes @ 0x0
   511                           
   512     0070                     ?_I2C_Data_Write:	
   513                           ; 2 bytes @ 0x0
   514                           
   515     0070                     ?___awdiv:	
   516                           ; 2 bytes @ 0x0
   517                           
   518     0070                     ?___awmod:	
   519                           ; 2 bytes @ 0x0
   520                           
   521     0070                     Set_Day@day:	
   522                           ; 2 bytes @ 0x0
   523                           
   524     0070                     Hour_Msb@hrs:	
   525                           ; 1 bytes @ 0x0
   526                           
   527     0070                     Am_or_Pm@hrs:	
   528                           ; 1 bytes @ 0x0
   529                           
   530     0070                     Bcd_to_Lsb@value:	
   531                           ; 1 bytes @ 0x0
   532                           
   533     0070                     I2C_Read_Data@flag:	
   534                           ; 1 bytes @ 0x0
   535                           
   536     0070                     ___awdiv@divisor:	
   537                           ; 2 bytes @ 0x0
   538                           
   539     0070                     ___awmod@divisor:	
   540                           ; 2 bytes @ 0x0
   541                           
   542                           
   543                           ; 2 bytes @ 0x0
   544     0070                     	ds	1
   545     0071                     Bcd_to_Msb@value:
   546                           
   547                           ; 1 bytes @ 0x1
   548     0071                     	ds	1
   549     0072                     ??_I2C_Sent_Data:
   550     0072                     ??_I2C_Read_Data:	
   551                           ; 1 bytes @ 0x2
   552                           
   553     0072                     ??_Read_Time:	
   554                           ; 1 bytes @ 0x2
   555                           
   556     0072                     ??_Read_Date:	
   557                           ; 1 bytes @ 0x2
   558                           
   559     0072                     Lcd_Data@data:	
   560                           ; 1 bytes @ 0x2
   561                           
   562     0072                     Lcd_Cmd@cmd:	
   563                           ; 1 bytes @ 0x2
   564                           
   565     0072                     Read_Time@c:	
   566                           ; 1 bytes @ 0x2
   567                           
   568     0072                     ___awdiv@dividend:	
   569                           ; 1 bytes @ 0x2
   570                           
   571     0072                     ___awmod@dividend:	
   572                           ; 2 bytes @ 0x2
   573                           
   574                           
   575                           ; 2 bytes @ 0x2
   576     0072                     	ds	1
   577     0073                     ??_Lcd_Print:
   578     0073                     ??_Lcd_Configuration:	
   579                           ; 1 bytes @ 0x3
   580                           
   581     0073                     Lcd_Print@x:	
   582                           ; 1 bytes @ 0x3
   583                           
   584                           
   585                           ; 1 bytes @ 0x3
   586     0073                     	ds	1
   587     0074                     ??___awdiv:
   588     0074                     ??___awmod:	
   589                           ; 1 bytes @ 0x4
   590                           
   591     0074                     I2C_Sent_Data@data:	
   592                           ; 1 bytes @ 0x4
   593                           
   594     0074                     ___awdiv@counter:	
   595                           ; 1 bytes @ 0x4
   596                           
   597     0074                     ___awmod@counter:	
   598                           ; 1 bytes @ 0x4
   599                           
   600                           
   601                           ; 1 bytes @ 0x4
   602     0074                     	ds	1
   603     0075                     ??_I2C_Data_Write:
   604     0075                     ?_I2C_Device_Select_W:	
   605                           ; 1 bytes @ 0x5
   606                           
   607     0075                     ?_I2C_Device_Select_R:	
   608                           ; 2 bytes @ 0x5
   609                           
   610     0075                     I2C_Device_Select_W@Reg_add:	
   611                           ; 2 bytes @ 0x5
   612                           
   613     0075                     I2C_Device_Select_R@Reg_add:	
   614                           ; 1 bytes @ 0x5
   615                           
   616     0075                     I2C_Data_Write@data:	
   617                           ; 1 bytes @ 0x5
   618                           
   619     0075                     ___awdiv@sign:	
   620                           ; 1 bytes @ 0x5
   621                           
   622     0075                     ___awmod@sign:	
   623                           ; 1 bytes @ 0x5
   624                           
   625                           
   626                           ; 1 bytes @ 0x5
   627     0075                     	ds	1
   628     0076                     ??_I2C_Device_Select_W:
   629     0076                     ??_Hour_Conversion:	
   630                           ; 1 bytes @ 0x6
   631                           
   632     0076                     ??_I2C_Device_Select_R:	
   633                           ; 1 bytes @ 0x6
   634                           
   635     0076                     I2C_Device_Select_W@Device_add:	
   636                           ; 1 bytes @ 0x6
   637                           
   638     0076                     I2C_Device_Select_R@Device_add:	
   639                           ; 1 bytes @ 0x6
   640                           
   641     0076                     ___awdiv@quotient:	
   642                           ; 1 bytes @ 0x6
   643                           
   644                           
   645                           ; 2 bytes @ 0x6
   646     0076                     	ds	2
   647     0078                     Bcd_Conversion@value:
   648     0078                     Hour_Conversion@hrs:	
   649                           ; 1 bytes @ 0x8
   650                           
   651                           
   652                           ; 1 bytes @ 0x8
   653     0078                     	ds	1
   654     0079                     ??_Set_Seconds:
   655     0079                     ??_Set_Minute:	
   656                           ; 1 bytes @ 0x9
   657                           
   658     0079                     ?_Set_Standard_Hour:	
   659                           ; 1 bytes @ 0x9
   660                           
   661     0079                     ??_Set_Railway_Hour:	
   662                           ; 1 bytes @ 0x9
   663                           
   664     0079                     ??_Set_Date:	
   665                           ; 1 bytes @ 0x9
   666                           
   667     0079                     ??_Set_Month:	
   668                           ; 1 bytes @ 0x9
   669                           
   670     0079                     ??_Set_Year:	
   671                           ; 1 bytes @ 0x9
   672                           
   673     0079                     Set_Date@Date:	
   674                           ; 1 bytes @ 0x9
   675                           
   676     0079                     Set_Month@Month:	
   677                           ; 1 bytes @ 0x9
   678                           
   679     0079                     Set_Year@Year:	
   680                           ; 1 bytes @ 0x9
   681                           
   682     0079                     Set_Standard_Hour@C:	
   683                           ; 1 bytes @ 0x9
   684                           
   685     0079                     Set_Railway_Hour@hrs:	
   686                           ; 1 bytes @ 0x9
   687                           
   688     0079                     Set_Minute@min:	
   689                           ; 1 bytes @ 0x9
   690                           
   691     0079                     Set_Seconds@seconds:	
   692                           ; 1 bytes @ 0x9
   693                           
   694                           
   695                           ; 1 bytes @ 0x9
   696     0079                     	ds	1
   697     007A                     ??_Set_Standard_Hour:
   698     007A                     Set_Standard_Hour@hrs:	
   699                           ; 1 bytes @ 0xA
   700                           
   701                           
   702                           ; 1 bytes @ 0xA
   703     007A                     	ds	1
   704     007B                     _Set_Standard_Hour$265:
   705                           
   706                           ; 2 bytes @ 0xB
   707     007B                     	ds	2
   708     007D                     Set_Standard_Hour@temp:
   709                           
   710                           ; 1 bytes @ 0xD
   711     007D                     	ds	1
   712     007E                     ??_Set_Time_Calender:
   713     007E                     ??_main:	
   714                           ; 1 bytes @ 0xE
   715                           
   716                           
   717                           	psect	cstackBANK0
   718     0048                     __pcstackBANK0:	
   719                           ; 1 bytes @ 0xE
   720                           
   721     0048                     ??_Bcd_Conversion:
   722                           
   723                           ; 1 bytes @ 0x0
   724     0048                     	ds	7
   725     004F                     ?_Set_Time_Calender:
   726     004F                     Set_Time_Calender@Min:	
   727                           ; 1 bytes @ 0x7
   728                           
   729                           
   730                           ; 1 bytes @ 0x7
   731     004F                     	ds	1
   732     0050                     Set_Time_Calender@Mode:
   733                           
   734                           ; 1 bytes @ 0x8
   735     0050                     	ds	1
   736     0051                     Set_Time_Calender@Hour:
   737                           
   738                           ; 1 bytes @ 0x9
   739     0051                     	ds	1
   740     0052                     Set_Time_Calender@Day:
   741                           
   742                           ; 1 bytes @ 0xA
   743     0052                     	ds	1
   744     0053                     Set_Time_Calender@Month:
   745                           
   746                           ; 1 bytes @ 0xB
   747     0053                     	ds	1
   748     0054                     Set_Time_Calender@Year:
   749                           
   750                           ; 1 bytes @ 0xC
   751     0054                     	ds	1
   752     0055                     Set_Time_Calender@Date:
   753                           
   754                           ; 1 bytes @ 0xD
   755     0055                     	ds	1
   756     0056                     Set_Time_Calender@Sec:
   757                           
   758                           ; 1 bytes @ 0xE
   759     0056                     	ds	1
   760                           
   761                           	psect	maintext
   762     0773                     __pmaintext:	
   763 ;;
   764 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   765 ;;
   766 ;; *************** function _main *****************
   767 ;; Defined at:
   768 ;;		line 41 in file "RTC.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;		None
   771 ;; Auto vars:     Size  Location     Type
   772 ;;		None
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : B00/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   782 ;;      Params:         0       0       0       0       0
   783 ;;      Locals:         0       0       0       0       0
   784 ;;      Temps:          0       0       0       0       0
   785 ;;      Totals:         0       0       0       0       0
   786 ;;Total ram usage:        0 bytes
   787 ;; Hardware stack levels required when called: 4
   788 ;; This function calls:
   789 ;;		_I2C_Device_Select_R
   790 ;;		_I2C_Master_Init
   791 ;;		_I2C_Start
   792 ;;		_I2C_Stop
   793 ;;		_Lcd_Cmd
   794 ;;		_Lcd_Configuration
   795 ;;		_Lcd_Print
   796 ;;		_Read_Date
   797 ;;		_Read_Time
   798 ;;		_Set_Time_Calender
   799 ;; This function is called by:
   800 ;;		Startup code after reset
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804     0773                     _main:	
   805                           ;psect for function _main
   806                           
   807     0773                     l1735:	
   808                           ;incstack = 0
   809                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   810                           
   811                           
   812                           ;RTC.c: 45:     I2C_Master_Init();
   813     0773  120A  118A  233B  120A  118A  	fcall	_I2C_Master_Init
   814                           
   815                           ;RTC.c: 47:     I2C_Start();
   816     0778  120A  118A  22EF  120A  118A  	fcall	_I2C_Start
   817     077D                     l1737:
   818                           
   819                           ;RTC.c: 49:     Set_Time_Calender(Sec,Min,Mode,Hour,Day,Month,Year,Date);
   820     077D  3037               	movlw	55
   821     077E  1283               	bcf	3,5	;RP0=0, select bank0
   822     077F  1303               	bcf	3,6	;RP1=0, select bank0
   823     0780  00CF               	movwf	Set_Time_Calender@Min
   824     0781  3050               	movlw	80
   825     0782  00D0               	movwf	Set_Time_Calender@Mode
   826     0783  3008               	movlw	8
   827     0784  00D1               	movwf	Set_Time_Calender@Hour
   828     0785  3003               	movlw	3
   829     0786  00D2               	movwf	Set_Time_Calender@Day
   830     0787  300C               	movlw	12
   831     0788  00D3               	movwf	Set_Time_Calender@Month
   832     0789  301E               	movlw	30
   833     078A  00D4               	movwf	Set_Time_Calender@Year
   834     078B  3016               	movlw	22
   835     078C  00D5               	movwf	Set_Time_Calender@Date
   836     078D  3021               	movlw	33
   837     078E  120A  118A  26FA  120A  118A  	fcall	_Set_Time_Calender
   838     0793                     l1739:
   839                           
   840                           ;RTC.c: 51:     I2C_Stop();
   841     0793  120A  118A  22F8  120A  118A  	fcall	_I2C_Stop
   842                           
   843                           ;RTC.c: 55:     Lcd_Configuration();
   844     0798  120A  118A  250E  120A  118A  	fcall	_Lcd_Configuration
   845                           
   846                           ;RTC.c: 57:     Lcd_Cmd(0x80);
   847     079D  3080               	movlw	128
   848     079E  120A  118A  2398  120A  118A  	fcall	_Lcd_Cmd
   849     07A3                     l1741:
   850                           
   851                           ;RTC.c: 59:     Lcd_Print(Time);
   852     07A3  3042               	movlw	(low (_Time| 0))& (0+255)
   853     07A4  120A  118A  2381  120A  118A  	fcall	_Lcd_Print
   854     07A9                     l1743:
   855                           
   856                           ;RTC.c: 61:     Lcd_Cmd(0xC0);
   857     07A9  30C0               	movlw	192
   858     07AA  120A  118A  2398  120A  118A  	fcall	_Lcd_Cmd
   859                           
   860                           ;RTC.c: 63:     Lcd_Print(DATE);
   861     07AF  303C               	movlw	(low (_DATE| 0))& (0+255)
   862     07B0  120A  118A  2381  120A  118A  	fcall	_Lcd_Print
   863     07B5                     l1745:
   864                           
   865                           ;RTC.c: 70:     I2C_Start();
   866     07B5  120A  118A  22EF  120A  118A  	fcall	_I2C_Start
   867     07BA                     l1747:
   868                           
   869                           ;RTC.c: 72:     I2C_Device_Select_R((unsigned char)0xD0 ,(unsigned char) 0x00);
   870     07BA  01F5               	clrf	I2C_Device_Select_R@Reg_add
   871     07BB  30D0               	movlw	208
   872     07BC  120A  118A  246F  120A  118A  	fcall	_I2C_Device_Select_R
   873     07C1                     l1749:
   874                           
   875                           ;RTC.c: 74:     Read_Time();
   876     07C1  120A  118A  2688  120A  118A  	fcall	_Read_Time
   877     07C6                     l1751:
   878                           
   879                           ;RTC.c: 76:     Read_Date();
   880     07C6  120A  118A  25BE  120A  118A  	fcall	_Read_Date
   881     07CB                     l1753:
   882                           
   883                           ;RTC.c: 78:     I2C_Stop();
   884     07CB  120A  118A  22F8  120A  118A  	fcall	_I2C_Stop
   885     07D0                     l1755:
   886                           
   887                           ;RTC.c: 81:     Lcd_Cmd(0x85);
   888     07D0  3085               	movlw	133
   889     07D1  120A  118A  2398  120A  118A  	fcall	_Lcd_Cmd
   890     07D6                     l1757:
   891                           
   892                           ;RTC.c: 83:     Lcd_Print(Current_Time);
   893     07D6  3028               	movlw	(low (_Current_Time| 0))& (0+255)
   894     07D7  120A  118A  2381  120A  118A  	fcall	_Lcd_Print
   895     07DC                     l1759:
   896                           
   897                           ;RTC.c: 85:     Lcd_Cmd(0xC5);
   898     07DC  30C5               	movlw	197
   899     07DD  120A  118A  2398  120A  118A  	fcall	_Lcd_Cmd
   900     07E2                     l1761:
   901                           
   902                           ;RTC.c: 87:     Lcd_Print(Current_Date);
   903     07E2  3033               	movlw	(low (_Current_Date| 0))& (0+255)
   904     07E3  120A  118A  2381  120A  118A  	fcall	_Lcd_Print
   905     07E8  2FB5               	goto	l1745
   906     07E9  120A  118A  2800   	ljmp	start
   907     07EC                     __end_of_main:
   908                           
   909                           	psect	text1
   910     06FA                     __ptext1:	
   911 ;; *************** function _Set_Time_Calender *****************
   912 ;; Defined at:
   913 ;;		line 157 in file "./RTC.h"
   914 ;; Parameters:    Size  Location     Type
   915 ;;  Sec             1    wreg     unsigned char 
   916 ;;  Min             1    7[BANK0 ] unsigned char 
   917 ;;  Mode            1    8[BANK0 ] unsigned char 
   918 ;;  Hour            1    9[BANK0 ] unsigned char 
   919 ;;  Day             1   10[BANK0 ] unsigned char 
   920 ;;  Month           1   11[BANK0 ] unsigned char 
   921 ;;  Year            1   12[BANK0 ] unsigned char 
   922 ;;  Date            1   13[BANK0 ] unsigned char 
   923 ;; Auto vars:     Size  Location     Type
   924 ;;  Sec             1   14[BANK0 ] unsigned char 
   925 ;; Return value:  Size  Location     Type
   926 ;;                  1    wreg      void 
   927 ;; Registers used:
   928 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   934 ;;      Params:         0       7       0       0       0
   935 ;;      Locals:         0       1       0       0       0
   936 ;;      Temps:          0       0       0       0       0
   937 ;;      Totals:         0       8       0       0       0
   938 ;;Total ram usage:        8 bytes
   939 ;; Hardware stack levels used: 1
   940 ;; Hardware stack levels required when called: 3
   941 ;; This function calls:
   942 ;;		_I2C_Data_Write
   943 ;;		_I2C_Device_Select_W
   944 ;;		_Set_Date
   945 ;;		_Set_Day
   946 ;;		_Set_Minute
   947 ;;		_Set_Month
   948 ;;		_Set_Railway_Hour
   949 ;;		_Set_Seconds
   950 ;;		_Set_Standard_Hour
   951 ;;		_Set_Year
   952 ;; This function is called by:
   953 ;;		_main
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957     06FA                     _Set_Time_Calender:	
   958                           ;psect for function _Set_Time_Calender
   959                           
   960                           
   961                           ;incstack = 0
   962                           ; Regs used in _Set_Time_Calender: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   963                           ;Set_Time_Calender@Sec stored from wreg
   964     06FA  1283               	bcf	3,5	;RP0=0, select bank0
   965     06FB  1303               	bcf	3,6	;RP1=0, select bank0
   966     06FC  00D6               	movwf	Set_Time_Calender@Sec
   967     06FD                     l1667:
   968                           
   969                           ;./RTC.h: 159:     I2C_Device_Select_W((unsigned char)0xD0 ,(unsigned char) 0x00);
   970     06FD  01F5               	clrf	I2C_Device_Select_W@Reg_add
   971     06FE  30D0               	movlw	208
   972     06FF  120A  118A  23E3  120A  118A  	fcall	_I2C_Device_Select_W
   973     0704                     l1669:
   974                           
   975                           ;./RTC.h: 161:     I2C_Data_Write(Set_Seconds(Sec));
   976     0704  1283               	bcf	3,5	;RP0=0, select bank0
   977     0705  1303               	bcf	3,6	;RP1=0, select bank0
   978     0706  0856               	movf	Set_Time_Calender@Sec,w
   979     0707  120A  118A  22D6  120A  118A  	fcall	_Set_Seconds
   980     070C  120A  118A  22B6  120A  118A  	fcall	_I2C_Data_Write
   981     0711                     l1671:
   982                           
   983                           ;./RTC.h: 163:     I2C_Data_Write(Set_Minute(Min));
   984     0711  1283               	bcf	3,5	;RP0=0, select bank0
   985     0712  1303               	bcf	3,6	;RP1=0, select bank0
   986     0713  084F               	movf	Set_Time_Calender@Min,w
   987     0714  120A  118A  22C6  120A  118A  	fcall	_Set_Minute
   988     0719  120A  118A  22B6  120A  118A  	fcall	_I2C_Data_Write
   989     071E                     l1673:
   990                           
   991                           ;./RTC.h: 165:     if(Mode){
   992     071E  1283               	bcf	3,5	;RP0=0, select bank0
   993     071F  1303               	bcf	3,6	;RP1=0, select bank0
   994     0720  0850               	movf	Set_Time_Calender@Mode,w
   995     0721  1903               	btfsc	3,2
   996     0722  2F24               	goto	u871
   997     0723  2F25               	goto	u870
   998     0724                     u871:
   999     0724  2F33               	goto	l1677
  1000     0725                     u870:
  1001     0725                     l1675:
  1002                           
  1003                           ;./RTC.h: 166:     I2C_Data_Write(Set_Standard_Hour(Hour,Mode));
  1004     0725  0850               	movf	Set_Time_Calender@Mode,w
  1005     0726  00F9               	movwf	Set_Standard_Hour@C
  1006     0727  0851               	movf	Set_Time_Calender@Hour,w
  1007     0728  120A  118A  23C9  120A  118A  	fcall	_Set_Standard_Hour
  1008     072D  120A  118A  22B6  120A  118A  	fcall	_I2C_Data_Write
  1009                           
  1010                           ;./RTC.h: 167:     }
  1011     0732  2F3E               	goto	l1679
  1012     0733                     l1677:
  1013                           
  1014                           ;./RTC.h: 169:     I2C_Data_Write(Set_Railway_Hour(Hour));
  1015     0733  0851               	movf	Set_Time_Calender@Hour,w
  1016     0734  120A  118A  2301  120A  118A  	fcall	_Set_Railway_Hour
  1017     0739  120A  118A  22B6  120A  118A  	fcall	_I2C_Data_Write
  1018     073E                     l1679:
  1019                           
  1020                           ;./RTC.h: 172:     I2C_Data_Write(Set_Day(Day));
  1021     073E  1283               	bcf	3,5	;RP0=0, select bank0
  1022     073F  1303               	bcf	3,6	;RP1=0, select bank0
  1023     0740  0852               	movf	Set_Time_Calender@Day,w
  1024     0741  120A  118A  22AE  120A  118A  	fcall	_Set_Day
  1025     0746  120A  118A  22B6  120A  118A  	fcall	_I2C_Data_Write
  1026     074B                     l1681:
  1027                           
  1028                           ;./RTC.h: 174:     I2C_Data_Write(Set_Date(Date));
  1029     074B  1283               	bcf	3,5	;RP0=0, select bank0
  1030     074C  1303               	bcf	3,6	;RP1=0, select bank0
  1031     074D  0855               	movf	Set_Time_Calender@Date,w
  1032     074E  120A  118A  22BE  120A  118A  	fcall	_Set_Date
  1033     0753  120A  118A  22B6  120A  118A  	fcall	_I2C_Data_Write
  1034     0758                     l1683:
  1035                           
  1036                           ;./RTC.h: 176:     I2C_Data_Write(Set_Month(Month));
  1037     0758  1283               	bcf	3,5	;RP0=0, select bank0
  1038     0759  1303               	bcf	3,6	;RP1=0, select bank0
  1039     075A  0853               	movf	Set_Time_Calender@Month,w
  1040     075B  120A  118A  22CE  120A  118A  	fcall	_Set_Month
  1041     0760  120A  118A  22B6  120A  118A  	fcall	_I2C_Data_Write
  1042     0765                     l1685:
  1043                           
  1044                           ;./RTC.h: 178:     I2C_Data_Write(Set_Year(Year));
  1045     0765  1283               	bcf	3,5	;RP0=0, select bank0
  1046     0766  1303               	bcf	3,6	;RP1=0, select bank0
  1047     0767  0854               	movf	Set_Time_Calender@Year,w
  1048     0768  120A  118A  22DE  120A  118A  	fcall	_Set_Year
  1049     076D  120A  118A  22B6  120A  118A  	fcall	_I2C_Data_Write
  1050     0772                     l224:
  1051     0772  0008               	return
  1052     0773                     __end_of_Set_Time_Calender:
  1053                           
  1054                           	psect	text2
  1055     02DE                     __ptext2:	
  1056 ;; *************** function _Set_Year *****************
  1057 ;; Defined at:
  1058 ;;		line 194 in file "./RTC.h"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;  Year            1    wreg     unsigned char 
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;  Year            1    9[COMMON] unsigned char 
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      unsigned char 
  1065 ;; Registers used:
  1066 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1072 ;;      Params:         0       0       0       0       0
  1073 ;;      Locals:         1       0       0       0       0
  1074 ;;      Temps:          0       0       0       0       0
  1075 ;;      Totals:         1       0       0       0       0
  1076 ;;Total ram usage:        1 bytes
  1077 ;; Hardware stack levels used: 1
  1078 ;; Hardware stack levels required when called: 2
  1079 ;; This function calls:
  1080 ;;		_Bcd_Conversion
  1081 ;; This function is called by:
  1082 ;;		_Set_Time_Calender
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086     02DE                     _Set_Year:	
  1087                           ;psect for function _Set_Year
  1088                           
  1089                           
  1090                           ;incstack = 0
  1091                           ; Regs used in _Set_Year: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1092                           ;Set_Year@Year stored from wreg
  1093     02DE  00F9               	movwf	Set_Year@Year
  1094     02DF                     l1605:
  1095                           
  1096                           ;./RTC.h: 195:     return Bcd_Conversion(Year);
  1097     02DF  0879               	movf	Set_Year@Year,w
  1098     02E0  120A  118A  24D7  120A  118A  	fcall	_Bcd_Conversion
  1099     02E5                     l233:
  1100     02E5  0008               	return
  1101     02E6                     __end_of_Set_Year:
  1102                           
  1103                           	psect	text3
  1104     03C9                     __ptext3:	
  1105 ;; *************** function _Set_Standard_Hour *****************
  1106 ;; Defined at:
  1107 ;;		line 199 in file "./RTC.h"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;  hrs             1    wreg     unsigned char 
  1110 ;;  C               1    9[COMMON] unsigned char 
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;  hrs             1   10[COMMON] unsigned char 
  1113 ;;  temp            1   13[COMMON] unsigned char 
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1    wreg      unsigned char 
  1116 ;; Registers used:
  1117 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1123 ;;      Params:         1       0       0       0       0
  1124 ;;      Locals:         4       0       0       0       0
  1125 ;;      Temps:          0       0       0       0       0
  1126 ;;      Totals:         5       0       0       0       0
  1127 ;;Total ram usage:        5 bytes
  1128 ;; Hardware stack levels used: 1
  1129 ;; Hardware stack levels required when called: 2
  1130 ;; This function calls:
  1131 ;;		_Hour_Conversion
  1132 ;; This function is called by:
  1133 ;;		_Set_Time_Calender
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137     03C9                     _Set_Standard_Hour:	
  1138                           ;psect for function _Set_Standard_Hour
  1139                           
  1140                           
  1141                           ;incstack = 0
  1142                           ; Regs used in _Set_Standard_Hour: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1143                           ;Set_Standard_Hour@hrs stored from wreg
  1144     03C9  00FA               	movwf	Set_Standard_Hour@hrs
  1145     03CA                     l1579:
  1146                           
  1147                           ;./RTC.h: 201:  unsigned char temp;;./RTC.h: 203: temp=(C=='P')?0x60:0x40;
  1148     03CA  3050               	movlw	80
  1149     03CB  0679               	xorwf	Set_Standard_Hour@C,w
  1150     03CC  1903               	btfsc	3,2
  1151     03CD  2BCF               	goto	u821
  1152     03CE  2BD0               	goto	u820
  1153     03CF                     u821:
  1154     03CF  2BD5               	goto	l1583
  1155     03D0                     u820:
  1156     03D0                     l1581:
  1157     03D0  3040               	movlw	64
  1158     03D1  00FB               	movwf	_Set_Standard_Hour$265
  1159     03D2  3000               	movlw	0
  1160     03D3  00FC               	movwf	_Set_Standard_Hour$265+1
  1161     03D4  2BD9               	goto	l239
  1162     03D5                     l1583:
  1163     03D5  3060               	movlw	96
  1164     03D6  00FB               	movwf	_Set_Standard_Hour$265
  1165     03D7  3000               	movlw	0
  1166     03D8  00FC               	movwf	_Set_Standard_Hour$265+1
  1167     03D9                     l239:
  1168     03D9  087B               	movf	_Set_Standard_Hour$265,w
  1169     03DA  00FD               	movwf	Set_Standard_Hour@temp
  1170     03DB                     l1585:
  1171                           
  1172                           ;./RTC.h: 205: return Hour_Conversion(hrs)|temp;
  1173     03DB  087A               	movf	Set_Standard_Hour@hrs,w
  1174     03DC  120A  118A  24A2  120A  118A  	fcall	_Hour_Conversion
  1175     03E1  047D               	iorwf	Set_Standard_Hour@temp,w
  1176     03E2                     l240:
  1177     03E2  0008               	return
  1178     03E3                     __end_of_Set_Standard_Hour:
  1179                           
  1180                           	psect	text4
  1181     02D6                     __ptext4:	
  1182 ;; *************** function _Set_Seconds *****************
  1183 ;; Defined at:
  1184 ;;		line 228 in file "./RTC.h"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;  seconds         1    wreg     unsigned char 
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;  seconds         1    9[COMMON] unsigned char 
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      unsigned char 
  1191 ;; Registers used:
  1192 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1198 ;;      Params:         0       0       0       0       0
  1199 ;;      Locals:         1       0       0       0       0
  1200 ;;      Temps:          0       0       0       0       0
  1201 ;;      Totals:         1       0       0       0       0
  1202 ;;Total ram usage:        1 bytes
  1203 ;; Hardware stack levels used: 1
  1204 ;; Hardware stack levels required when called: 2
  1205 ;; This function calls:
  1206 ;;		_Bcd_Conversion
  1207 ;; This function is called by:
  1208 ;;		_Set_Time_Calender
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212     02D6                     _Set_Seconds:	
  1213                           ;psect for function _Set_Seconds
  1214                           
  1215                           
  1216                           ;incstack = 0
  1217                           ; Regs used in _Set_Seconds: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1218                           ;Set_Seconds@seconds stored from wreg
  1219     02D6  00F9               	movwf	Set_Seconds@seconds
  1220     02D7                     l1571:
  1221                           
  1222                           ;./RTC.h: 230:  return Bcd_Conversion(seconds);
  1223     02D7  0879               	movf	Set_Seconds@seconds,w
  1224     02D8  120A  118A  24D7  120A  118A  	fcall	_Bcd_Conversion
  1225     02DD                     l252:
  1226     02DD  0008               	return
  1227     02DE                     __end_of_Set_Seconds:
  1228                           
  1229                           	psect	text5
  1230     0301                     __ptext5:	
  1231 ;; *************** function _Set_Railway_Hour *****************
  1232 ;; Defined at:
  1233 ;;		line 209 in file "./RTC.h"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;  hrs             1    wreg     unsigned char 
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;  hrs             1    9[COMMON] unsigned char 
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      unsigned char 
  1240 ;; Registers used:
  1241 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1247 ;;      Params:         0       0       0       0       0
  1248 ;;      Locals:         1       0       0       0       0
  1249 ;;      Temps:          0       0       0       0       0
  1250 ;;      Totals:         1       0       0       0       0
  1251 ;;Total ram usage:        1 bytes
  1252 ;; Hardware stack levels used: 1
  1253 ;; Hardware stack levels required when called: 2
  1254 ;; This function calls:
  1255 ;;		_Hour_Conversion
  1256 ;; This function is called by:
  1257 ;;		_Set_Time_Calender
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261     0301                     _Set_Railway_Hour:	
  1262                           ;psect for function _Set_Railway_Hour
  1263                           
  1264                           
  1265                           ;incstack = 0
  1266                           ; Regs used in _Set_Railway_Hour: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1267                           ;Set_Railway_Hour@hrs stored from wreg
  1268     0301  00F9               	movwf	Set_Railway_Hour@hrs
  1269     0302                     l1589:
  1270                           
  1271                           ;./RTC.h: 211: return (Hour_Conversion(hrs)&0x3F);
  1272     0302  0879               	movf	Set_Railway_Hour@hrs,w
  1273     0303  120A  118A  24A2  120A  118A  	fcall	_Hour_Conversion
  1274     0308  393F               	andlw	63
  1275     0309                     l243:
  1276     0309  0008               	return
  1277     030A                     __end_of_Set_Railway_Hour:
  1278                           
  1279                           	psect	text6
  1280     04A2                     __ptext6:	
  1281 ;; *************** function _Hour_Conversion *****************
  1282 ;; Defined at:
  1283 ;;		line 239 in file "./RTC.h"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;  hrs             1    wreg     unsigned char 
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;  hrs             1    8[COMMON] unsigned char 
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      unsigned char 
  1290 ;; Registers used:
  1291 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1297 ;;      Params:         0       0       0       0       0
  1298 ;;      Locals:         1       0       0       0       0
  1299 ;;      Temps:          2       0       0       0       0
  1300 ;;      Totals:         3       0       0       0       0
  1301 ;;Total ram usage:        3 bytes
  1302 ;; Hardware stack levels used: 1
  1303 ;; Hardware stack levels required when called: 1
  1304 ;; This function calls:
  1305 ;;		___awmod
  1306 ;; This function is called by:
  1307 ;;		_Set_Standard_Hour
  1308 ;;		_Set_Railway_Hour
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312     04A2                     _Hour_Conversion:	
  1313                           ;psect for function _Hour_Conversion
  1314                           
  1315                           
  1316                           ;incstack = 0
  1317                           ; Regs used in _Hour_Conversion: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1318                           ;Hour_Conversion@hrs stored from wreg
  1319     04A2  00F8               	movwf	Hour_Conversion@hrs
  1320     04A3                     l1449:
  1321                           
  1322                           ;./RTC.h: 241: if( hrs >= 20){
  1323     04A3  3014               	movlw	20
  1324     04A4  0278               	subwf	Hour_Conversion@hrs,w
  1325     04A5  1C03               	skipc
  1326     04A6  2CA8               	goto	u701
  1327     04A7  2CA9               	goto	u700
  1328     04A8                     u701:
  1329     04A8  2CBC               	goto	l1457
  1330     04A9                     u700:
  1331     04A9                     l1451:
  1332                           
  1333                           ;./RTC.h: 242:     return (unsigned char) (1<<5 | hrs%10);
  1334     04A9  300A               	movlw	10
  1335     04AA  00F0               	movwf	___awmod@divisor
  1336     04AB  3000               	movlw	0
  1337     04AC  00F1               	movwf	___awmod@divisor+1
  1338     04AD  0878               	movf	Hour_Conversion@hrs,w
  1339     04AE  00F6               	movwf	??_Hour_Conversion
  1340     04AF  01F7               	clrf	??_Hour_Conversion+1
  1341     04B0  0876               	movf	??_Hour_Conversion,w
  1342     04B1  00F2               	movwf	___awmod@dividend
  1343     04B2  0877               	movf	??_Hour_Conversion+1,w
  1344     04B3  00F3               	movwf	___awmod@dividend+1
  1345     04B4  120A  118A  2565  120A  118A  	fcall	___awmod
  1346     04B9  0870               	movf	?___awmod,w
  1347     04BA  3820               	iorlw	32
  1348     04BB  2CD6               	goto	l259
  1349     04BC                     l1457:
  1350     04BC  300A               	movlw	10
  1351     04BD  0278               	subwf	Hour_Conversion@hrs,w
  1352     04BE  1C03               	skipc
  1353     04BF  2CC1               	goto	u711
  1354     04C0  2CC2               	goto	u710
  1355     04C1                     u711:
  1356     04C1  2CD5               	goto	l1463
  1357     04C2                     u710:
  1358     04C2                     l1459:
  1359                           
  1360                           ;./RTC.h: 245:  return (unsigned char)((1<<4 | hrs%10));
  1361     04C2  300A               	movlw	10
  1362     04C3  00F0               	movwf	___awmod@divisor
  1363     04C4  3000               	movlw	0
  1364     04C5  00F1               	movwf	___awmod@divisor+1
  1365     04C6  0878               	movf	Hour_Conversion@hrs,w
  1366     04C7  00F6               	movwf	??_Hour_Conversion
  1367     04C8  01F7               	clrf	??_Hour_Conversion+1
  1368     04C9  0876               	movf	??_Hour_Conversion,w
  1369     04CA  00F2               	movwf	___awmod@dividend
  1370     04CB  0877               	movf	??_Hour_Conversion+1,w
  1371     04CC  00F3               	movwf	___awmod@dividend+1
  1372     04CD  120A  118A  2565  120A  118A  	fcall	___awmod
  1373     04D2  0870               	movf	?___awmod,w
  1374     04D3  3810               	iorlw	16
  1375     04D4  2CD6               	goto	l259
  1376     04D5                     l1463:
  1377                           
  1378                           ;./RTC.h: 247:  return hrs;
  1379     04D5  0878               	movf	Hour_Conversion@hrs,w
  1380     04D6                     l259:
  1381     04D6  0008               	return
  1382     04D7                     __end_of_Hour_Conversion:
  1383                           
  1384                           	psect	text7
  1385     02CE                     __ptext7:	
  1386 ;; *************** function _Set_Month *****************
  1387 ;; Defined at:
  1388 ;;		line 189 in file "./RTC.h"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;  Month           1    wreg     unsigned char 
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;  Month           1    9[COMMON] unsigned char 
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  1    wreg      unsigned char 
  1395 ;; Registers used:
  1396 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1402 ;;      Params:         0       0       0       0       0
  1403 ;;      Locals:         1       0       0       0       0
  1404 ;;      Temps:          0       0       0       0       0
  1405 ;;      Totals:         1       0       0       0       0
  1406 ;;Total ram usage:        1 bytes
  1407 ;; Hardware stack levels used: 1
  1408 ;; Hardware stack levels required when called: 2
  1409 ;; This function calls:
  1410 ;;		_Bcd_Conversion
  1411 ;; This function is called by:
  1412 ;;		_Set_Time_Calender
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416     02CE                     _Set_Month:	
  1417                           ;psect for function _Set_Month
  1418                           
  1419                           
  1420                           ;incstack = 0
  1421                           ; Regs used in _Set_Month: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1422                           ;Set_Month@Month stored from wreg
  1423     02CE  00F9               	movwf	Set_Month@Month
  1424     02CF                     l1601:
  1425                           
  1426                           ;./RTC.h: 190:     return Bcd_Conversion(Month);
  1427     02CF  0879               	movf	Set_Month@Month,w
  1428     02D0  120A  118A  24D7  120A  118A  	fcall	_Bcd_Conversion
  1429     02D5                     l230:
  1430     02D5  0008               	return
  1431     02D6                     __end_of_Set_Month:
  1432                           
  1433                           	psect	text8
  1434     02C6                     __ptext8:	
  1435 ;; *************** function _Set_Minute *****************
  1436 ;; Defined at:
  1437 ;;		line 215 in file "./RTC.h"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;  min             1    wreg     unsigned char 
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;  min             1    9[COMMON] unsigned char 
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      unsigned char 
  1444 ;; Registers used:
  1445 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1451 ;;      Params:         0       0       0       0       0
  1452 ;;      Locals:         1       0       0       0       0
  1453 ;;      Temps:          0       0       0       0       0
  1454 ;;      Totals:         1       0       0       0       0
  1455 ;;Total ram usage:        1 bytes
  1456 ;; Hardware stack levels used: 1
  1457 ;; Hardware stack levels required when called: 2
  1458 ;; This function calls:
  1459 ;;		_Bcd_Conversion
  1460 ;; This function is called by:
  1461 ;;		_Set_Time_Calender
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465     02C6                     _Set_Minute:	
  1466                           ;psect for function _Set_Minute
  1467                           
  1468                           
  1469                           ;incstack = 0
  1470                           ; Regs used in _Set_Minute: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1471                           ;Set_Minute@min stored from wreg
  1472     02C6  00F9               	movwf	Set_Minute@min
  1473     02C7                     l1575:
  1474                           
  1475                           ;./RTC.h: 217:  return Bcd_Conversion(min);
  1476     02C7  0879               	movf	Set_Minute@min,w
  1477     02C8  120A  118A  24D7  120A  118A  	fcall	_Bcd_Conversion
  1478     02CD                     l246:
  1479     02CD  0008               	return
  1480     02CE                     __end_of_Set_Minute:
  1481                           
  1482                           	psect	text9
  1483     02AE                     __ptext9:	
  1484 ;; *************** function _Set_Day *****************
  1485 ;; Defined at:
  1486 ;;		line 222 in file "./RTC.h"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  day             1    wreg     unsigned char 
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  day             1    0[COMMON] unsigned char 
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      unsigned char 
  1493 ;; Registers used:
  1494 ;;		wreg
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1500 ;;      Params:         0       0       0       0       0
  1501 ;;      Locals:         1       0       0       0       0
  1502 ;;      Temps:          0       0       0       0       0
  1503 ;;      Totals:         1       0       0       0       0
  1504 ;;Total ram usage:        1 bytes
  1505 ;; Hardware stack levels used: 1
  1506 ;; This function calls:
  1507 ;;		Nothing
  1508 ;; This function is called by:
  1509 ;;		_Set_Time_Calender
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513     02AE                     _Set_Day:	
  1514                           ;psect for function _Set_Day
  1515                           
  1516                           
  1517                           ;incstack = 0
  1518                           ; Regs used in _Set_Day: [wreg]
  1519                           ;Set_Day@day stored from wreg
  1520     02AE  00F0               	movwf	Set_Day@day
  1521     02AF                     l1593:
  1522                           
  1523                           ;./RTC.h: 224:     return day;
  1524     02AF  0870               	movf	Set_Day@day,w
  1525     02B0                     l249:
  1526     02B0  0008               	return
  1527     02B1                     __end_of_Set_Day:
  1528                           
  1529                           	psect	text10
  1530     02BE                     __ptext10:	
  1531 ;; *************** function _Set_Date *****************
  1532 ;; Defined at:
  1533 ;;		line 184 in file "./RTC.h"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;  Date            1    wreg     unsigned char 
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;  Date            1    9[COMMON] unsigned char 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      unsigned char 
  1540 ;; Registers used:
  1541 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1547 ;;      Params:         0       0       0       0       0
  1548 ;;      Locals:         1       0       0       0       0
  1549 ;;      Temps:          0       0       0       0       0
  1550 ;;      Totals:         1       0       0       0       0
  1551 ;;Total ram usage:        1 bytes
  1552 ;; Hardware stack levels used: 1
  1553 ;; Hardware stack levels required when called: 2
  1554 ;; This function calls:
  1555 ;;		_Bcd_Conversion
  1556 ;; This function is called by:
  1557 ;;		_Set_Time_Calender
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561     02BE                     _Set_Date:	
  1562                           ;psect for function _Set_Date
  1563                           
  1564                           
  1565                           ;incstack = 0
  1566                           ; Regs used in _Set_Date: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1567                           ;Set_Date@Date stored from wreg
  1568     02BE  00F9               	movwf	Set_Date@Date
  1569     02BF                     l1597:
  1570                           
  1571                           ;./RTC.h: 186:     return Bcd_Conversion(Date);
  1572     02BF  0879               	movf	Set_Date@Date,w
  1573     02C0  120A  118A  24D7  120A  118A  	fcall	_Bcd_Conversion
  1574     02C5                     l227:
  1575     02C5  0008               	return
  1576     02C6                     __end_of_Set_Date:
  1577                           
  1578                           	psect	text11
  1579     04D7                     __ptext11:	
  1580 ;; *************** function _Bcd_Conversion *****************
  1581 ;; Defined at:
  1582 ;;		line 235 in file "./RTC.h"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;  value           1    wreg     unsigned char 
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;  value           1    8[COMMON] unsigned char 
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      unsigned char 
  1589 ;; Registers used:
  1590 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1596 ;;      Params:         0       0       0       0       0
  1597 ;;      Locals:         1       0       0       0       0
  1598 ;;      Temps:          0       7       0       0       0
  1599 ;;      Totals:         1       7       0       0       0
  1600 ;;Total ram usage:        8 bytes
  1601 ;; Hardware stack levels used: 1
  1602 ;; Hardware stack levels required when called: 1
  1603 ;; This function calls:
  1604 ;;		___awdiv
  1605 ;;		___awmod
  1606 ;; This function is called by:
  1607 ;;		_Set_Date
  1608 ;;		_Set_Month
  1609 ;;		_Set_Year
  1610 ;;		_Set_Minute
  1611 ;;		_Set_Seconds
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615     04D7                     _Bcd_Conversion:	
  1616                           ;psect for function _Bcd_Conversion
  1617                           
  1618                           
  1619                           ;incstack = 0
  1620                           ; Regs used in _Bcd_Conversion: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1621                           ;Bcd_Conversion@value stored from wreg
  1622     04D7  00F8               	movwf	Bcd_Conversion@value
  1623     04D8                     l1445:
  1624                           
  1625                           ;./RTC.h: 236:     return (unsigned char)(((value/10)<<4)|(value%10));
  1626     04D8  300A               	movlw	10
  1627     04D9  00F0               	movwf	___awmod@divisor
  1628     04DA  3000               	movlw	0
  1629     04DB  00F1               	movwf	___awmod@divisor+1
  1630     04DC  0878               	movf	Bcd_Conversion@value,w
  1631     04DD  1283               	bcf	3,5	;RP0=0, select bank0
  1632     04DE  1303               	bcf	3,6	;RP1=0, select bank0
  1633     04DF  00C8               	movwf	??_Bcd_Conversion
  1634     04E0  01C9               	clrf	??_Bcd_Conversion+1
  1635     04E1  0848               	movf	??_Bcd_Conversion,w
  1636     04E2  00F2               	movwf	___awmod@dividend
  1637     04E3  0849               	movf	??_Bcd_Conversion+1,w
  1638     04E4  00F3               	movwf	___awmod@dividend+1
  1639     04E5  120A  118A  2565  120A  118A  	fcall	___awmod
  1640     04EA  0870               	movf	?___awmod,w
  1641     04EB  1283               	bcf	3,5	;RP0=0, select bank0
  1642     04EC  1303               	bcf	3,6	;RP1=0, select bank0
  1643     04ED  00CA               	movwf	??_Bcd_Conversion+2
  1644     04EE  0871               	movf	?___awmod+1,w
  1645     04EF  00CB               	movwf	??_Bcd_Conversion+3
  1646     04F0  300A               	movlw	10
  1647     04F1  00F0               	movwf	___awdiv@divisor
  1648     04F2  3000               	movlw	0
  1649     04F3  00F1               	movwf	___awdiv@divisor+1
  1650     04F4  0878               	movf	Bcd_Conversion@value,w
  1651     04F5  00CC               	movwf	??_Bcd_Conversion+4
  1652     04F6  01CD               	clrf	??_Bcd_Conversion+5
  1653     04F7  084C               	movf	??_Bcd_Conversion+4,w
  1654     04F8  00F2               	movwf	___awdiv@dividend
  1655     04F9  084D               	movf	??_Bcd_Conversion+5,w
  1656     04FA  00F3               	movwf	___awdiv@dividend+1
  1657     04FB  120A  118A  2621  120A  118A  	fcall	___awdiv
  1658     0500  0870               	movf	?___awdiv,w
  1659     0501  1283               	bcf	3,5	;RP0=0, select bank0
  1660     0502  1303               	bcf	3,6	;RP1=0, select bank0
  1661     0503  00CE               	movwf	??_Bcd_Conversion+6
  1662     0504  3003               	movlw	3
  1663     0505                     u695:
  1664     0505  1003               	clrc
  1665     0506  0DCE               	rlf	??_Bcd_Conversion+6,f
  1666     0507  3EFF               	addlw	-1
  1667     0508  1D03               	skipz
  1668     0509  2D05               	goto	u695
  1669     050A  1003               	clrc
  1670     050B  0D4E               	rlf	??_Bcd_Conversion+6,w
  1671     050C  044A               	iorwf	??_Bcd_Conversion+2,w
  1672     050D                     l255:
  1673     050D  0008               	return
  1674     050E                     __end_of_Bcd_Conversion:
  1675                           
  1676                           	psect	text12
  1677     0565                     __ptext12:	
  1678 ;; *************** function ___awmod *****************
  1679 ;; Defined at:
  1680 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;  divisor         2    0[COMMON] int 
  1683 ;;  dividend        2    2[COMMON] int 
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;  sign            1    5[COMMON] unsigned char 
  1686 ;;  counter         1    4[COMMON] unsigned char 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  2    0[COMMON] int 
  1689 ;; Registers used:
  1690 ;;		wreg, status,2, status,0, btemp+1
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1696 ;;      Params:         4       0       0       0       0
  1697 ;;      Locals:         2       0       0       0       0
  1698 ;;      Temps:          0       0       0       0       0
  1699 ;;      Totals:         6       0       0       0       0
  1700 ;;Total ram usage:        6 bytes
  1701 ;; Hardware stack levels used: 1
  1702 ;; This function calls:
  1703 ;;		Nothing
  1704 ;; This function is called by:
  1705 ;;		_Bcd_Conversion
  1706 ;;		_Hour_Conversion
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710     0565                     ___awmod:	
  1711                           ;psect for function ___awmod
  1712                           
  1713     0565                     l1381:	
  1714                           ;incstack = 0
  1715                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1716                           
  1717     0565  01F5               	clrf	___awmod@sign
  1718     0566                     l1383:
  1719     0566  1FF3               	btfss	___awmod@dividend+1,7
  1720     0567  2D69               	goto	u601
  1721     0568  2D6A               	goto	u600
  1722     0569                     u601:
  1723     0569  2D71               	goto	l1389
  1724     056A                     u600:
  1725     056A                     l1385:
  1726     056A  09F2               	comf	___awmod@dividend,f
  1727     056B  09F3               	comf	___awmod@dividend+1,f
  1728     056C  0AF2               	incf	___awmod@dividend,f
  1729     056D  1903               	skipnz
  1730     056E  0AF3               	incf	___awmod@dividend+1,f
  1731     056F                     l1387:
  1732     056F  01F5               	clrf	___awmod@sign
  1733     0570  0AF5               	incf	___awmod@sign,f
  1734     0571                     l1389:
  1735     0571  1FF1               	btfss	___awmod@divisor+1,7
  1736     0572  2D74               	goto	u611
  1737     0573  2D75               	goto	u610
  1738     0574                     u611:
  1739     0574  2D7A               	goto	l1393
  1740     0575                     u610:
  1741     0575                     l1391:
  1742     0575  09F0               	comf	___awmod@divisor,f
  1743     0576  09F1               	comf	___awmod@divisor+1,f
  1744     0577  0AF0               	incf	___awmod@divisor,f
  1745     0578  1903               	skipnz
  1746     0579  0AF1               	incf	___awmod@divisor+1,f
  1747     057A                     l1393:
  1748     057A  0870               	movf	___awmod@divisor,w
  1749     057B  0471               	iorwf	___awmod@divisor+1,w
  1750     057C  1903               	btfsc	3,2
  1751     057D  2D7F               	goto	u621
  1752     057E  2D80               	goto	u620
  1753     057F                     u621:
  1754     057F  2DAF               	goto	l1411
  1755     0580                     u620:
  1756     0580                     l1395:
  1757     0580  01F4               	clrf	___awmod@counter
  1758     0581  0AF4               	incf	___awmod@counter,f
  1759     0582  2D8E               	goto	l1401
  1760     0583                     l1397:
  1761     0583  3001               	movlw	1
  1762     0584                     u635:
  1763     0584  1003               	clrc
  1764     0585  0DF0               	rlf	___awmod@divisor,f
  1765     0586  0DF1               	rlf	___awmod@divisor+1,f
  1766     0587  3EFF               	addlw	-1
  1767     0588  1D03               	skipz
  1768     0589  2D84               	goto	u635
  1769     058A                     l1399:
  1770     058A  3001               	movlw	1
  1771     058B  00FF               	movwf	btemp+1
  1772     058C  087F               	movf	btemp+1,w
  1773     058D  07F4               	addwf	___awmod@counter,f
  1774     058E                     l1401:
  1775     058E  1FF1               	btfss	___awmod@divisor+1,7
  1776     058F  2D91               	goto	u641
  1777     0590  2D92               	goto	u640
  1778     0591                     u641:
  1779     0591  2D83               	goto	l1397
  1780     0592                     u640:
  1781     0592                     l1403:
  1782     0592  0871               	movf	___awmod@divisor+1,w
  1783     0593  0273               	subwf	___awmod@dividend+1,w
  1784     0594  1D03               	skipz
  1785     0595  2D98               	goto	u655
  1786     0596  0870               	movf	___awmod@divisor,w
  1787     0597  0272               	subwf	___awmod@dividend,w
  1788     0598                     u655:
  1789     0598  1C03               	skipc
  1790     0599  2D9B               	goto	u651
  1791     059A  2D9C               	goto	u650
  1792     059B                     u651:
  1793     059B  2DA2               	goto	l1407
  1794     059C                     u650:
  1795     059C                     l1405:
  1796     059C  0870               	movf	___awmod@divisor,w
  1797     059D  02F2               	subwf	___awmod@dividend,f
  1798     059E  0871               	movf	___awmod@divisor+1,w
  1799     059F  1C03               	skipc
  1800     05A0  03F3               	decf	___awmod@dividend+1,f
  1801     05A1  02F3               	subwf	___awmod@dividend+1,f
  1802     05A2                     l1407:
  1803     05A2  3001               	movlw	1
  1804     05A3                     u665:
  1805     05A3  1003               	clrc
  1806     05A4  0CF1               	rrf	___awmod@divisor+1,f
  1807     05A5  0CF0               	rrf	___awmod@divisor,f
  1808     05A6  3EFF               	addlw	-1
  1809     05A7  1D03               	skipz
  1810     05A8  2DA3               	goto	u665
  1811     05A9                     l1409:
  1812     05A9  3001               	movlw	1
  1813     05AA  02F4               	subwf	___awmod@counter,f
  1814     05AB  1D03               	btfss	3,2
  1815     05AC  2DAE               	goto	u671
  1816     05AD  2DAF               	goto	u670
  1817     05AE                     u671:
  1818     05AE  2D92               	goto	l1403
  1819     05AF                     u670:
  1820     05AF                     l1411:
  1821     05AF  0875               	movf	___awmod@sign,w
  1822     05B0  1903               	btfsc	3,2
  1823     05B1  2DB3               	goto	u681
  1824     05B2  2DB4               	goto	u680
  1825     05B3                     u681:
  1826     05B3  2DB9               	goto	l1415
  1827     05B4                     u680:
  1828     05B4                     l1413:
  1829     05B4  09F2               	comf	___awmod@dividend,f
  1830     05B5  09F3               	comf	___awmod@dividend+1,f
  1831     05B6  0AF2               	incf	___awmod@dividend,f
  1832     05B7  1903               	skipnz
  1833     05B8  0AF3               	incf	___awmod@dividend+1,f
  1834     05B9                     l1415:
  1835     05B9  0873               	movf	___awmod@dividend+1,w
  1836     05BA  00F1               	movwf	?___awmod+1
  1837     05BB  0872               	movf	___awmod@dividend,w
  1838     05BC  00F0               	movwf	?___awmod
  1839     05BD                     l563:
  1840     05BD  0008               	return
  1841     05BE                     __end_of___awmod:
  1842                           
  1843                           	psect	text13
  1844     0621                     __ptext13:	
  1845 ;; *************** function ___awdiv *****************
  1846 ;; Defined at:
  1847 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  divisor         2    0[COMMON] int 
  1850 ;;  dividend        2    2[COMMON] int 
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;  quotient        2    6[COMMON] int 
  1853 ;;  sign            1    5[COMMON] unsigned char 
  1854 ;;  counter         1    4[COMMON] unsigned char 
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  2    0[COMMON] int 
  1857 ;; Registers used:
  1858 ;;		wreg, status,2, status,0, btemp+1
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1864 ;;      Params:         4       0       0       0       0
  1865 ;;      Locals:         4       0       0       0       0
  1866 ;;      Temps:          0       0       0       0       0
  1867 ;;      Totals:         8       0       0       0       0
  1868 ;;Total ram usage:        8 bytes
  1869 ;; Hardware stack levels used: 1
  1870 ;; This function calls:
  1871 ;;		Nothing
  1872 ;; This function is called by:
  1873 ;;		_Bcd_Conversion
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877     0621                     ___awdiv:	
  1878                           ;psect for function ___awdiv
  1879                           
  1880     0621                     l1337:	
  1881                           ;incstack = 0
  1882                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1883                           
  1884     0621  01F5               	clrf	___awdiv@sign
  1885     0622                     l1339:
  1886     0622  1FF1               	btfss	___awdiv@divisor+1,7
  1887     0623  2E25               	goto	u501
  1888     0624  2E26               	goto	u500
  1889     0625                     u501:
  1890     0625  2E2D               	goto	l1345
  1891     0626                     u500:
  1892     0626                     l1341:
  1893     0626  09F0               	comf	___awdiv@divisor,f
  1894     0627  09F1               	comf	___awdiv@divisor+1,f
  1895     0628  0AF0               	incf	___awdiv@divisor,f
  1896     0629  1903               	skipnz
  1897     062A  0AF1               	incf	___awdiv@divisor+1,f
  1898     062B                     l1343:
  1899     062B  01F5               	clrf	___awdiv@sign
  1900     062C  0AF5               	incf	___awdiv@sign,f
  1901     062D                     l1345:
  1902     062D  1FF3               	btfss	___awdiv@dividend+1,7
  1903     062E  2E30               	goto	u511
  1904     062F  2E31               	goto	u510
  1905     0630                     u511:
  1906     0630  2E3A               	goto	l1351
  1907     0631                     u510:
  1908     0631                     l1347:
  1909     0631  09F2               	comf	___awdiv@dividend,f
  1910     0632  09F3               	comf	___awdiv@dividend+1,f
  1911     0633  0AF2               	incf	___awdiv@dividend,f
  1912     0634  1903               	skipnz
  1913     0635  0AF3               	incf	___awdiv@dividend+1,f
  1914     0636                     l1349:
  1915     0636  3001               	movlw	1
  1916     0637  00FF               	movwf	btemp+1
  1917     0638  087F               	movf	btemp+1,w
  1918     0639  06F5               	xorwf	___awdiv@sign,f
  1919     063A                     l1351:
  1920     063A  01F6               	clrf	___awdiv@quotient
  1921     063B  01F7               	clrf	___awdiv@quotient+1
  1922     063C                     l1353:
  1923     063C  0870               	movf	___awdiv@divisor,w
  1924     063D  0471               	iorwf	___awdiv@divisor+1,w
  1925     063E  1903               	btfsc	3,2
  1926     063F  2E41               	goto	u521
  1927     0640  2E42               	goto	u520
  1928     0641                     u521:
  1929     0641  2E79               	goto	l1373
  1930     0642                     u520:
  1931     0642                     l1355:
  1932     0642  01F4               	clrf	___awdiv@counter
  1933     0643  0AF4               	incf	___awdiv@counter,f
  1934     0644  2E50               	goto	l1361
  1935     0645                     l1357:
  1936     0645  3001               	movlw	1
  1937     0646                     u535:
  1938     0646  1003               	clrc
  1939     0647  0DF0               	rlf	___awdiv@divisor,f
  1940     0648  0DF1               	rlf	___awdiv@divisor+1,f
  1941     0649  3EFF               	addlw	-1
  1942     064A  1D03               	skipz
  1943     064B  2E46               	goto	u535
  1944     064C                     l1359:
  1945     064C  3001               	movlw	1
  1946     064D  00FF               	movwf	btemp+1
  1947     064E  087F               	movf	btemp+1,w
  1948     064F  07F4               	addwf	___awdiv@counter,f
  1949     0650                     l1361:
  1950     0650  1FF1               	btfss	___awdiv@divisor+1,7
  1951     0651  2E53               	goto	u541
  1952     0652  2E54               	goto	u540
  1953     0653                     u541:
  1954     0653  2E45               	goto	l1357
  1955     0654                     u540:
  1956     0654                     l1363:
  1957     0654  3001               	movlw	1
  1958     0655                     u555:
  1959     0655  1003               	clrc
  1960     0656  0DF6               	rlf	___awdiv@quotient,f
  1961     0657  0DF7               	rlf	___awdiv@quotient+1,f
  1962     0658  3EFF               	addlw	-1
  1963     0659  1D03               	skipz
  1964     065A  2E55               	goto	u555
  1965     065B  0871               	movf	___awdiv@divisor+1,w
  1966     065C  0273               	subwf	___awdiv@dividend+1,w
  1967     065D  1D03               	skipz
  1968     065E  2E61               	goto	u565
  1969     065F  0870               	movf	___awdiv@divisor,w
  1970     0660  0272               	subwf	___awdiv@dividend,w
  1971     0661                     u565:
  1972     0661  1C03               	skipc
  1973     0662  2E64               	goto	u561
  1974     0663  2E65               	goto	u560
  1975     0664                     u561:
  1976     0664  2E6C               	goto	l1369
  1977     0665                     u560:
  1978     0665                     l1365:
  1979     0665  0870               	movf	___awdiv@divisor,w
  1980     0666  02F2               	subwf	___awdiv@dividend,f
  1981     0667  0871               	movf	___awdiv@divisor+1,w
  1982     0668  1C03               	skipc
  1983     0669  03F3               	decf	___awdiv@dividend+1,f
  1984     066A  02F3               	subwf	___awdiv@dividend+1,f
  1985     066B                     l1367:
  1986     066B  1476               	bsf	___awdiv@quotient,0
  1987     066C                     l1369:
  1988     066C  3001               	movlw	1
  1989     066D                     u575:
  1990     066D  1003               	clrc
  1991     066E  0CF1               	rrf	___awdiv@divisor+1,f
  1992     066F  0CF0               	rrf	___awdiv@divisor,f
  1993     0670  3EFF               	addlw	-1
  1994     0671  1D03               	skipz
  1995     0672  2E6D               	goto	u575
  1996     0673                     l1371:
  1997     0673  3001               	movlw	1
  1998     0674  02F4               	subwf	___awdiv@counter,f
  1999     0675  1D03               	btfss	3,2
  2000     0676  2E78               	goto	u581
  2001     0677  2E79               	goto	u580
  2002     0678                     u581:
  2003     0678  2E54               	goto	l1363
  2004     0679                     u580:
  2005     0679                     l1373:
  2006     0679  0875               	movf	___awdiv@sign,w
  2007     067A  1903               	btfsc	3,2
  2008     067B  2E7D               	goto	u591
  2009     067C  2E7E               	goto	u590
  2010     067D                     u591:
  2011     067D  2E83               	goto	l1377
  2012     067E                     u590:
  2013     067E                     l1375:
  2014     067E  09F6               	comf	___awdiv@quotient,f
  2015     067F  09F7               	comf	___awdiv@quotient+1,f
  2016     0680  0AF6               	incf	___awdiv@quotient,f
  2017     0681  1903               	skipnz
  2018     0682  0AF7               	incf	___awdiv@quotient+1,f
  2019     0683                     l1377:
  2020     0683  0877               	movf	___awdiv@quotient+1,w
  2021     0684  00F1               	movwf	?___awdiv+1
  2022     0685  0876               	movf	___awdiv@quotient,w
  2023     0686  00F0               	movwf	?___awdiv
  2024     0687                     l550:
  2025     0687  0008               	return
  2026     0688                     __end_of___awdiv:
  2027                           
  2028                           	psect	text14
  2029     03E3                     __ptext14:	
  2030 ;; *************** function _I2C_Device_Select_W *****************
  2031 ;; Defined at:
  2032 ;;		line 78 in file "./I2C.h"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  Device_add      1    wreg     unsigned char 
  2035 ;;  Reg_add         1    5[COMMON] unsigned char 
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;  Device_add      1    6[COMMON] unsigned char 
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  2    5[COMMON] int 
  2040 ;; Registers used:
  2041 ;;		wreg, status,2, status,0, pclath, cstack
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2047 ;;      Params:         1       0       0       0       0
  2048 ;;      Locals:         1       0       0       0       0
  2049 ;;      Temps:          0       0       0       0       0
  2050 ;;      Totals:         2       0       0       0       0
  2051 ;;Total ram usage:        2 bytes
  2052 ;; Hardware stack levels used: 1
  2053 ;; Hardware stack levels required when called: 2
  2054 ;; This function calls:
  2055 ;;		_I2C_Repeat_Start
  2056 ;;		_I2C_Sent_Data
  2057 ;; This function is called by:
  2058 ;;		_Set_Time_Calender
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062     03E3                     _I2C_Device_Select_W:	
  2063                           ;psect for function _I2C_Device_Select_W
  2064                           
  2065                           
  2066                           ;incstack = 0
  2067                           ; Regs used in _I2C_Device_Select_W: [wreg+status,2+status,0+pclath+cstack]
  2068                           ;I2C_Device_Select_W@Device_add stored from wreg
  2069     03E3  00F6               	movwf	I2C_Device_Select_W@Device_add
  2070     03E4                     l1467:
  2071                           
  2072                           ;./I2C.h: 80:     while (I2C_Sent_Data((Device_add & 0xFE))) {
  2073     03E4  2BEA               	goto	l109
  2074     03E5                     l1469:
  2075                           
  2076                           ;./I2C.h: 82:         I2C_Repeat_Start();
  2077     03E5  120A  118A  22E6  120A  118A  	fcall	_I2C_Repeat_Start
  2078     03EA                     l109:	
  2079                           ;./I2C.h: 84:     }
  2080                           
  2081                           
  2082                           ;./I2C.h: 80:     while (I2C_Sent_Data((Device_add & 0xFE))) {
  2083     03EA  0876               	movf	I2C_Device_Select_W@Device_add,w
  2084     03EB  39FE               	andlw	254
  2085     03EC  120A  118A  23FE  120A  118A  	fcall	_I2C_Sent_Data
  2086     03F1  0870               	movf	?_I2C_Sent_Data,w
  2087     03F2  0471               	iorwf	?_I2C_Sent_Data+1,w
  2088     03F3  1D03               	btfss	3,2
  2089     03F4  2BF6               	goto	u721
  2090     03F5  2BF7               	goto	u720
  2091     03F6                     u721:
  2092     03F6  2BE5               	goto	l1469
  2093     03F7                     u720:
  2094     03F7                     l1471:
  2095                           
  2096                           ;./I2C.h: 86:     I2C_Sent_Data(Reg_add);
  2097     03F7  0875               	movf	I2C_Device_Select_W@Reg_add,w
  2098     03F8  120A  118A  23FE  120A  118A  	fcall	_I2C_Sent_Data
  2099     03FD                     l112:
  2100     03FD  0008               	return
  2101     03FE                     __end_of_I2C_Device_Select_W:
  2102                           
  2103                           	psect	text15
  2104     02B6                     __ptext15:	
  2105 ;; *************** function _I2C_Data_Write *****************
  2106 ;; Defined at:
  2107 ;;		line 114 in file "./I2C.h"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;  data            1    wreg     unsigned char 
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;  data            1    5[COMMON] unsigned char 
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  2   70[None  ] int 
  2114 ;; Registers used:
  2115 ;;		wreg, status,2, status,0, pclath, cstack
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2121 ;;      Params:         0       0       0       0       0
  2122 ;;      Locals:         1       0       0       0       0
  2123 ;;      Temps:          0       0       0       0       0
  2124 ;;      Totals:         1       0       0       0       0
  2125 ;;Total ram usage:        1 bytes
  2126 ;; Hardware stack levels used: 1
  2127 ;; Hardware stack levels required when called: 2
  2128 ;; This function calls:
  2129 ;;		_I2C_Sent_Data
  2130 ;; This function is called by:
  2131 ;;		_Set_Time_Calender
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135     02B6                     _I2C_Data_Write:	
  2136                           ;psect for function _I2C_Data_Write
  2137                           
  2138                           
  2139                           ;incstack = 0
  2140                           ; Regs used in _I2C_Data_Write: [wreg+status,2+status,0+pclath+cstack]
  2141                           ;I2C_Data_Write@data stored from wreg
  2142     02B6  00F5               	movwf	I2C_Data_Write@data
  2143     02B7                     l1475:
  2144                           
  2145                           ;./I2C.h: 116:     return I2C_Sent_Data(data);;	Return value of _I2C_Data_Write is never
      +                           used
  2146     02B7  0875               	movf	I2C_Data_Write@data,w
  2147     02B8  120A  118A  23FE  120A  118A  	fcall	_I2C_Sent_Data
  2148     02BD                     l124:
  2149     02BD  0008               	return
  2150     02BE                     __end_of_I2C_Data_Write:
  2151                           
  2152                           	psect	text16
  2153     0688                     __ptext16:	
  2154 ;; *************** function _Read_Time *****************
  2155 ;; Defined at:
  2156 ;;		line 103 in file "./RTC.h"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;		None
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;  c               1    2[COMMON] unsigned char 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      void 
  2163 ;; Registers used:
  2164 ;;		wreg, status,2, status,0, pclath, cstack
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2170 ;;      Params:         0       0       0       0       0
  2171 ;;      Locals:         1       0       0       0       0
  2172 ;;      Temps:          0       0       0       0       0
  2173 ;;      Totals:         1       0       0       0       0
  2174 ;;Total ram usage:        1 bytes
  2175 ;; Hardware stack levels used: 1
  2176 ;; Hardware stack levels required when called: 3
  2177 ;; This function calls:
  2178 ;;		_Am_or_Pm
  2179 ;;		_Bcd_to_Lsb
  2180 ;;		_Bcd_to_Msb
  2181 ;;		_Hour_Msb
  2182 ;;		_I2C_Read_Data
  2183 ;; This function is called by:
  2184 ;;		_main
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188     0688                     _Read_Time:	
  2189                           ;psect for function _Read_Time
  2190                           
  2191     0688                     l1655:	
  2192                           ;incstack = 0
  2193                           ; Regs used in _Read_Time: [wreg+status,2+status,0+pclath+cstack]
  2194                           
  2195                           
  2196                           ;./RTC.h: 105:     unsigned char c;;./RTC.h: 107:     temp=I2C_Read_Data(1);
  2197     0688  3001               	movlw	1
  2198     0689  00F0               	movwf	I2C_Read_Data@flag
  2199     068A  3000               	movlw	0
  2200     068B  00F1               	movwf	I2C_Read_Data@flag+1
  2201     068C  120A  118A  2444  120A  118A  	fcall	_I2C_Read_Data
  2202     0691  1283               	bcf	3,5	;RP0=0, select bank0
  2203     0692  1303               	bcf	3,6	;RP1=0, select bank0
  2204     0693  00D7               	movwf	_temp
  2205                           
  2206                           ;./RTC.h: 108:         Current_Time[7]=Bcd_to_Lsb(temp);
  2207     0694  0857               	movf	_temp,w
  2208     0695  120A  118A  22B1  120A  118A  	fcall	_Bcd_to_Lsb
  2209     069A  1283               	bcf	3,5	;RP0=0, select bank0
  2210     069B  1303               	bcf	3,6	;RP1=0, select bank0
  2211     069C  00AF               	movwf	_Current_Time+7
  2212                           
  2213                           ;./RTC.h: 109:         Current_Time[6]=Bcd_to_Msb(temp);
  2214     069D  0857               	movf	_temp,w
  2215     069E  120A  118A  230A  120A  118A  	fcall	_Bcd_to_Msb
  2216     06A3  1283               	bcf	3,5	;RP0=0, select bank0
  2217     06A4  1303               	bcf	3,6	;RP1=0, select bank0
  2218     06A5  00AE               	movwf	_Current_Time+6
  2219                           
  2220                           ;./RTC.h: 110:   temp=I2C_Read_Data(1);
  2221     06A6  3001               	movlw	1
  2222     06A7  00F0               	movwf	I2C_Read_Data@flag
  2223     06A8  3000               	movlw	0
  2224     06A9  00F1               	movwf	I2C_Read_Data@flag+1
  2225     06AA  120A  118A  2444  120A  118A  	fcall	_I2C_Read_Data
  2226     06AF  1283               	bcf	3,5	;RP0=0, select bank0
  2227     06B0  1303               	bcf	3,6	;RP1=0, select bank0
  2228     06B1  00D7               	movwf	_temp
  2229                           
  2230                           ;./RTC.h: 111:         Current_Time[4]=Bcd_to_Lsb(temp);
  2231     06B2  0857               	movf	_temp,w
  2232     06B3  120A  118A  22B1  120A  118A  	fcall	_Bcd_to_Lsb
  2233     06B8  1283               	bcf	3,5	;RP0=0, select bank0
  2234     06B9  1303               	bcf	3,6	;RP1=0, select bank0
  2235     06BA  00AC               	movwf	_Current_Time+4
  2236                           
  2237                           ;./RTC.h: 112:         Current_Time[3]=Bcd_to_Msb(temp);
  2238     06BB  0857               	movf	_temp,w
  2239     06BC  120A  118A  230A  120A  118A  	fcall	_Bcd_to_Msb
  2240     06C1  1283               	bcf	3,5	;RP0=0, select bank0
  2241     06C2  1303               	bcf	3,6	;RP1=0, select bank0
  2242     06C3  00AB               	movwf	_Current_Time+3
  2243                           
  2244                           ;./RTC.h: 113:  temp=I2C_Read_Data(1);
  2245     06C4  3001               	movlw	1
  2246     06C5  00F0               	movwf	I2C_Read_Data@flag
  2247     06C6  3000               	movlw	0
  2248     06C7  00F1               	movwf	I2C_Read_Data@flag+1
  2249     06C8  120A  118A  2444  120A  118A  	fcall	_I2C_Read_Data
  2250     06CD  1283               	bcf	3,5	;RP0=0, select bank0
  2251     06CE  1303               	bcf	3,6	;RP1=0, select bank0
  2252     06CF  00D7               	movwf	_temp
  2253                           
  2254                           ;./RTC.h: 114:         Current_Time[1]=Bcd_to_Lsb(temp);
  2255     06D0  0857               	movf	_temp,w
  2256     06D1  120A  118A  22B1  120A  118A  	fcall	_Bcd_to_Lsb
  2257     06D6  1283               	bcf	3,5	;RP0=0, select bank0
  2258     06D7  1303               	bcf	3,6	;RP1=0, select bank0
  2259     06D8  00A9               	movwf	_Current_Time+1
  2260     06D9                     l1657:
  2261                           
  2262                           ;./RTC.h: 115:         Current_Time[0]=Hour_Msb(temp);
  2263     06D9  0857               	movf	_temp,w
  2264     06DA  120A  118A  23B0  120A  118A  	fcall	_Hour_Msb
  2265     06DF  1283               	bcf	3,5	;RP0=0, select bank0
  2266     06E0  1303               	bcf	3,6	;RP1=0, select bank0
  2267     06E1  00A8               	movwf	_Current_Time
  2268     06E2                     l1659:
  2269                           
  2270                           ;./RTC.h: 117:         if((c=Am_or_Pm(temp))){
  2271     06E2  0857               	movf	_temp,w
  2272     06E3  120A  118A  234A  120A  118A  	fcall	_Am_or_Pm
  2273     06E8  00F2               	movwf	Read_Time@c
  2274     06E9  0872               	movf	Read_Time@c,w
  2275     06EA  1903               	btfsc	3,2
  2276     06EB  2EED               	goto	u861
  2277     06EC  2EEE               	goto	u860
  2278     06ED                     u861:
  2279     06ED  2EF5               	goto	l1663
  2280     06EE                     u860:
  2281     06EE                     l1661:
  2282                           
  2283                           ;./RTC.h: 118:                 Current_Time[9]=c;
  2284     06EE  0872               	movf	Read_Time@c,w
  2285     06EF  1283               	bcf	3,5	;RP0=0, select bank0
  2286     06F0  1303               	bcf	3,6	;RP1=0, select bank0
  2287     06F1  00B1               	movwf	_Current_Time+9
  2288                           
  2289                           ;./RTC.h: 119:                 Current_Time[10]='M';
  2290     06F2  304D               	movlw	77
  2291     06F3  00B2               	movwf	_Current_Time+10
  2292                           
  2293                           ;./RTC.h: 121:         }else{
  2294     06F4  2EF9               	goto	l216
  2295     06F5                     l1663:
  2296                           
  2297                           ;./RTC.h: 122:         Current_Time[9]=c;
  2298     06F5  0872               	movf	Read_Time@c,w
  2299     06F6  1283               	bcf	3,5	;RP0=0, select bank0
  2300     06F7  1303               	bcf	3,6	;RP1=0, select bank0
  2301     06F8  00B1               	movwf	_Current_Time+9
  2302     06F9                     l216:
  2303     06F9  0008               	return
  2304     06FA                     __end_of_Read_Time:
  2305                           
  2306                           	psect	text17
  2307     03B0                     __ptext17:	
  2308 ;; *************** function _Hour_Msb *****************
  2309 ;; Defined at:
  2310 ;;		line 250 in file "./RTC.h"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;  hrs             1    wreg     unsigned char 
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;  hrs             1    0[COMMON] unsigned char 
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  1    wreg      unsigned char 
  2317 ;; Registers used:
  2318 ;;		wreg
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2324 ;;      Params:         0       0       0       0       0
  2325 ;;      Locals:         1       0       0       0       0
  2326 ;;      Temps:          0       0       0       0       0
  2327 ;;      Totals:         1       0       0       0       0
  2328 ;;Total ram usage:        1 bytes
  2329 ;; Hardware stack levels used: 1
  2330 ;; This function calls:
  2331 ;;		Nothing
  2332 ;; This function is called by:
  2333 ;;		_Read_Time
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337     03B0                     _Hour_Msb:	
  2338                           ;psect for function _Hour_Msb
  2339                           
  2340                           
  2341                           ;incstack = 0
  2342                           ; Regs used in _Hour_Msb: [wreg]
  2343                           ;Hour_Msb@hrs stored from wreg
  2344     03B0  00F0               	movwf	Hour_Msb@hrs
  2345     03B1                     l1523:
  2346                           
  2347                           ;./RTC.h: 252:     if(hrs&0x40){
  2348     03B1  1F70               	btfss	Hour_Msb@hrs,6
  2349     03B2  2BB4               	goto	u761
  2350     03B3  2BB5               	goto	u760
  2351     03B4                     u761:
  2352     03B4  2BBD               	goto	l264
  2353     03B5                     u760:
  2354     03B5                     l1525:
  2355                           
  2356                           ;./RTC.h: 253:         if(hrs&0x10){
  2357     03B5  1E70               	btfss	Hour_Msb@hrs,4
  2358     03B6  2BB8               	goto	u771
  2359     03B7  2BB9               	goto	u770
  2360     03B8                     u771:
  2361     03B8  2BBB               	goto	l1531
  2362     03B9                     u770:
  2363     03B9                     l1527:
  2364                           
  2365                           ;./RTC.h: 254:             return '1';
  2366     03B9  3031               	movlw	49
  2367     03BA  2BC8               	goto	l266
  2368     03BB                     l1531:
  2369                           
  2370                           ;./RTC.h: 256:         return '0';
  2371     03BB  3030               	movlw	48
  2372     03BC  2BC8               	goto	l266
  2373     03BD                     l264:
  2374                           
  2375                           ;./RTC.h: 258:         if(hrs&0x20)
  2376     03BD  1EF0               	btfss	Hour_Msb@hrs,5
  2377     03BE  2BC0               	goto	u781
  2378     03BF  2BC1               	goto	u780
  2379     03C0                     u781:
  2380     03C0  2BC3               	goto	l268
  2381     03C1                     u780:
  2382     03C1                     l1537:
  2383                           
  2384                           ;./RTC.h: 259:             return '2';
  2385     03C1  3032               	movlw	50
  2386     03C2  2BC8               	goto	l266
  2387     03C3                     l268:	
  2388                           ;./RTC.h: 260:         else if(hrs&0x10)
  2389                           
  2390     03C3  1E70               	btfss	Hour_Msb@hrs,4
  2391     03C4  2BC6               	goto	u791
  2392     03C5  2BC7               	goto	u790
  2393     03C6                     u791:
  2394     03C6  2BBB               	goto	l1531
  2395     03C7                     u790:
  2396     03C7  2BB9               	goto	l1527
  2397     03C8                     l266:
  2398     03C8  0008               	return
  2399     03C9                     __end_of_Hour_Msb:
  2400                           
  2401                           	psect	text18
  2402     034A                     __ptext18:	
  2403 ;; *************** function _Am_or_Pm *****************
  2404 ;; Defined at:
  2405 ;;		line 287 in file "./RTC.h"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;  hrs             1    wreg     unsigned char 
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;  hrs             1    0[COMMON] unsigned char 
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  1    wreg      unsigned char 
  2412 ;; Registers used:
  2413 ;;		wreg
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2419 ;;      Params:         0       0       0       0       0
  2420 ;;      Locals:         1       0       0       0       0
  2421 ;;      Temps:          0       0       0       0       0
  2422 ;;      Totals:         1       0       0       0       0
  2423 ;;Total ram usage:        1 bytes
  2424 ;; Hardware stack levels used: 1
  2425 ;; This function calls:
  2426 ;;		Nothing
  2427 ;; This function is called by:
  2428 ;;		_Read_Time
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432     034A                     _Am_or_Pm:	
  2433                           ;psect for function _Am_or_Pm
  2434                           
  2435                           
  2436                           ;incstack = 0
  2437                           ; Regs used in _Am_or_Pm: [wreg]
  2438                           ;Am_or_Pm@hrs stored from wreg
  2439     034A  00F0               	movwf	Am_or_Pm@hrs
  2440     034B                     l1553:
  2441                           
  2442                           ;./RTC.h: 289:      if(hrs&0x40){
  2443     034B  1F70               	btfss	Am_or_Pm@hrs,6
  2444     034C  2B4E               	goto	u801
  2445     034D  2B4F               	goto	u800
  2446     034E                     u801:
  2447     034E  2B57               	goto	l1567
  2448     034F                     u800:
  2449     034F                     l1555:
  2450                           
  2451                           ;./RTC.h: 290:          if(hrs&0x20){
  2452     034F  1EF0               	btfss	Am_or_Pm@hrs,5
  2453     0350  2B52               	goto	u811
  2454     0351  2B53               	goto	u810
  2455     0352                     u811:
  2456     0352  2B55               	goto	l1561
  2457     0353                     u810:
  2458     0353                     l1557:
  2459                           
  2460                           ;./RTC.h: 291:              return 'P';
  2461     0353  3050               	movlw	80
  2462     0354  2B58               	goto	l276
  2463     0355                     l1561:
  2464                           
  2465                           ;./RTC.h: 293:          return 'A';
  2466     0355  3041               	movlw	65
  2467     0356  2B58               	goto	l276
  2468     0357                     l1567:
  2469                           
  2470                           ;./RTC.h: 295:          return 0;
  2471     0357  3000               	movlw	0
  2472     0358                     l276:
  2473     0358  0008               	return
  2474     0359                     __end_of_Am_or_Pm:
  2475                           
  2476                           	psect	text19
  2477     05BE                     __ptext19:	
  2478 ;; *************** function _Read_Date *****************
  2479 ;; Defined at:
  2480 ;;		line 131 in file "./RTC.h"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;		None
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;		None
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1    wreg      void 
  2487 ;; Registers used:
  2488 ;;		wreg, status,2, status,0, pclath, cstack
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2494 ;;      Params:         0       0       0       0       0
  2495 ;;      Locals:         0       0       0       0       0
  2496 ;;      Temps:          0       0       0       0       0
  2497 ;;      Totals:         0       0       0       0       0
  2498 ;;Total ram usage:        0 bytes
  2499 ;; Hardware stack levels used: 1
  2500 ;; Hardware stack levels required when called: 3
  2501 ;; This function calls:
  2502 ;;		_Bcd_to_Lsb
  2503 ;;		_Bcd_to_Msb
  2504 ;;		_I2C_Read_Data
  2505 ;; This function is called by:
  2506 ;;		_main
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510     05BE                     _Read_Date:	
  2511                           ;psect for function _Read_Date
  2512                           
  2513     05BE                     l1665:	
  2514                           ;incstack = 0
  2515                           ; Regs used in _Read_Date: [wreg+status,2+status,0+pclath+cstack]
  2516                           
  2517                           
  2518                           ;./RTC.h: 133:         I2C_Read_Data(1);
  2519     05BE  3001               	movlw	1
  2520     05BF  00F0               	movwf	I2C_Read_Data@flag
  2521     05C0  3000               	movlw	0
  2522     05C1  00F1               	movwf	I2C_Read_Data@flag+1
  2523     05C2  120A  118A  2444  120A  118A  	fcall	_I2C_Read_Data
  2524                           
  2525                           ;./RTC.h: 136:         temp=I2C_Read_Data(1);
  2526     05C7  3001               	movlw	1
  2527     05C8  00F0               	movwf	I2C_Read_Data@flag
  2528     05C9  3000               	movlw	0
  2529     05CA  00F1               	movwf	I2C_Read_Data@flag+1
  2530     05CB  120A  118A  2444  120A  118A  	fcall	_I2C_Read_Data
  2531     05D0  1283               	bcf	3,5	;RP0=0, select bank0
  2532     05D1  1303               	bcf	3,6	;RP1=0, select bank0
  2533     05D2  00D7               	movwf	_temp
  2534                           
  2535                           ;./RTC.h: 139:         Current_Date[0]=Bcd_to_Msb(temp);
  2536     05D3  0857               	movf	_temp,w
  2537     05D4  120A  118A  230A  120A  118A  	fcall	_Bcd_to_Msb
  2538     05D9  1283               	bcf	3,5	;RP0=0, select bank0
  2539     05DA  1303               	bcf	3,6	;RP1=0, select bank0
  2540     05DB  00B3               	movwf	_Current_Date
  2541                           
  2542                           ;./RTC.h: 140:         Current_Date[1]=Bcd_to_Lsb(temp);
  2543     05DC  0857               	movf	_temp,w
  2544     05DD  120A  118A  22B1  120A  118A  	fcall	_Bcd_to_Lsb
  2545     05E2  1283               	bcf	3,5	;RP0=0, select bank0
  2546     05E3  1303               	bcf	3,6	;RP1=0, select bank0
  2547     05E4  00B4               	movwf	_Current_Date+1
  2548                           
  2549                           ;./RTC.h: 142:         temp=I2C_Read_Data(1);
  2550     05E5  3001               	movlw	1
  2551     05E6  00F0               	movwf	I2C_Read_Data@flag
  2552     05E7  3000               	movlw	0
  2553     05E8  00F1               	movwf	I2C_Read_Data@flag+1
  2554     05E9  120A  118A  2444  120A  118A  	fcall	_I2C_Read_Data
  2555     05EE  1283               	bcf	3,5	;RP0=0, select bank0
  2556     05EF  1303               	bcf	3,6	;RP1=0, select bank0
  2557     05F0  00D7               	movwf	_temp
  2558                           
  2559                           ;./RTC.h: 145:         Current_Date[3]=Bcd_to_Msb(temp);
  2560     05F1  0857               	movf	_temp,w
  2561     05F2  120A  118A  230A  120A  118A  	fcall	_Bcd_to_Msb
  2562     05F7  1283               	bcf	3,5	;RP0=0, select bank0
  2563     05F8  1303               	bcf	3,6	;RP1=0, select bank0
  2564     05F9  00B6               	movwf	_Current_Date+3
  2565                           
  2566                           ;./RTC.h: 146:         Current_Date[4]=Bcd_to_Lsb(temp);
  2567     05FA  0857               	movf	_temp,w
  2568     05FB  120A  118A  22B1  120A  118A  	fcall	_Bcd_to_Lsb
  2569     0600  1283               	bcf	3,5	;RP0=0, select bank0
  2570     0601  1303               	bcf	3,6	;RP1=0, select bank0
  2571     0602  00B7               	movwf	_Current_Date+4
  2572                           
  2573                           ;./RTC.h: 148:         temp=I2C_Read_Data(0);
  2574     0603  3000               	movlw	0
  2575     0604  00F0               	movwf	I2C_Read_Data@flag
  2576     0605  00F1               	movwf	I2C_Read_Data@flag+1
  2577     0606  120A  118A  2444  120A  118A  	fcall	_I2C_Read_Data
  2578     060B  1283               	bcf	3,5	;RP0=0, select bank0
  2579     060C  1303               	bcf	3,6	;RP1=0, select bank0
  2580     060D  00D7               	movwf	_temp
  2581                           
  2582                           ;./RTC.h: 151:         Current_Date[6]=Bcd_to_Msb(temp);
  2583     060E  0857               	movf	_temp,w
  2584     060F  120A  118A  230A  120A  118A  	fcall	_Bcd_to_Msb
  2585     0614  1283               	bcf	3,5	;RP0=0, select bank0
  2586     0615  1303               	bcf	3,6	;RP1=0, select bank0
  2587     0616  00B9               	movwf	_Current_Date+6
  2588                           
  2589                           ;./RTC.h: 152:         Current_Date[7]=Bcd_to_Lsb(temp);
  2590     0617  0857               	movf	_temp,w
  2591     0618  120A  118A  22B1  120A  118A  	fcall	_Bcd_to_Lsb
  2592     061D  1283               	bcf	3,5	;RP0=0, select bank0
  2593     061E  1303               	bcf	3,6	;RP1=0, select bank0
  2594     061F  00BA               	movwf	_Current_Date+7
  2595     0620                     l219:
  2596     0620  0008               	return
  2597     0621                     __end_of_Read_Date:
  2598                           
  2599                           	psect	text20
  2600     0444                     __ptext20:	
  2601 ;; *************** function _I2C_Read_Data *****************
  2602 ;; Defined at:
  2603 ;;		line 303 in file "./I2C.h"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;  flag            2    0[COMMON] int 
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;		None
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      unsigned char 
  2610 ;; Registers used:
  2611 ;;		wreg, status,2, status,0, pclath, cstack
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2617 ;;      Params:         2       0       0       0       0
  2618 ;;      Locals:         0       0       0       0       0
  2619 ;;      Temps:          0       0       0       0       0
  2620 ;;      Totals:         2       0       0       0       0
  2621 ;;Total ram usage:        2 bytes
  2622 ;; Hardware stack levels used: 1
  2623 ;; Hardware stack levels required when called: 2
  2624 ;; This function calls:
  2625 ;;		_I2C_ACK
  2626 ;;		_I2C_NACK
  2627 ;;		_I2C_Wait
  2628 ;; This function is called by:
  2629 ;;		_Read_Time
  2630 ;;		_Read_Date
  2631 ;;		_I2C_char_Read
  2632 ;;		_I2C_Page_Read
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636     0444                     _I2C_Read_Data:	
  2637                           ;psect for function _I2C_Read_Data
  2638                           
  2639     0444                     l1479:	
  2640                           ;incstack = 0
  2641                           ; Regs used in _I2C_Read_Data: [wreg+status,2+status,0+pclath+cstack]
  2642                           
  2643                           
  2644                           ;./I2C.h: 305:     I2C_Wait();
  2645     0444  120A  118A  232E  120A  118A  	fcall	_I2C_Wait
  2646     0449                     l1481:
  2647                           
  2648                           ;./I2C.h: 307:     RCEN = 1;
  2649     0449  1683               	bsf	3,5	;RP0=1, select bank1
  2650     044A  1303               	bcf	3,6	;RP1=0, select bank1
  2651     044B  1591               	bsf	17,3	;volatile
  2652                           
  2653                           ;./I2C.h: 309:     I2C_Wait();
  2654     044C  120A  118A  232E  120A  118A  	fcall	_I2C_Wait
  2655     0451                     l183:	
  2656                           ;./I2C.h: 311:     while (!SSPIF);
  2657                           
  2658     0451  1283               	bcf	3,5	;RP0=0, select bank0
  2659     0452  1303               	bcf	3,6	;RP1=0, select bank0
  2660     0453  1D8C               	btfss	12,3	;volatile
  2661     0454  2C56               	goto	u731
  2662     0455  2C57               	goto	u730
  2663     0456                     u731:
  2664     0456  2C51               	goto	l183
  2665     0457                     u730:
  2666     0457                     l1483:
  2667                           
  2668                           ;./I2C.h: 313:     buff = SSPBUF;
  2669     0457  0813               	movf	19,w	;volatile
  2670     0458  00D8               	movwf	_buff
  2671     0459                     l1485:
  2672                           
  2673                           ;./I2C.h: 315:     SSPIF = 0;
  2674     0459  118C               	bcf	12,3	;volatile
  2675     045A                     l1487:
  2676                           
  2677                           ;./I2C.h: 317:     (flag != 0) ? I2C_ACK() : I2C_NACK();
  2678     045A  0870               	movf	I2C_Read_Data@flag,w
  2679     045B  0471               	iorwf	I2C_Read_Data@flag+1,w
  2680     045C  1903               	btfsc	3,2
  2681     045D  2C5F               	goto	u741
  2682     045E  2C60               	goto	u740
  2683     045F                     u741:
  2684     045F  2C66               	goto	l1491
  2685     0460                     u740:
  2686     0460                     l1489:
  2687     0460  120A  118A  2316  120A  118A  	fcall	_I2C_ACK
  2688     0465  2C6B               	goto	l1493
  2689     0466                     l1491:
  2690     0466  120A  118A  2322  120A  118A  	fcall	_I2C_NACK
  2691     046B                     l1493:
  2692                           
  2693                           ;./I2C.h: 319:     return buff;
  2694     046B  1283               	bcf	3,5	;RP0=0, select bank0
  2695     046C  1303               	bcf	3,6	;RP1=0, select bank0
  2696     046D  0858               	movf	_buff,w
  2697     046E                     l190:
  2698     046E  0008               	return
  2699     046F                     __end_of_I2C_Read_Data:
  2700                           
  2701                           	psect	text21
  2702     0322                     __ptext21:	
  2703 ;; *************** function _I2C_NACK *****************
  2704 ;; Defined at:
  2705 ;;		line 277 in file "./I2C.h"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;		None
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;		None
  2710 ;; Return value:  Size  Location     Type
  2711 ;;                  1    wreg      void 
  2712 ;; Registers used:
  2713 ;;		wreg, status,2, status,0, pclath, cstack
  2714 ;; Tracked objects:
  2715 ;;		On entry : 0/0
  2716 ;;		On exit  : 0/0
  2717 ;;		Unchanged: 0/0
  2718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2719 ;;      Params:         0       0       0       0       0
  2720 ;;      Locals:         0       0       0       0       0
  2721 ;;      Temps:          0       0       0       0       0
  2722 ;;      Totals:         0       0       0       0       0
  2723 ;;Total ram usage:        0 bytes
  2724 ;; Hardware stack levels used: 1
  2725 ;; Hardware stack levels required when called: 1
  2726 ;; This function calls:
  2727 ;;		_I2C_Wait
  2728 ;; This function is called by:
  2729 ;;		_I2C_Read_Data
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732                           
  2733     0322                     _I2C_NACK:	
  2734                           ;psect for function _I2C_NACK
  2735                           
  2736     0322                     l1439:	
  2737                           ;incstack = 0
  2738                           ; Regs used in _I2C_NACK: [wreg+status,2+status,0+pclath+cstack]
  2739                           
  2740                           
  2741                           ;./I2C.h: 279:     ACKDT = 1;
  2742     0322  1683               	bsf	3,5	;RP0=1, select bank1
  2743     0323  1303               	bcf	3,6	;RP1=0, select bank1
  2744     0324  1691               	bsf	17,5	;volatile
  2745     0325                     l1441:
  2746                           
  2747                           ;./I2C.h: 281:     I2C_Wait();
  2748     0325  120A  118A  232E  120A  118A  	fcall	_I2C_Wait
  2749     032A                     l1443:
  2750                           
  2751                           ;./I2C.h: 283:     ACKEN = 1;
  2752     032A  1683               	bsf	3,5	;RP0=1, select bank1
  2753     032B  1303               	bcf	3,6	;RP1=0, select bank1
  2754     032C  1611               	bsf	17,4	;volatile
  2755     032D                     l177:
  2756     032D  0008               	return
  2757     032E                     __end_of_I2C_NACK:
  2758                           
  2759                           	psect	text22
  2760     0316                     __ptext22:	
  2761 ;; *************** function _I2C_ACK *****************
  2762 ;; Defined at:
  2763 ;;		line 265 in file "./I2C.h"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;		None
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;		None
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1    wreg      void 
  2770 ;; Registers used:
  2771 ;;		wreg, status,2, status,0, pclath, cstack
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2777 ;;      Params:         0       0       0       0       0
  2778 ;;      Locals:         0       0       0       0       0
  2779 ;;      Temps:          0       0       0       0       0
  2780 ;;      Totals:         0       0       0       0       0
  2781 ;;Total ram usage:        0 bytes
  2782 ;; Hardware stack levels used: 1
  2783 ;; Hardware stack levels required when called: 1
  2784 ;; This function calls:
  2785 ;;		_I2C_Wait
  2786 ;; This function is called by:
  2787 ;;		_I2C_Read_Data
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791     0316                     _I2C_ACK:	
  2792                           ;psect for function _I2C_ACK
  2793                           
  2794     0316                     l1433:	
  2795                           ;incstack = 0
  2796                           ; Regs used in _I2C_ACK: [wreg+status,2+status,0+pclath+cstack]
  2797                           
  2798                           
  2799                           ;./I2C.h: 267:     ACKDT = 0;
  2800     0316  1683               	bsf	3,5	;RP0=1, select bank1
  2801     0317  1303               	bcf	3,6	;RP1=0, select bank1
  2802     0318  1291               	bcf	17,5	;volatile
  2803     0319                     l1435:
  2804                           
  2805                           ;./I2C.h: 269:     I2C_Wait();
  2806     0319  120A  118A  232E  120A  118A  	fcall	_I2C_Wait
  2807     031E                     l1437:
  2808                           
  2809                           ;./I2C.h: 271:     ACKEN = 1;
  2810     031E  1683               	bsf	3,5	;RP0=1, select bank1
  2811     031F  1303               	bcf	3,6	;RP1=0, select bank1
  2812     0320  1611               	bsf	17,4	;volatile
  2813     0321                     l174:
  2814     0321  0008               	return
  2815     0322                     __end_of_I2C_ACK:
  2816                           
  2817                           	psect	text23
  2818     030A                     __ptext23:	
  2819 ;; *************** function _Bcd_to_Msb *****************
  2820 ;; Defined at:
  2821 ;;		line 306 in file "./RTC.h"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  value           1    wreg     unsigned char 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;  value           1    1[COMMON] unsigned char 
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      unsigned char 
  2828 ;; Registers used:
  2829 ;;		wreg, status,2, status,0
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2835 ;;      Params:         0       0       0       0       0
  2836 ;;      Locals:         1       0       0       0       0
  2837 ;;      Temps:          1       0       0       0       0
  2838 ;;      Totals:         2       0       0       0       0
  2839 ;;Total ram usage:        2 bytes
  2840 ;; Hardware stack levels used: 1
  2841 ;; This function calls:
  2842 ;;		Nothing
  2843 ;; This function is called by:
  2844 ;;		_Read_Time
  2845 ;;		_Read_Date
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849     030A                     _Bcd_to_Msb:	
  2850                           ;psect for function _Bcd_to_Msb
  2851                           
  2852                           
  2853                           ;incstack = 0
  2854                           ; Regs used in _Bcd_to_Msb: [wreg+status,2+status,0]
  2855                           ;Bcd_to_Msb@value stored from wreg
  2856     030A  00F1               	movwf	Bcd_to_Msb@value
  2857     030B                     l1519:
  2858                           
  2859                           ;./RTC.h: 308:     return (value>>4)+48;
  2860     030B  0871               	movf	Bcd_to_Msb@value,w
  2861     030C  00F0               	movwf	??_Bcd_to_Msb
  2862     030D  3004               	movlw	4
  2863     030E                     u755:
  2864     030E  1003               	clrc
  2865     030F  0CF0               	rrf	??_Bcd_to_Msb,f
  2866     0310  3EFF               	addlw	-1
  2867     0311  1D03               	skipz
  2868     0312  2B0E               	goto	u755
  2869     0313  0870               	movf	??_Bcd_to_Msb,w
  2870     0314  3E30               	addlw	48
  2871     0315                     l283:
  2872     0315  0008               	return
  2873     0316                     __end_of_Bcd_to_Msb:
  2874                           
  2875                           	psect	text24
  2876     02B1                     __ptext24:	
  2877 ;; *************** function _Bcd_to_Lsb *****************
  2878 ;; Defined at:
  2879 ;;		line 299 in file "./RTC.h"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  value           1    wreg     unsigned char 
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;  value           1    0[COMMON] unsigned char 
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  1    wreg      unsigned char 
  2886 ;; Registers used:
  2887 ;;		wreg, status,2, status,0
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2893 ;;      Params:         0       0       0       0       0
  2894 ;;      Locals:         1       0       0       0       0
  2895 ;;      Temps:          0       0       0       0       0
  2896 ;;      Totals:         1       0       0       0       0
  2897 ;;Total ram usage:        1 bytes
  2898 ;; Hardware stack levels used: 1
  2899 ;; This function calls:
  2900 ;;		Nothing
  2901 ;; This function is called by:
  2902 ;;		_Read_Time
  2903 ;;		_Read_Date
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907     02B1                     _Bcd_to_Lsb:	
  2908                           ;psect for function _Bcd_to_Lsb
  2909                           
  2910                           
  2911                           ;incstack = 0
  2912                           ; Regs used in _Bcd_to_Lsb: [wreg+status,2+status,0]
  2913                           ;Bcd_to_Lsb@value stored from wreg
  2914     02B1  00F0               	movwf	Bcd_to_Lsb@value
  2915     02B2                     l1515:
  2916                           
  2917                           ;./RTC.h: 302:     return (value&0x0F)+48;
  2918     02B2  0870               	movf	Bcd_to_Lsb@value,w
  2919     02B3  390F               	andlw	15
  2920     02B4  3E30               	addlw	48
  2921     02B5                     l280:
  2922     02B5  0008               	return
  2923     02B6                     __end_of_Bcd_to_Lsb:
  2924                           
  2925                           	psect	text25
  2926     0381                     __ptext25:	
  2927 ;; *************** function _Lcd_Print *****************
  2928 ;; Defined at:
  2929 ;;		line 43 in file "./LCD.h"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  x               1    wreg     PTR unsigned char 
  2932 ;;		 -> DATE(6), Time(6), Current_Date(9), Current_Time(11), 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;  x               1    3[COMMON] PTR unsigned char 
  2935 ;;		 -> DATE(6), Time(6), Current_Date(9), Current_Time(11), 
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  1    wreg      void 
  2938 ;; Registers used:
  2939 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2945 ;;      Params:         0       0       0       0       0
  2946 ;;      Locals:         1       0       0       0       0
  2947 ;;      Temps:          0       0       0       0       0
  2948 ;;      Totals:         1       0       0       0       0
  2949 ;;Total ram usage:        1 bytes
  2950 ;; Hardware stack levels used: 1
  2951 ;; Hardware stack levels required when called: 1
  2952 ;; This function calls:
  2953 ;;		_Lcd_Data
  2954 ;; This function is called by:
  2955 ;;		_main
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959     0381                     _Lcd_Print:	
  2960                           ;psect for function _Lcd_Print
  2961                           
  2962                           
  2963                           ;incstack = 0
  2964                           ; Regs used in _Lcd_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2965                           ;Lcd_Print@x stored from wreg
  2966     0381  00F3               	movwf	Lcd_Print@x
  2967     0382                     l1629:
  2968                           
  2969                           ;./LCD.h: 45:     while(*x){
  2970     0382  2B8F               	goto	l1635
  2971     0383                     l1631:
  2972                           
  2973                           ;./LCD.h: 46:         Lcd_Data(*x);
  2974     0383  0873               	movf	Lcd_Print@x,w
  2975     0384  0084               	movwf	4
  2976     0385  0800               	movf	0,w
  2977     0386  120A  118A  236C  120A  118A  	fcall	_Lcd_Data
  2978     038B                     l1633:
  2979                           
  2980                           ;./LCD.h: 47:         x++;
  2981     038B  3001               	movlw	1
  2982     038C  00FF               	movwf	btemp+1
  2983     038D  087F               	movf	btemp+1,w
  2984     038E  07F3               	addwf	Lcd_Print@x,f
  2985     038F                     l1635:
  2986                           
  2987                           ;./LCD.h: 45:     while(*x){
  2988     038F  0873               	movf	Lcd_Print@x,w
  2989     0390  0084               	movwf	4
  2990     0391  1383               	bcf	3,7	;select IRP bank0
  2991     0392  0800               	movf	0,w
  2992     0393  1D03               	btfss	3,2
  2993     0394  2B96               	goto	u851
  2994     0395  2B97               	goto	u850
  2995     0396                     u851:
  2996     0396  2B83               	goto	l1631
  2997     0397                     u850:
  2998     0397                     l196:
  2999     0397  0008               	return
  3000     0398                     __end_of_Lcd_Print:
  3001                           
  3002                           	psect	text26
  3003     036C                     __ptext26:	
  3004 ;; *************** function _Lcd_Data *****************
  3005 ;; Defined at:
  3006 ;;		line 87 in file "./LCD.h"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;  data            1    wreg     unsigned char 
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;  data            1    2[COMMON] unsigned char 
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      void 
  3013 ;; Registers used:
  3014 ;;		wreg, status,2, status,0, btemp+1
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3020 ;;      Params:         0       0       0       0       0
  3021 ;;      Locals:         1       0       0       0       0
  3022 ;;      Temps:          2       0       0       0       0
  3023 ;;      Totals:         3       0       0       0       0
  3024 ;;Total ram usage:        3 bytes
  3025 ;; Hardware stack levels used: 1
  3026 ;; This function calls:
  3027 ;;		Nothing
  3028 ;; This function is called by:
  3029 ;;		_Lcd_Print
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033     036C                     _Lcd_Data:	
  3034                           ;psect for function _Lcd_Data
  3035                           
  3036                           
  3037                           ;incstack = 0
  3038                           ; Regs used in _Lcd_Data: [wreg+status,2+status,0+btemp+1]
  3039                           ;Lcd_Data@data stored from wreg
  3040     036C  00F2               	movwf	Lcd_Data@data
  3041     036D                     l1497:
  3042                           
  3043                           ;./LCD.h: 91:     PORTD = data;
  3044     036D  0872               	movf	Lcd_Data@data,w
  3045     036E  1283               	bcf	3,5	;RP0=0, select bank0
  3046     036F  1303               	bcf	3,6	;RP1=0, select bank0
  3047     0370  0088               	movwf	8	;volatile
  3048     0371                     l1499:
  3049                           
  3050                           ;./LCD.h: 93:     PORTC |= 0x40;
  3051     0371  1707               	bsf	7,6	;volatile
  3052     0372                     l1501:
  3053                           
  3054                           ;./LCD.h: 95:     PORTC |= 0x80;
  3055     0372  1787               	bsf	7,7	;volatile
  3056     0373                     l1503:
  3057                           
  3058                           ;./LCD.h: 97:     PORTC &= ~0x80;
  3059     0373  307F               	movlw	127
  3060     0374  00FF               	movwf	btemp+1
  3061     0375  087F               	movf	btemp+1,w
  3062     0376  0587               	andwf	7,f	;volatile
  3063     0377                     l1505:
  3064                           
  3065                           ;./LCD.h: 99:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3066     0377  3041               	movlw	65
  3067     0378  00F1               	movwf	??_Lcd_Data+1
  3068     0379  30EE               	movlw	238
  3069     037A  00F0               	movwf	??_Lcd_Data
  3070     037B                     u957:
  3071     037B  0BF0               	decfsz	??_Lcd_Data,f
  3072     037C  2B7B               	goto	u957
  3073     037D  0BF1               	decfsz	??_Lcd_Data+1,f
  3074     037E  2B7B               	goto	u957
  3075     037F  0000               	nop
  3076     0380                     l202:
  3077     0380  0008               	return
  3078     0381                     __end_of_Lcd_Data:
  3079                           
  3080                           	psect	text27
  3081     050E                     __ptext27:	
  3082 ;; *************** function _Lcd_Configuration *****************
  3083 ;; Defined at:
  3084 ;;		line 53 in file "./LCD.h"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;		None
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;		None
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  1    wreg      void 
  3091 ;; Registers used:
  3092 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3098 ;;      Params:         0       0       0       0       0
  3099 ;;      Locals:         0       0       0       0       0
  3100 ;;      Temps:          2       0       0       0       0
  3101 ;;      Totals:         2       0       0       0       0
  3102 ;;Total ram usage:        2 bytes
  3103 ;; Hardware stack levels used: 1
  3104 ;; Hardware stack levels required when called: 1
  3105 ;; This function calls:
  3106 ;;		_Lcd_Cmd
  3107 ;; This function is called by:
  3108 ;;		_main
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112     050E                     _Lcd_Configuration:	
  3113                           ;psect for function _Lcd_Configuration
  3114                           
  3115     050E                     l1637:	
  3116                           ;incstack = 0
  3117                           ; Regs used in _Lcd_Configuration: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3118                           
  3119                           
  3120                           ;./LCD.h: 55:     TRISD=0x00;
  3121     050E  1683               	bsf	3,5	;RP0=1, select bank1
  3122     050F  1303               	bcf	3,6	;RP1=0, select bank1
  3123     0510  0188               	clrf	8	;volatile
  3124                           
  3125                           ;./LCD.h: 57:     PORTD=0x00;
  3126     0511  1283               	bcf	3,5	;RP0=0, select bank0
  3127     0512  1303               	bcf	3,6	;RP1=0, select bank0
  3128     0513  0188               	clrf	8	;volatile
  3129     0514                     l1639:
  3130                           
  3131                           ;./LCD.h: 59:     TRISC=(TRISC&0x3F);
  3132     0514  1683               	bsf	3,5	;RP0=1, select bank1
  3133     0515  1303               	bcf	3,6	;RP1=0, select bank1
  3134     0516  0807               	movf	7,w	;volatile
  3135     0517  393F               	andlw	63
  3136     0518  0087               	movwf	7	;volatile
  3137     0519                     l1641:
  3138                           
  3139                           ;./LCD.h: 62:     Lcd_Cmd(0x0C);
  3140     0519  300C               	movlw	12
  3141     051A  120A  118A  2398  120A  118A  	fcall	_Lcd_Cmd
  3142     051F                     l1643:
  3143                           
  3144                           ;./LCD.h: 64:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3145     051F  3041               	movlw	65
  3146     0520  00F4               	movwf	??_Lcd_Configuration+1
  3147     0521  30EE               	movlw	238
  3148     0522  00F3               	movwf	??_Lcd_Configuration
  3149     0523                     u967:
  3150     0523  0BF3               	decfsz	??_Lcd_Configuration,f
  3151     0524  2D23               	goto	u967
  3152     0525  0BF4               	decfsz	??_Lcd_Configuration+1,f
  3153     0526  2D23               	goto	u967
  3154     0527  0000               	nop
  3155                           
  3156                           ;./LCD.h: 66:     Lcd_Cmd(0x01);
  3157     0528  3001               	movlw	1
  3158     0529  120A  118A  2398  120A  118A  	fcall	_Lcd_Cmd
  3159     052E                     l1645:
  3160                           
  3161                           ;./LCD.h: 68:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3162     052E  3041               	movlw	65
  3163     052F  00F4               	movwf	??_Lcd_Configuration+1
  3164     0530  30EE               	movlw	238
  3165     0531  00F3               	movwf	??_Lcd_Configuration
  3166     0532                     u977:
  3167     0532  0BF3               	decfsz	??_Lcd_Configuration,f
  3168     0533  2D32               	goto	u977
  3169     0534  0BF4               	decfsz	??_Lcd_Configuration+1,f
  3170     0535  2D32               	goto	u977
  3171     0536  0000               	nop
  3172     0537                     l1647:
  3173                           
  3174                           ;./LCD.h: 70:     Lcd_Cmd(0x38);
  3175     0537  3038               	movlw	56
  3176     0538  120A  118A  2398  120A  118A  	fcall	_Lcd_Cmd
  3177                           
  3178                           ;./LCD.h: 72:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3179     053D  3041               	movlw	65
  3180     053E  00F4               	movwf	??_Lcd_Configuration+1
  3181     053F  30EE               	movlw	238
  3182     0540  00F3               	movwf	??_Lcd_Configuration
  3183     0541                     u987:
  3184     0541  0BF3               	decfsz	??_Lcd_Configuration,f
  3185     0542  2D41               	goto	u987
  3186     0543  0BF4               	decfsz	??_Lcd_Configuration+1,f
  3187     0544  2D41               	goto	u987
  3188     0545  0000               	nop
  3189     0546                     l1649:
  3190                           
  3191                           ;./LCD.h: 74:     Lcd_Cmd(0x06);
  3192     0546  3006               	movlw	6
  3193     0547  120A  118A  2398  120A  118A  	fcall	_Lcd_Cmd
  3194     054C                     l1651:
  3195                           
  3196                           ;./LCD.h: 76:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3197     054C  3041               	movlw	65
  3198     054D  00F4               	movwf	??_Lcd_Configuration+1
  3199     054E  30EE               	movlw	238
  3200     054F  00F3               	movwf	??_Lcd_Configuration
  3201     0550                     u997:
  3202     0550  0BF3               	decfsz	??_Lcd_Configuration,f
  3203     0551  2D50               	goto	u997
  3204     0552  0BF4               	decfsz	??_Lcd_Configuration+1,f
  3205     0553  2D50               	goto	u997
  3206     0554  0000               	nop
  3207                           
  3208                           ;./LCD.h: 78:     Lcd_Cmd(0x81);
  3209     0555  3081               	movlw	129
  3210     0556  120A  118A  2398  120A  118A  	fcall	_Lcd_Cmd
  3211     055B                     l1653:
  3212                           
  3213                           ;./LCD.h: 80:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3214     055B  3041               	movlw	65
  3215     055C  00F4               	movwf	??_Lcd_Configuration+1
  3216     055D  30EE               	movlw	238
  3217     055E  00F3               	movwf	??_Lcd_Configuration
  3218     055F                     u1007:
  3219     055F  0BF3               	decfsz	??_Lcd_Configuration,f
  3220     0560  2D5F               	goto	u1007
  3221     0561  0BF4               	decfsz	??_Lcd_Configuration+1,f
  3222     0562  2D5F               	goto	u1007
  3223     0563  0000               	nop
  3224     0564                     l199:
  3225     0564  0008               	return
  3226     0565                     __end_of_Lcd_Configuration:
  3227                           
  3228                           	psect	text28
  3229     0398                     __ptext28:	
  3230 ;; *************** function _Lcd_Cmd *****************
  3231 ;; Defined at:
  3232 ;;		line 106 in file "./LCD.h"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;  cmd             1    wreg     unsigned char 
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;  cmd             1    2[COMMON] unsigned char 
  3237 ;; Return value:  Size  Location     Type
  3238 ;;                  1    wreg      void 
  3239 ;; Registers used:
  3240 ;;		wreg, status,2, status,0, btemp+1
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3246 ;;      Params:         0       0       0       0       0
  3247 ;;      Locals:         1       0       0       0       0
  3248 ;;      Temps:          2       0       0       0       0
  3249 ;;      Totals:         3       0       0       0       0
  3250 ;;Total ram usage:        3 bytes
  3251 ;; Hardware stack levels used: 1
  3252 ;; This function calls:
  3253 ;;		Nothing
  3254 ;; This function is called by:
  3255 ;;		_Lcd_Configuration
  3256 ;;		_main
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260     0398                     _Lcd_Cmd:	
  3261                           ;psect for function _Lcd_Cmd
  3262                           
  3263                           
  3264                           ;incstack = 0
  3265                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+btemp+1]
  3266                           ;Lcd_Cmd@cmd stored from wreg
  3267     0398  00F2               	movwf	Lcd_Cmd@cmd
  3268     0399                     l1507:
  3269                           
  3270                           ;./LCD.h: 108:     PORTD = cmd;
  3271     0399  0872               	movf	Lcd_Cmd@cmd,w
  3272     039A  1283               	bcf	3,5	;RP0=0, select bank0
  3273     039B  1303               	bcf	3,6	;RP1=0, select bank0
  3274     039C  0088               	movwf	8	;volatile
  3275     039D                     l1509:
  3276                           
  3277                           ;./LCD.h: 110:     PORTC &= ~0x40;
  3278     039D  30BF               	movlw	191
  3279     039E  00FF               	movwf	btemp+1
  3280     039F  087F               	movf	btemp+1,w
  3281     03A0  0587               	andwf	7,f	;volatile
  3282     03A1                     l1511:
  3283                           
  3284                           ;./LCD.h: 113:     PORTC |= 0x80;
  3285     03A1  1787               	bsf	7,7	;volatile
  3286     03A2                     l1513:
  3287                           
  3288                           ;./LCD.h: 115:     PORTC &= ~0x80;
  3289     03A2  307F               	movlw	127
  3290     03A3  00FF               	movwf	btemp+1
  3291     03A4  087F               	movf	btemp+1,w
  3292     03A5  0587               	andwf	7,f	;volatile
  3293                           
  3294                           ;./LCD.h: 117:     _delay((unsigned long)((10)*(20000000/4000.0)));
  3295     03A6  3041               	movlw	65
  3296     03A7  00F1               	movwf	??_Lcd_Cmd+1
  3297     03A8  30EE               	movlw	238
  3298     03A9  00F0               	movwf	??_Lcd_Cmd
  3299     03AA                     u1017:
  3300     03AA  0BF0               	decfsz	??_Lcd_Cmd,f
  3301     03AB  2BAA               	goto	u1017
  3302     03AC  0BF1               	decfsz	??_Lcd_Cmd+1,f
  3303     03AD  2BAA               	goto	u1017
  3304     03AE  0000               	nop
  3305     03AF                     l205:
  3306     03AF  0008               	return
  3307     03B0                     __end_of_Lcd_Cmd:
  3308                           
  3309                           	psect	text29
  3310     02F8                     __ptext29:	
  3311 ;; *************** function _I2C_Stop *****************
  3312 ;; Defined at:
  3313 ;;		line 223 in file "./I2C.h"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;		None
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;		None
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  1    wreg      void 
  3320 ;; Registers used:
  3321 ;;		wreg, status,2, status,0, pclath, cstack
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3327 ;;      Params:         0       0       0       0       0
  3328 ;;      Locals:         0       0       0       0       0
  3329 ;;      Temps:          0       0       0       0       0
  3330 ;;      Totals:         0       0       0       0       0
  3331 ;;Total ram usage:        0 bytes
  3332 ;; Hardware stack levels used: 1
  3333 ;; Hardware stack levels required when called: 1
  3334 ;; This function calls:
  3335 ;;		_I2C_Wait
  3336 ;; This function is called by:
  3337 ;;		_main
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341     02F8                     _I2C_Stop:	
  3342                           ;psect for function _I2C_Stop
  3343                           
  3344     02F8                     l1621:	
  3345                           ;incstack = 0
  3346                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  3347                           
  3348                           
  3349                           ;./I2C.h: 225:     I2C_Wait();
  3350     02F8  120A  118A  232E  120A  118A  	fcall	_I2C_Wait
  3351     02FD                     l1623:
  3352                           
  3353                           ;./I2C.h: 227:     PEN = 1;
  3354     02FD  1683               	bsf	3,5	;RP0=1, select bank1
  3355     02FE  1303               	bcf	3,6	;RP1=0, select bank1
  3356     02FF  1511               	bsf	17,2	;volatile
  3357     0300                     l165:
  3358     0300  0008               	return
  3359     0301                     __end_of_I2C_Stop:
  3360                           
  3361                           	psect	text30
  3362     02EF                     __ptext30:	
  3363 ;; *************** function _I2C_Start *****************
  3364 ;; Defined at:
  3365 ;;		line 213 in file "./I2C.h"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;		None
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;		None
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  1    wreg      void 
  3372 ;; Registers used:
  3373 ;;		wreg, status,2, status,0, pclath, cstack
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3379 ;;      Params:         0       0       0       0       0
  3380 ;;      Locals:         0       0       0       0       0
  3381 ;;      Temps:          0       0       0       0       0
  3382 ;;      Totals:         0       0       0       0       0
  3383 ;;Total ram usage:        0 bytes
  3384 ;; Hardware stack levels used: 1
  3385 ;; Hardware stack levels required when called: 1
  3386 ;; This function calls:
  3387 ;;		_I2C_Wait
  3388 ;; This function is called by:
  3389 ;;		_main
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393     02EF                     _I2C_Start:	
  3394                           ;psect for function _I2C_Start
  3395                           
  3396     02EF                     l1617:	
  3397                           ;incstack = 0
  3398                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  3399                           
  3400                           
  3401                           ;./I2C.h: 215:     I2C_Wait();
  3402     02EF  120A  118A  232E  120A  118A  	fcall	_I2C_Wait
  3403     02F4                     l1619:
  3404                           
  3405                           ;./I2C.h: 217:     SEN = 1;
  3406     02F4  1683               	bsf	3,5	;RP0=1, select bank1
  3407     02F5  1303               	bcf	3,6	;RP1=0, select bank1
  3408     02F6  1411               	bsf	17,0	;volatile
  3409     02F7                     l162:
  3410     02F7  0008               	return
  3411     02F8                     __end_of_I2C_Start:
  3412                           
  3413                           	psect	text31
  3414     033B                     __ptext31:	
  3415 ;; *************** function _I2C_Master_Init *****************
  3416 ;; Defined at:
  3417 ;;		line 243 in file "./I2C.h"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;		None
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;		None
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  1    wreg      void 
  3424 ;; Registers used:
  3425 ;;		wreg
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3431 ;;      Params:         0       0       0       0       0
  3432 ;;      Locals:         0       0       0       0       0
  3433 ;;      Temps:          0       0       0       0       0
  3434 ;;      Totals:         0       0       0       0       0
  3435 ;;Total ram usage:        0 bytes
  3436 ;; Hardware stack levels used: 1
  3437 ;; This function calls:
  3438 ;;		Nothing
  3439 ;; This function is called by:
  3440 ;;		_main
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444     033B                     _I2C_Master_Init:	
  3445                           ;psect for function _I2C_Master_Init
  3446                           
  3447     033B                     l1625:	
  3448                           ;incstack = 0
  3449                           ; Regs used in _I2C_Master_Init: [wreg]
  3450                           
  3451                           
  3452                           ;./I2C.h: 245:     TRISC3 = 1;
  3453     033B  1683               	bsf	3,5	;RP0=1, select bank1
  3454     033C  1303               	bcf	3,6	;RP1=0, select bank1
  3455     033D  1587               	bsf	7,3	;volatile
  3456                           
  3457                           ;./I2C.h: 247:     TRISC4 = 1;
  3458     033E  1607               	bsf	7,4	;volatile
  3459                           
  3460                           ;./I2C.h: 249:     SMP = 1;
  3461     033F  1794               	bsf	20,7	;volatile
  3462                           
  3463                           ;./I2C.h: 251:     CKE = 0;
  3464     0340  1314               	bcf	20,6	;volatile
  3465                           
  3466                           ;./I2C.h: 253:     SSPEN = 1;
  3467     0341  1283               	bcf	3,5	;RP0=0, select bank0
  3468     0342  1303               	bcf	3,6	;RP1=0, select bank0
  3469     0343  1694               	bsf	20,5	;volatile
  3470                           
  3471                           ;./I2C.h: 255:     SSPCON |= 0X08;
  3472     0344  1594               	bsf	20,3	;volatile
  3473     0345                     l1627:
  3474                           
  3475                           ;./I2C.h: 257:     SSPADD = ((20000000) / (4 * 100000)) - 1;
  3476     0345  3031               	movlw	49
  3477     0346  1683               	bsf	3,5	;RP0=1, select bank1
  3478     0347  1303               	bcf	3,6	;RP1=0, select bank1
  3479     0348  0093               	movwf	19	;volatile
  3480     0349                     l171:
  3481     0349  0008               	return
  3482     034A                     __end_of_I2C_Master_Init:
  3483                           
  3484                           	psect	text32
  3485     046F                     __ptext32:	
  3486 ;; *************** function _I2C_Device_Select_R *****************
  3487 ;; Defined at:
  3488 ;;		line 93 in file "./I2C.h"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  Device_add      1    wreg     unsigned char 
  3491 ;;  Reg_add         1    5[COMMON] unsigned char 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  Device_add      1    6[COMMON] unsigned char 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  2    5[COMMON] int 
  3496 ;; Registers used:
  3497 ;;		wreg, status,2, status,0, pclath, cstack
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3503 ;;      Params:         1       0       0       0       0
  3504 ;;      Locals:         1       0       0       0       0
  3505 ;;      Temps:          0       0       0       0       0
  3506 ;;      Totals:         2       0       0       0       0
  3507 ;;Total ram usage:        2 bytes
  3508 ;; Hardware stack levels used: 1
  3509 ;; Hardware stack levels required when called: 2
  3510 ;; This function calls:
  3511 ;;		_I2C_Repeat_Start
  3512 ;;		_I2C_Sent_Data
  3513 ;; This function is called by:
  3514 ;;		_main
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518     046F                     _I2C_Device_Select_R:	
  3519                           ;psect for function _I2C_Device_Select_R
  3520                           
  3521                           
  3522                           ;incstack = 0
  3523                           ; Regs used in _I2C_Device_Select_R: [wreg+status,2+status,0+pclath+cstack]
  3524                           ;I2C_Device_Select_R@Device_add stored from wreg
  3525     046F  00F6               	movwf	I2C_Device_Select_R@Device_add
  3526     0470                     l1609:
  3527                           
  3528                           ;./I2C.h: 95:     while (I2C_Sent_Data((Device_add & 0xFE))) {
  3529     0470  2C76               	goto	l115
  3530     0471                     l1611:
  3531                           
  3532                           ;./I2C.h: 97:         I2C_Repeat_Start();
  3533     0471  120A  118A  22E6  120A  118A  	fcall	_I2C_Repeat_Start
  3534     0476                     l115:	
  3535                           ;./I2C.h: 99:     }
  3536                           
  3537                           
  3538                           ;./I2C.h: 95:     while (I2C_Sent_Data((Device_add & 0xFE))) {
  3539     0476  0876               	movf	I2C_Device_Select_R@Device_add,w
  3540     0477  39FE               	andlw	254
  3541     0478  120A  118A  23FE  120A  118A  	fcall	_I2C_Sent_Data
  3542     047D  0870               	movf	?_I2C_Sent_Data,w
  3543     047E  0471               	iorwf	?_I2C_Sent_Data+1,w
  3544     047F  1D03               	btfss	3,2
  3545     0480  2C82               	goto	u831
  3546     0481  2C83               	goto	u830
  3547     0482                     u831:
  3548     0482  2C71               	goto	l1611
  3549     0483                     u830:
  3550     0483                     l1613:
  3551                           
  3552                           ;./I2C.h: 101:     I2C_Sent_Data(Reg_add);
  3553     0483  0875               	movf	I2C_Device_Select_R@Reg_add,w
  3554     0484  120A  118A  23FE  120A  118A  	fcall	_I2C_Sent_Data
  3555                           
  3556                           ;./I2C.h: 103:     I2C_Repeat_Start();
  3557     0489  120A  118A  22E6  120A  118A  	fcall	_I2C_Repeat_Start
  3558                           
  3559                           ;./I2C.h: 105:     while (I2C_Sent_Data(Device_add | 0x01))
  3560     048E  2C94               	goto	l118
  3561     048F                     l1615:
  3562                           
  3563                           ;./I2C.h: 106:         I2C_Repeat_Start();
  3564     048F  120A  118A  22E6  120A  118A  	fcall	_I2C_Repeat_Start
  3565     0494                     l118:
  3566                           
  3567                           ;./I2C.h: 105:     while (I2C_Sent_Data(Device_add | 0x01))
  3568     0494  0876               	movf	I2C_Device_Select_R@Device_add,w
  3569     0495  3801               	iorlw	1
  3570     0496  120A  118A  23FE  120A  118A  	fcall	_I2C_Sent_Data
  3571     049B  0870               	movf	?_I2C_Sent_Data,w
  3572     049C  0471               	iorwf	?_I2C_Sent_Data+1,w
  3573     049D  1D03               	btfss	3,2
  3574     049E  2CA0               	goto	u841
  3575     049F  2CA1               	goto	u840
  3576     04A0                     u841:
  3577     04A0  2C8F               	goto	l1615
  3578     04A1                     u840:
  3579     04A1                     l121:
  3580     04A1  0008               	return
  3581     04A2                     __end_of_I2C_Device_Select_R:
  3582                           
  3583                           	psect	text33
  3584     03FE                     __ptext33:	
  3585 ;; *************** function _I2C_Sent_Data *****************
  3586 ;; Defined at:
  3587 ;;		line 290 in file "./I2C.h"
  3588 ;; Parameters:    Size  Location     Type
  3589 ;;  data            1    wreg     unsigned char 
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;  data            1    4[COMMON] unsigned char 
  3592 ;; Return value:  Size  Location     Type
  3593 ;;                  2    0[COMMON] int 
  3594 ;; Registers used:
  3595 ;;		wreg, status,2, status,0, pclath, cstack
  3596 ;; Tracked objects:
  3597 ;;		On entry : 0/0
  3598 ;;		On exit  : 0/0
  3599 ;;		Unchanged: 0/0
  3600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3601 ;;      Params:         2       0       0       0       0
  3602 ;;      Locals:         1       0       0       0       0
  3603 ;;      Temps:          2       0       0       0       0
  3604 ;;      Totals:         5       0       0       0       0
  3605 ;;Total ram usage:        5 bytes
  3606 ;; Hardware stack levels used: 1
  3607 ;; Hardware stack levels required when called: 1
  3608 ;; This function calls:
  3609 ;;		_I2C_Wait
  3610 ;; This function is called by:
  3611 ;;		_I2C_Device_Select_W
  3612 ;;		_I2C_Device_Select_R
  3613 ;;		_I2C_Data_Write
  3614 ;;		_I2C_Page_Write
  3615 ;;		_I2C_char_Read
  3616 ;;		_I2C_Page_Read
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620     03FE                     _I2C_Sent_Data:	
  3621                           ;psect for function _I2C_Sent_Data
  3622                           
  3623                           
  3624                           ;incstack = 0
  3625                           ; Regs used in _I2C_Sent_Data: [wreg+status,2+status,0+pclath+cstack]
  3626                           ;I2C_Sent_Data@data stored from wreg
  3627     03FE  00F4               	movwf	I2C_Sent_Data@data
  3628     03FF                     l1423:
  3629                           
  3630                           ;./I2C.h: 292:     I2C_Wait();
  3631     03FF  120A  118A  232E  120A  118A  	fcall	_I2C_Wait
  3632     0404                     l1425:
  3633                           
  3634                           ;./I2C.h: 294:     SSPBUF = data;
  3635     0404  0874               	movf	I2C_Sent_Data@data,w
  3636     0405  1283               	bcf	3,5	;RP0=0, select bank0
  3637     0406  1303               	bcf	3,6	;RP1=0, select bank0
  3638     0407  0093               	movwf	19	;volatile
  3639     0408                     l1427:
  3640                           
  3641                           ;./I2C.h: 296:     I2C_Wait();
  3642     0408  120A  118A  232E  120A  118A  	fcall	_I2C_Wait
  3643     040D                     l1429:
  3644                           
  3645                           ;./I2C.h: 298:     return (int) ACKSTAT;
  3646     040D  1003               	clrc
  3647     040E  1683               	bsf	3,5	;RP0=1, select bank1
  3648     040F  1303               	bcf	3,6	;RP1=0, select bank1
  3649     0410  1B11               	btfsc	17,6	;volatile
  3650     0411  1403               	setc
  3651     0412  3000               	movlw	0
  3652     0413  1803               	skipnc
  3653     0414  3001               	movlw	1
  3654     0415  00F2               	movwf	??_I2C_Sent_Data
  3655     0416  01F3               	clrf	??_I2C_Sent_Data+1
  3656     0417  0872               	movf	??_I2C_Sent_Data,w
  3657     0418  00F0               	movwf	?_I2C_Sent_Data
  3658     0419  0873               	movf	??_I2C_Sent_Data+1,w
  3659     041A  00F1               	movwf	?_I2C_Sent_Data+1
  3660     041B                     l180:
  3661     041B  0008               	return
  3662     041C                     __end_of_I2C_Sent_Data:
  3663                           
  3664                           	psect	text34
  3665     02E6                     __ptext34:	
  3666 ;; *************** function _I2C_Repeat_Start *****************
  3667 ;; Defined at:
  3668 ;;		line 233 in file "./I2C.h"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;		None
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;		None
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  1    wreg      void 
  3675 ;; Registers used:
  3676 ;;		wreg, status,2, status,0, pclath, cstack
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3682 ;;      Params:         0       0       0       0       0
  3683 ;;      Locals:         0       0       0       0       0
  3684 ;;      Temps:          0       0       0       0       0
  3685 ;;      Totals:         0       0       0       0       0
  3686 ;;Total ram usage:        0 bytes
  3687 ;; Hardware stack levels used: 1
  3688 ;; Hardware stack levels required when called: 1
  3689 ;; This function calls:
  3690 ;;		_I2C_Wait
  3691 ;; This function is called by:
  3692 ;;		_I2C_Device_Select_W
  3693 ;;		_I2C_Device_Select_R
  3694 ;;		_I2C_Page_Write
  3695 ;;		_I2C_char_Read
  3696 ;;		_I2C_Page_Read
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700     02E6                     _I2C_Repeat_Start:	
  3701                           ;psect for function _I2C_Repeat_Start
  3702                           
  3703     02E6                     l1419:	
  3704                           ;incstack = 0
  3705                           ; Regs used in _I2C_Repeat_Start: [wreg+status,2+status,0+pclath+cstack]
  3706                           
  3707                           
  3708                           ;./I2C.h: 235:     I2C_Wait();
  3709     02E6  120A  118A  232E  120A  118A  	fcall	_I2C_Wait
  3710     02EB                     l1421:
  3711                           
  3712                           ;./I2C.h: 237:     RSEN = 1;
  3713     02EB  1683               	bsf	3,5	;RP0=1, select bank1
  3714     02EC  1303               	bcf	3,6	;RP1=0, select bank1
  3715     02ED  1491               	bsf	17,1	;volatile
  3716     02EE                     l168:
  3717     02EE  0008               	return
  3718     02EF                     __end_of_I2C_Repeat_Start:
  3719                           
  3720                           	psect	text35
  3721     032E                     __ptext35:	
  3722 ;; *************** function _I2C_Wait *****************
  3723 ;; Defined at:
  3724 ;;		line 204 in file "./I2C.h"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;		None
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;		None
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  1    wreg      void 
  3731 ;; Registers used:
  3732 ;;		wreg, status,2
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3738 ;;      Params:         0       0       0       0       0
  3739 ;;      Locals:         0       0       0       0       0
  3740 ;;      Temps:          0       0       0       0       0
  3741 ;;      Totals:         0       0       0       0       0
  3742 ;;Total ram usage:        0 bytes
  3743 ;; Hardware stack levels used: 1
  3744 ;; This function calls:
  3745 ;;		Nothing
  3746 ;; This function is called by:
  3747 ;;		_I2C_Start
  3748 ;;		_I2C_Stop
  3749 ;;		_I2C_Repeat_Start
  3750 ;;		_I2C_ACK
  3751 ;;		_I2C_NACK
  3752 ;;		_I2C_Sent_Data
  3753 ;;		_I2C_Read_Data
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757     032E                     _I2C_Wait:	
  3758                           ;psect for function _I2C_Wait
  3759                           
  3760     032E                     l1333:	
  3761                           ;incstack = 0
  3762                           ; Regs used in _I2C_Wait: [wreg+status,2]
  3763                           
  3764     032E                     l156:	
  3765                           ;./I2C.h: 206:     while (READ_WRITE || SSPCON2 & 0X1F);
  3766                           
  3767     032E  1683               	bsf	3,5	;RP0=1, select bank1
  3768     032F  1303               	bcf	3,6	;RP1=0, select bank1
  3769     0330  1914               	btfsc	20,2	;volatile
  3770     0331  2B33               	goto	u481
  3771     0332  2B34               	goto	u480
  3772     0333                     u481:
  3773     0333  2B2E               	goto	l156
  3774     0334                     u480:
  3775     0334                     l1335:
  3776     0334  0811               	movf	17,w	;volatile
  3777     0335  391F               	andlw	31
  3778     0336  1D03               	btfss	3,2
  3779     0337  2B39               	goto	u491
  3780     0338  2B3A               	goto	u490
  3781     0339                     u491:
  3782     0339  2B2E               	goto	l156
  3783     033A                     u490:
  3784     033A                     l159:
  3785     033A  0008               	return
  3786     033B                     __end_of_I2C_Wait:
  3787     007E                     btemp	set	126	;btemp
  3788     007E                     wtemp0	set	126
  3789                           
  3790                           	psect	config
  3791                           
  3792                           ;Config register CONFIG @ 0x2007
  3793                           ;	Oscillator Selection bits
  3794                           ;	FOSC = EXTRC, RC oscillator
  3795                           ;	Watchdog Timer Enable bit
  3796                           ;	WDTE = OFF, WDT disabled
  3797                           ;	Power-up Timer Enable bit
  3798                           ;	PWRTE = OFF, PWRT disabled
  3799                           ;	Brown-out Reset Enable bit
  3800                           ;	BOREN = OFF, BOR disabled
  3801                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3802                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3803                           ;	Data EEPROM Memory Code Protection bit
  3804                           ;	CPD = OFF, Data EEPROM code protection off
  3805                           ;	Flash Program Memory Write Enable bits
  3806                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3807                           ;	In-Circuit Debugger Mode bit
  3808                           ;	DEBUG = 0x1, unprogrammed default
  3809                           ;	Flash Program Memory Code Protection bit
  3810                           ;	CP = OFF, Code protection off
  3811     2007                     	org	8199
  3812     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        40
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     15      57
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Print@x	PTR unsigned char  size(1) Largest target is 11
		 -> DATE(BANK0[6]), Time(BANK0[6]), Current_Date(BANK0[9]), Current_Time(BANK0[11]), 


Critical Paths under _main in COMMON

    _Set_Time_Calender->_Set_Standard_Hour
    _Set_Year->_Bcd_Conversion
    _Set_Standard_Hour->_Hour_Conversion
    _Set_Seconds->_Bcd_Conversion
    _Set_Railway_Hour->_Hour_Conversion
    _Hour_Conversion->___awmod
    _Set_Month->_Bcd_Conversion
    _Set_Minute->_Bcd_Conversion
    _Set_Date->_Bcd_Conversion
    _Bcd_Conversion->___awdiv
    _I2C_Device_Select_W->_I2C_Sent_Data
    _I2C_Data_Write->_I2C_Sent_Data
    _Read_Time->_Bcd_to_Msb
    _Read_Time->_I2C_Read_Data
    _Read_Date->_Bcd_to_Msb
    _Read_Date->_I2C_Read_Data
    _Lcd_Print->_Lcd_Data
    _Lcd_Configuration->_Lcd_Cmd
    _I2C_Device_Select_R->_I2C_Sent_Data

Critical Paths under _main in BANK0

    _main->_Set_Time_Calender
    _Set_Year->_Bcd_Conversion
    _Set_Seconds->_Bcd_Conversion
    _Set_Month->_Bcd_Conversion
    _Set_Minute->_Bcd_Conversion
    _Set_Date->_Bcd_Conversion

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   11307
                _I2C_Device_Select_R
                    _I2C_Master_Init
                          _I2C_Start
                           _I2C_Stop
                            _Lcd_Cmd
                  _Lcd_Configuration
                          _Lcd_Print
                          _Read_Date
                          _Read_Time
                  _Set_Time_Calender
 ---------------------------------------------------------------------------------
 (1) _Set_Time_Calender                                    8     1      7    9223
                                              7 BANK0      8     1      7
                     _I2C_Data_Write
                _I2C_Device_Select_W
                           _Set_Date
                            _Set_Day
                         _Set_Minute
                          _Set_Month
                   _Set_Railway_Hour
                        _Set_Seconds
                  _Set_Standard_Hour
                           _Set_Year
 ---------------------------------------------------------------------------------
 (2) _Set_Year                                             1     1      0    1270
                                              9 COMMON     1     1      0
                     _Bcd_Conversion
 ---------------------------------------------------------------------------------
 (2) _Set_Standard_Hour                                    5     4      1    1029
                                              9 COMMON     5     4      1
                    _Hour_Conversion
 ---------------------------------------------------------------------------------
 (2) _Set_Seconds                                          1     1      0    1270
                                              9 COMMON     1     1      0
                     _Bcd_Conversion
 ---------------------------------------------------------------------------------
 (2) _Set_Railway_Hour                                     1     1      0     884
                                              9 COMMON     1     1      0
                    _Hour_Conversion
 ---------------------------------------------------------------------------------
 (3) _Hour_Conversion                                      3     3      0     862
                                              6 COMMON     3     3      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _Set_Month                                            1     1      0    1270
                                              9 COMMON     1     1      0
                     _Bcd_Conversion
 ---------------------------------------------------------------------------------
 (2) _Set_Minute                                           1     1      0    1270
                                              9 COMMON     1     1      0
                     _Bcd_Conversion
 ---------------------------------------------------------------------------------
 (2) _Set_Day                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Set_Date                                             1     1      0    1270
                                              9 COMMON     1     1      0
                     _Bcd_Conversion
 ---------------------------------------------------------------------------------
 (3) _Bcd_Conversion                                       8     8      0    1248
                                              8 COMMON     1     1      0
                                              0 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     752
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _I2C_Device_Select_W                                  2     1      1     142
                                              5 COMMON     2     1      1
                   _I2C_Repeat_Start
                      _I2C_Sent_Data
 ---------------------------------------------------------------------------------
 (2) _I2C_Data_Write                                       1     1      0      44
                                              5 COMMON     1     1      0
                      _I2C_Sent_Data
 ---------------------------------------------------------------------------------
 (1) _Read_Time                                            1     1      0     927
                                              2 COMMON     1     1      0
                           _Am_or_Pm
                         _Bcd_to_Lsb
                         _Bcd_to_Msb
                           _Hour_Msb
                      _I2C_Read_Data
 ---------------------------------------------------------------------------------
 (2) _Hour_Msb                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Am_or_Pm                                             1     1      0      44
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Read_Date                                            0     0      0     750
                         _Bcd_to_Lsb
                         _Bcd_to_Msb
                      _I2C_Read_Data
 ---------------------------------------------------------------------------------
 (2) _I2C_Read_Data                                        2     0      2     706
                                              0 COMMON     2     0      2
                            _I2C_ACK
                           _I2C_NACK
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _Bcd_to_Msb                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Bcd_to_Lsb                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Print                                            1     1      0     199
                                              3 COMMON     1     1      0
                           _Lcd_Data
 ---------------------------------------------------------------------------------
 (2) _Lcd_Data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Configuration                                    2     2      0      22
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Device_Select_R                                  2     1      1     164
                                              5 COMMON     2     1      1
                   _I2C_Repeat_Start
                      _I2C_Sent_Data
 ---------------------------------------------------------------------------------
 (3) _I2C_Sent_Data                                        5     3      2      22
                                              0 COMMON     5     3      2
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Repeat_Start                                     0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Device_Select_R
     _I2C_Repeat_Start
       _I2C_Wait
     _I2C_Sent_Data
       _I2C_Wait
   _I2C_Master_Init
   _I2C_Start
     _I2C_Wait
   _I2C_Stop
     _I2C_Wait
   _Lcd_Cmd
   _Lcd_Configuration
     _Lcd_Cmd
   _Lcd_Print
     _Lcd_Data
   _Read_Date
     _Bcd_to_Lsb
     _Bcd_to_Msb
     _I2C_Read_Data
       _I2C_ACK
         _I2C_Wait
       _I2C_NACK
         _I2C_Wait
       _I2C_Wait
   _Read_Time
     _Am_or_Pm
     _Bcd_to_Lsb
     _Bcd_to_Msb
     _Hour_Msb
     _I2C_Read_Data
   _Set_Time_Calender
     _I2C_Data_Write
       _I2C_Sent_Data
     _I2C_Device_Select_W
       _I2C_Repeat_Start
       _I2C_Sent_Data
     _Set_Date
       _Bcd_Conversion
         ___awdiv
         ___awmod
     _Set_Day
     _Set_Minute
       _Bcd_Conversion
     _Set_Month
       _Bcd_Conversion
     _Set_Railway_Hour
       _Hour_Conversion
         ___awmod
     _Set_Seconds
       _Bcd_Conversion
     _Set_Standard_Hour
       _Hour_Conversion
     _Set_Year
       _Bcd_Conversion

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      F      39       5       71.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      47      12        0.0%
ABS                  0      0      47       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Oct 26 14:38:13 2023

      __end_of_Hour_Conversion 04D7                              pc 0002                   ___awdiv@sign 0075  
                   _Bcd_to_Lsb 02B1                     _Bcd_to_Msb 030A                             fsr 0004  
                          l112 03FD                            l121 04A1                            l202 0380  
                          l115 0476                            l124 02BD                            l205 03AF  
                          l109 03EA                            l118 0494                            l230 02D5  
                          l216 06F9                            l240 03E2                            l224 0772  
                          l233 02E5                            l162 02F7                            l171 0349  
                          l219 0620                            l227 02C5                            l243 0309  
                          l156 032E                            l180 041B                            l252 02DD  
                          l165 0300                            l174 0321                            l190 046E  
                          l246 02CD                            l159 033A                            l183 0451  
                          l255 050D                            l239 03D9                            l168 02EE  
                          l280 02B5                            l264 03BD                            l177 032D  
                          l249 02B0                            l266 03C8                            l283 0315  
                          l259 04D6                            l196 0397                            l276 0358  
                          l268 03C3                            l550 0687                            l199 0564  
                          l563 05BD                            _CKE 04A6                            u500 0626  
                          u501 0625                            u510 0631                            u511 0630  
                          u520 0642                            u600 056A                            _PEN 048A  
                          u521 0641                            u601 0569                            u610 0575  
                          u611 0574                            u540 0654                            u620 0580  
                          u700 04A9                            u541 0653                            u621 057F  
                          u701 04A8                            u710 04C2                            u535 0646  
                          u711 04C1                            u480 0334                            u800 034F  
                          u720 03F7                            u560 0665                            u640 0592  
                          u481 0333                            u801 034E                            u721 03F6  
                          u561 0664                            u641 0591                            u490 033A  
                          u730 0457                            u810 0353                            u650 059C  
                          u491 0339                            u731 0456                            u811 0352  
                          u555 0655                            u651 059B                            u635 0584  
                          u740 0460                            u580 0679                            u820 03D0  
                          _SEN 0488                            u741 045F                            u581 0678  
                          u565 0661                            u821 03CF                            u830 0483  
                          u590 067E                            u670 05AF                            u831 0482  
                          u591 067D                            u575 066D                            u671 05AE  
                          u655 0598                            u840 04A1                            u760 03B5  
                          u680 05B4                            u841 04A0                            u761 03B4  
                          u681 05B3                            u665 05A3                            u850 0397  
                          u770 03B9                            u851 0396                            u755 030E  
                          u771 03B8                            u780 03C1                            u860 06EE  
                          u781 03C0                            u861 06ED                            u790 03C7  
                          u870 0725                            u791 03C6                            u695 0505  
                          u871 0724                            u957 037B                            _SMP 04A7  
                          u967 0523                            u977 0532                            u987 0541  
                          u997 0550                            _Day 0023                __end_of_I2C_ACK 0322  
                          _Min 0025                            _Sec 0024                            fsr0 0004  
                          indf 0000                   ___awmod@sign 0075       __end_of_I2C_Repeat_Start 02EF  
                         l1401 058E                           l1403 0592                           l1411 05AF  
                         l1333 032E                           l1421 02EB                           l1501 0372  
                         l1341 0626                           l1413 05B4                           l1405 059C  
                         l1335 0334                           l1423 03FF                           l1511 03A1  
                         l1503 0373                           l1351 063A                           l1343 062B  
                         l1415 05B9                           l1407 05A2                           l1425 0404  
                         l1513 03A2                           l1505 0377                           l1433 0316  
                         l1441 0325                           l1361 0650                           l1353 063C  
                         l1345 062D                           l1337 0621                           l1409 05A9  
                         l1601 02CF                           l1419 02E6                           l1427 0408  
                         l1611 0471                           l1507 0399                           l1515 02B2  
                         l1435 0319                           l1443 032A                           l1531 03BB  
                         l1523 03B1                           l1371 0673                           l1363 0654  
                         l1355 0642                           l1347 0631                           l1339 0622  
                         l1451 04A9                           l1429 040D                           l1613 0483  
                         l1621 02F8                           l1509 039D                           l1437 031E  
                         l1525 03B5                           l1365 0665                           l1357 0645  
                         l1373 0679                           l1349 0636                           l1381 0565  
                         l1445 04D8                           l1605 02DF                           l1615 048F  
                         l1623 02FD                           l1631 0383                           l1519 030B  
                         l1439 0322                           l1527 03B9                           l1471 03F7  
                         l1375 067E                           l1367 066B                           l1359 064C  
                         l1391 0575                           l1383 0566                           l1463 04D5  
                         l1609 0470                           l1625 033B                           l1617 02EF  
                         l1641 0519                           l1633 038B                           l1481 0449  
                         l1561 0355                           l1553 034B                           l1537 03C1  
                         l1377 0683                           l1369 066C                           l1393 057A  
                         l1385 056A                           l1457 04BC                           l1449 04A3  
                         l1627 0345                           l1619 02F4                           l1651 054C  
                         l1643 051F                           l1635 038F                           l1491 0466  
                         l1483 0457                           l1555 034F                           l1475 02B7  
                         l1467 03E4                           l1395 0580                           l1387 056F  
                         l1459 04C2                           l1571 02D7                           l1653 055B  
                         l1645 052E                           l1637 050E                           l1629 0382  
                         l1493 046B                           l1485 0459                           l1557 0353  
                         l1661 06EE                           l1469 03E5                           l1397 0583  
                         l1389 0571                           l1581 03D0                           l1741 07A3  
                         l1647 0537                           l1639 0514                           l1487 045A  
                         l1479 0444                           l1567 0357                           l1663 06F5  
                         l1655 0688                           l1399 058A                           l1575 02C7  
                         l1583 03D5                           l1671 0711                           l1751 07C6  
                         l1743 07A9                           l1735 0773                           l1649 0546  
                         l1497 036D                           l1489 0460                           l1665 05BE  
                         l1657 06D9                           l1593 02AF                           l1585 03DB  
                         l1681 074B                           l1673 071E                           l1761 07E2  
                         l1753 07CB                           l1745 07B5                           l1737 077D  
                         l1499 0371                           l1659 06E2                           l1579 03CA  
                         l1683 0758                           l1675 0725                           l1667 06FD  
                         l1755 07D0                           l1747 07BA                           l1739 0793  
                         l1597 02BF                           l1589 0302                           l1685 0765  
                         l1677 0733                           l1669 0704                           l1757 07D6  
                         l1749 07C1                           l1679 073E                           l1759 07DC  
                         _DATE 003C                           u1007 055F                           u1017 03AA  
                         _RCEN 048B                           _RSEN 0489            _I2C_Device_Select_R 046F  
          _I2C_Device_Select_W 03E3                           _Date 0020                           _Mode 0027  
                         _Hour 0026               __end_of_I2C_NACK 032E                           _Time 0042  
                         _Year 0021                           _buff 0058                           _main 0773  
                         _temp 0057                           btemp 007E               __end_of_I2C_Wait 033B  
             __end_of_I2C_Stop 0301                           start 0000                     Read_Time@c 0072  
              __end_of_Lcd_Cmd 03B0            Bcd_Conversion@value 0078                __end_of_Set_Day 02B1  
         ?_I2C_Device_Select_R 0075           ?_I2C_Device_Select_W 0075               ?_I2C_Master_Init 0070  
                        ?_main 0070                          _ACKEN 048C                          _ACKDT 048D  
              __end_of___awdiv 0688                __end_of___awmod 05BE                ___awdiv@divisor 0070  
              ___awdiv@counter 0074                          _PORTC 0007                          _PORTD 0008  
                        _TRISC 0087                          _TRISD 0088                          _SSPEN 00A5  
                        _SSPIF 0063                          _Month 0022              ?_Set_Railway_Hour 0070  
            __end_of_I2C_Start 02F8                          pclath 000A             ??_Set_Railway_Hour 0079  
                        status 0003                          wtemp0 007E               __end_of_Am_or_Pm 0359  
         Set_Standard_Hour@hrs 007A               __end_of_Lcd_Data 0381                     Set_Day@day 0070  
              __initialization 07EC                   __end_of_main 07EC               ?_Hour_Conversion 0070  
        ??_I2C_Device_Select_R 0076          ??_I2C_Device_Select_W 0076                      ??_I2C_ACK 0070  
                  ?_Bcd_to_Lsb 0070                    ?_Bcd_to_Msb 0070               __end_of_Hour_Msb 03C9  
                       ??_main 007E               __end_of_Set_Date 02C6               __end_of_Set_Year 02E6  
                ??_Set_Seconds 0079               ___awdiv@dividend 0072         Set_Time_Calender@Month 0053  
                Set_Minute@min 0079                    Hour_Msb@hrs 0070                     _Set_Minute 02C6  
                    ??_Lcd_Cmd 0070                         _SSPADD 0093                         _TRISC3 043B  
                       _TRISC4 043C                         _SSPCON 0014                         _SSPBUF 0013  
                    ??_Set_Day 0070                  _I2C_Read_Data 0444                      ??___awdiv 0074  
                    ??___awmod 0074               ___awdiv@quotient 0076                ___awmod@divisor 0070  
              ___awmod@counter 0074                      ?_I2C_NACK 0070                      ?_I2C_Wait 0070  
                    ?_I2C_Stop 0070                  _I2C_Sent_Data 03FE            __end_of_Set_Seconds 02DE  
             ??_Bcd_Conversion 0048        __end_of__initialization 07FC          Set_Standard_Hour@temp 007D  
            __end_of_Lcd_Print 0398                 ?_I2C_Read_Data 0070                 __pcstackCOMMON 0070  
                 __pidataBANK0 041C              __end_of_Read_Date 0621                     ??_I2C_NACK 0070  
            __end_of_Read_Time 06FA                 ?_I2C_Sent_Data 0070                     ??_I2C_Wait 0070  
                    ?_Am_or_Pm 0070                     ??_I2C_Stop 0070                      ?_Lcd_Data 0070  
            ?_I2C_Repeat_Start 0070              __end_of_Set_Month 02D6                     __pbssBANK0 0057  
           ??_I2C_Repeat_Start 0070                 _I2C_Data_Write 02B6                    ?_Set_Minute 0070  
                    ?_Hour_Msb 0070                      ?_Set_Date 0070                      ?_Set_Year 0070  
                   __pmaintext 0773                        _I2C_ACK 0316                        _ACKSTAT 048E  
                   ??_Am_or_Pm 0070                    _Set_Seconds 02D6                     ??_Lcd_Data 0070  
       __end_of_I2C_Data_Write 02BE                        _SSPCON2 0091                 Set_Month@Month 0079  
                      _Lcd_Cmd 0398                     ??_Hour_Msb 0070                      _I2C_Start 02EF  
              ??_I2C_Read_Data 0072                     ??_Set_Date 0079                     ??_Set_Year 0079  
                      _Set_Day 02AE                        ___awdiv 0621                        ___awmod 0565  
                 ??_Bcd_to_Lsb 0070                   ??_Bcd_to_Msb 0070                ??_I2C_Sent_Data 0072  
                      __ptext1 06FA                        __ptext2 02DE                        __ptext3 03C9  
                      __ptext4 02D6                        __ptext5 0301                        __ptext6 04A2  
                      __ptext7 02CE                        __ptext8 02C6                        __ptext9 02AE  
             ___awmod@dividend 0072                ?_I2C_Data_Write 0070           end_of_initialization 07FC  
            _Set_Time_Calender 06FA             __end_of_Bcd_to_Lsb 02B6             __end_of_Bcd_to_Msb 0316  
                   ?_I2C_Start 0070             ?_Set_Time_Calender 004F    __end_of_I2C_Device_Select_R 04A2  
  __end_of_I2C_Device_Select_W 03FE            ??_Set_Time_Calender 007E      __end_of_Set_Time_Calender 0773  
                 Set_Date@Date 0079             Set_Standard_Hour@C 0079  I2C_Device_Select_R@Device_add 0076  
                    _Lcd_Print 0381          _Set_Standard_Hour$265 007B            start_initialization 07EC  
                 _Current_Date 0033                      _Read_Date 05BE                   _Current_Time 0028  
                    _Read_Time 0688                   ??_Set_Minute 0079              ??_I2C_Master_Init 0070  
        Set_Time_Calender@Date 0055          Set_Time_Calender@Mode 0050          Set_Time_Calender@Hour 0051  
        Set_Time_Calender@Year 0054                    ??_I2C_Start 0070                      _Set_Month 02CE  
                 Set_Year@Year 0079                     init_fetch0 0359               _Set_Railway_Hour 0301  
                   ?_Lcd_Print 0070                    __pdataBANK0 0020                       ?_I2C_ACK 0070  
           __end_of_Set_Minute 02CE     I2C_Device_Select_R@Reg_add 0075                   ?_Set_Seconds 0070  
                    ___latbits 0002                  __pcstackBANK0 0048                     ?_Read_Date 0070  
                   ?_Read_Time 0070              I2C_Sent_Data@data 0074              ??_Hour_Conversion 0076  
   I2C_Device_Select_W@Reg_add 0075                       ?_Lcd_Cmd 0070                     ?_Set_Month 0070  
                     ?_Set_Day 0070              _Lcd_Configuration 050E                       ?___awdiv 0070  
                     ?___awmod 0070             ?_Lcd_Configuration 0070             I2C_Data_Write@data 0075  
                     _I2C_NACK 0322               ??_I2C_Data_Write 0075                       _I2C_Wait 032E  
                     _I2C_Stop 02F8            ??_Lcd_Configuration 0073  I2C_Device_Select_W@Device_add 0076  
                 Lcd_Data@data 0072              _Set_Standard_Hour 03C9      __end_of_Lcd_Configuration 0565  
           ?_Set_Standard_Hour 0079          __end_of_I2C_Read_Data 046F                    ??_Lcd_Print 0073  
          ??_Set_Standard_Hour 007A                    Am_or_Pm@hrs 0070          __end_of_I2C_Sent_Data 041C  
                     _Am_or_Pm 034A                    ??_Read_Date 0072                       _Lcd_Data 036C  
                  ??_Read_Time 0072      __end_of_Set_Standard_Hour 03E3                       _Hour_Msb 03B0  
                  ??_Set_Month 0079           Set_Time_Calender@Day 0052                       _Set_Date 02BE  
         Set_Time_Calender@Min 004F           Set_Time_Calender@Sec 0056                       _Set_Year 02DE  
            I2C_Read_Data@flag 0070               _I2C_Repeat_Start 02E6             Set_Seconds@seconds 0079  
              _I2C_Master_Init 033B                       __ptext10 02BE                       __ptext11 04D7  
                     __ptext20 0444                       __ptext12 0565                       __ptext21 0322  
                     __ptext13 0621                       __ptext30 02EF                       __ptext22 0316  
                     __ptext14 03E3                       __ptext31 033B                       __ptext23 030A  
                     __ptext15 02B6                       __ptext32 046F                       __ptext24 02B1  
                     __ptext16 0688                       __ptext33 03FE                       __ptext25 0381  
                     __ptext17 03B0                       __ptext34 02E6                       __ptext26 036C  
                     __ptext18 034A                       __ptext35 032E                       __ptext27 050E  
                     __ptext19 05BE                       __ptext28 0398                       __ptext29 02F8  
     __end_of_Set_Railway_Hour 030A             Hour_Conversion@hrs 0078                 _Bcd_Conversion 04D7  
              _Hour_Conversion 04A2                     _READ_WRITE 04A2                       init_ram0 035D  
              Bcd_to_Lsb@value 0070                Bcd_to_Msb@value 0071                     Lcd_Cmd@cmd 0072  
       __end_of_Bcd_Conversion 050E        __end_of_I2C_Master_Init 034A                     Lcd_Print@x 0073  
          Set_Railway_Hour@hrs 0079                ?_Bcd_Conversion 0070  
