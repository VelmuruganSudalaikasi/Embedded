

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Oct 11 16:28:19 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 22/03/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009C                     	;# 
   158     009D                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     0019                     _TXREG	set	25
   168     001A                     _RCREG	set	26
   169     0018                     _RCSTA	set	24
   170     0006                     _PORTB	set	6
   171     0065                     _RCIF	set	101
   172     0099                     _SPBRG	set	153
   173     0098                     _TXSTA	set	152
   174     0087                     _TRISC	set	135
   175     0086                     _TRISB	set	134
   176                           
   177                           	psect	cinit
   178     07FB                     start_initialization:	
   179                           ; #config settings
   180                           
   181     07FB                     __initialization:
   182                           
   183                           ; Clear objects allocated to COMMON
   184     07FB  01F2               	clrf	__pbssCOMMON& (0+127)
   185     07FC                     end_of_initialization:	
   186                           ;End of C runtime variable initialization code
   187                           
   188     07FC                     __end_of__initialization:
   189     07FC  0183               	clrf	3
   190     07FD  120A  118A  2F83   	ljmp	_main	;jump to C main() function
   191                           
   192                           	psect	bssCOMMON
   193     0072                     __pbssCOMMON:
   194     0072                     _result:
   195     0072                     	ds	1
   196                           
   197                           	psect	cstackCOMMON
   198     0070                     __pcstackCOMMON:
   199     0070                     ?_init:
   200     0070                     ??_init:	
   201                           ; 1 bytes @ 0x0
   202                           
   203     0070                     ?_RT_Scanning:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     ??_RT_Scanning:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     ?_main:	
   210                           ; 1 bytes @ 0x0
   211                           
   212                           
   213                           ; 1 bytes @ 0x0
   214     0070                     	ds	2
   215     0072                     ??_main:
   216                           
   217                           	psect	maintext
   218     0783                     __pmaintext:	
   219                           ; 1 bytes @ 0x2
   220 ;;
   221 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   222 ;;
   223 ;; *************** function _main *****************
   224 ;; Defined at:
   225 ;;		line 26 in file "UART_RX.c"
   226 ;; Parameters:    Size  Location     Type
   227 ;;		None
   228 ;; Auto vars:     Size  Location     Type
   229 ;;		None
   230 ;; Return value:  Size  Location     Type
   231 ;;                  1    wreg      void 
   232 ;; Registers used:
   233 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   234 ;; Tracked objects:
   235 ;;		On entry : B00/0
   236 ;;		On exit  : 0/0
   237 ;;		Unchanged: 0/0
   238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   239 ;;      Params:         0       0       0       0       0
   240 ;;      Locals:         0       0       0       0       0
   241 ;;      Temps:          0       0       0       0       0
   242 ;;      Totals:         0       0       0       0       0
   243 ;;Total ram usage:        0 bytes
   244 ;; Hardware stack levels required when called: 1
   245 ;; This function calls:
   246 ;;		_RT_Scanning
   247 ;;		_init
   248 ;; This function is called by:
   249 ;;		Startup code after reset
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253     0783                     _main:	
   254                           ;psect for function _main
   255                           
   256     0783                     l671:	
   257                           ;incstack = 0
   258                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   259                           
   260                           
   261                           ;UART_RX.c: 27:     init();
   262     0783  120A  118A  2791  120A  118A  	fcall	_init
   263     0788                     l673:
   264                           
   265                           ;UART_RX.c: 29:     RT_Scanning();
   266     0788  120A  118A  27AC  120A  118A  	fcall	_RT_Scanning
   267     078D  2F88               	goto	l673
   268     078E  120A  118A  2800   	ljmp	start
   269     0791                     __end_of_main:
   270                           
   271                           	psect	text1
   272     0791                     __ptext1:	
   273 ;; *************** function _init *****************
   274 ;; Defined at:
   275 ;;		line 32 in file "UART_RX.c"
   276 ;; Parameters:    Size  Location     Type
   277 ;;		None
   278 ;; Auto vars:     Size  Location     Type
   279 ;;		None
   280 ;; Return value:  Size  Location     Type
   281 ;;                  1    wreg      void 
   282 ;; Registers used:
   283 ;;		wreg, status,2
   284 ;; Tracked objects:
   285 ;;		On entry : 0/0
   286 ;;		On exit  : 0/0
   287 ;;		Unchanged: 0/0
   288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   289 ;;      Params:         0       0       0       0       0
   290 ;;      Locals:         0       0       0       0       0
   291 ;;      Temps:          0       0       0       0       0
   292 ;;      Totals:         0       0       0       0       0
   293 ;;Total ram usage:        0 bytes
   294 ;; Hardware stack levels used: 1
   295 ;; This function calls:
   296 ;;		Nothing
   297 ;; This function is called by:
   298 ;;		_main
   299 ;; This function uses a non-reentrant model
   300 ;;
   301                           
   302     0791                     _init:	
   303                           ;psect for function _init
   304                           
   305     0791                     l639:	
   306                           ;incstack = 0
   307                           ; Regs used in _init: [wreg+status,2]
   308                           
   309                           
   310                           ;UART_RX.c: 33:     TRISB=0x80;
   311     0791  3080               	movlw	128
   312     0792  1683               	bsf	3,5	;RP0=1, select bank1
   313     0793  1303               	bcf	3,6	;RP1=0, select bank1
   314     0794  0086               	movwf	6	;volatile
   315     0795                     l641:
   316                           
   317                           ;UART_RX.c: 34:     PORTB=0x00;
   318     0795  1283               	bcf	3,5	;RP0=0, select bank0
   319     0796  1303               	bcf	3,6	;RP1=0, select bank0
   320     0797  0186               	clrf	6	;volatile
   321     0798                     l643:
   322                           
   323                           ;UART_RX.c: 35:     TRISC=0x80;
   324     0798  3080               	movlw	128
   325     0799  1683               	bsf	3,5	;RP0=1, select bank1
   326     079A  1303               	bcf	3,6	;RP1=0, select bank1
   327     079B  0087               	movwf	7	;volatile
   328                           
   329                           ;UART_RX.c: 36:     PORTB=0x00;
   330     079C  1283               	bcf	3,5	;RP0=0, select bank0
   331     079D  1303               	bcf	3,6	;RP1=0, select bank0
   332     079E  0186               	clrf	6	;volatile
   333     079F                     l645:
   334                           
   335                           ;UART_RX.c: 38:     TXSTA=0x20;
   336     079F  3020               	movlw	32
   337     07A0  1683               	bsf	3,5	;RP0=1, select bank1
   338     07A1  1303               	bcf	3,6	;RP1=0, select bank1
   339     07A2  0098               	movwf	24	;volatile
   340     07A3                     l647:
   341                           
   342                           ;UART_RX.c: 39:     RCSTA=0x90;
   343     07A3  3090               	movlw	144
   344     07A4  1283               	bcf	3,5	;RP0=0, select bank0
   345     07A5  1303               	bcf	3,6	;RP1=0, select bank0
   346     07A6  0098               	movwf	24	;volatile
   347     07A7                     l649:
   348                           
   349                           ;UART_RX.c: 40:     SPBRG=0x09;
   350     07A7  3009               	movlw	9
   351     07A8  1683               	bsf	3,5	;RP0=1, select bank1
   352     07A9  1303               	bcf	3,6	;RP1=0, select bank1
   353     07AA  0099               	movwf	25	;volatile
   354     07AB                     l37:
   355     07AB  0008               	return
   356     07AC                     __end_of_init:
   357                           
   358                           	psect	text2
   359     07AC                     __ptext2:	
   360 ;; *************** function _RT_Scanning *****************
   361 ;; Defined at:
   362 ;;		line 42 in file "UART_RX.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   376 ;;      Params:         0       0       0       0       0
   377 ;;      Locals:         0       0       0       0       0
   378 ;;      Temps:          2       0       0       0       0
   379 ;;      Totals:         2       0       0       0       0
   380 ;;Total ram usage:        2 bytes
   381 ;; Hardware stack levels used: 1
   382 ;; This function calls:
   383 ;;		Nothing
   384 ;; This function is called by:
   385 ;;		_main
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389     07AC                     _RT_Scanning:	
   390                           ;psect for function _RT_Scanning
   391                           
   392     07AC                     l651:	
   393                           ;incstack = 0
   394                           ; Regs used in _RT_Scanning: [wreg-fsr0h+status,2+status,0]
   395                           
   396                           
   397                           ;UART_RX.c: 43:     if(RCIF==1){
   398     07AC  1283               	bcf	3,5	;RP0=0, select bank0
   399     07AD  1303               	bcf	3,6	;RP1=0, select bank0
   400     07AE  1E8C               	btfss	12,5	;volatile
   401     07AF  2FB1               	goto	u11
   402     07B0  2FB2               	goto	u10
   403     07B1                     u11:
   404     07B1  2FFA               	goto	l47
   405     07B2                     u10:
   406     07B2                     l653:
   407                           
   408                           ;UART_RX.c: 44:     result=RCREG;
   409     07B2  081A               	movf	26,w	;volatile
   410     07B3  00F2               	movwf	_result
   411                           
   412                           ;UART_RX.c: 45:     switch(result){
   413     07B4  2FE1               	goto	l665
   414     07B5                     l655:
   415     07B5  3061               	movlw	97
   416     07B6  0099               	movwf	25	;volatile
   417     07B7  30C3               	movlw	195
   418     07B8  00F1               	movwf	??_RT_Scanning+1
   419     07B9  30CD               	movlw	205
   420     07BA  00F0               	movwf	??_RT_Scanning
   421     07BB                     u27:
   422     07BB  0BF0               	decfsz	??_RT_Scanning,f
   423     07BC  2FBB               	goto	u27
   424     07BD  0BF1               	decfsz	??_RT_Scanning+1,f
   425     07BE  2FBB               	goto	u27
   426     07BF  2FF7               	goto	l43
   427     07C0                     l657:
   428     07C0  3062               	movlw	98
   429     07C1  0099               	movwf	25	;volatile
   430     07C2  30C3               	movlw	195
   431     07C3  00F1               	movwf	??_RT_Scanning+1
   432     07C4  30CD               	movlw	205
   433     07C5  00F0               	movwf	??_RT_Scanning
   434     07C6                     u37:
   435     07C6  0BF0               	decfsz	??_RT_Scanning,f
   436     07C7  2FC6               	goto	u37
   437     07C8  0BF1               	decfsz	??_RT_Scanning+1,f
   438     07C9  2FC6               	goto	u37
   439     07CA  2FF7               	goto	l43
   440     07CB                     l659:
   441     07CB  3063               	movlw	99
   442     07CC  0099               	movwf	25	;volatile
   443     07CD  30C3               	movlw	195
   444     07CE  00F1               	movwf	??_RT_Scanning+1
   445     07CF  30CD               	movlw	205
   446     07D0  00F0               	movwf	??_RT_Scanning
   447     07D1                     u47:
   448     07D1  0BF0               	decfsz	??_RT_Scanning,f
   449     07D2  2FD1               	goto	u47
   450     07D3  0BF1               	decfsz	??_RT_Scanning+1,f
   451     07D4  2FD1               	goto	u47
   452     07D5  2FF7               	goto	l43
   453     07D6                     l661:
   454     07D6  3064               	movlw	100
   455     07D7  0099               	movwf	25	;volatile
   456     07D8  30C3               	movlw	195
   457     07D9  00F1               	movwf	??_RT_Scanning+1
   458     07DA  30CD               	movlw	205
   459     07DB  00F0               	movwf	??_RT_Scanning
   460     07DC                     u57:
   461     07DC  0BF0               	decfsz	??_RT_Scanning,f
   462     07DD  2FDC               	goto	u57
   463     07DE  0BF1               	decfsz	??_RT_Scanning+1,f
   464     07DF  2FDC               	goto	u57
   465     07E0  2FF7               	goto	l43
   466     07E1                     l665:
   467     07E1  0872               	movf	_result,w
   468     07E2  00F0               	movwf	??_RT_Scanning
   469     07E3  01F1               	clrf	??_RT_Scanning+1
   470                           
   471                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   472                           ; Switch size 1, requested type "simple"
   473                           ; Number of cases is 1, Range of values is 0 to 0
   474                           ; switch strategies available:
   475                           ; Name         Instructions Cycles
   476                           ; simple_byte            4     3 (average)
   477                           ; direct_byte           11     8 (fixed)
   478                           ; jumptable            260     6 (fixed)
   479                           ;	Chosen strategy is simple_byte
   480     07E4  0871               	movf	??_RT_Scanning+1,w
   481     07E5  3A00               	xorlw	0	; case 0
   482     07E6  1903               	skipnz
   483     07E7  2FE9               	goto	l695
   484     07E8  2FF7               	goto	l43
   485     07E9                     l695:
   486                           
   487                           ; Switch size 1, requested type "simple"
   488                           ; Number of cases is 4, Range of values is 65 to 68
   489                           ; switch strategies available:
   490                           ; Name         Instructions Cycles
   491                           ; simple_byte           13     7 (average)
   492                           ; direct_byte           23    11 (fixed)
   493                           ; jumptable            263     9 (fixed)
   494                           ;	Chosen strategy is simple_byte
   495     07E9  0870               	movf	??_RT_Scanning,w
   496     07EA  3A41               	xorlw	65	; case 65
   497     07EB  1903               	skipnz
   498     07EC  2FB5               	goto	l655
   499     07ED  3A03               	xorlw	3	; case 66
   500     07EE  1903               	skipnz
   501     07EF  2FC0               	goto	l657
   502     07F0  3A01               	xorlw	1	; case 67
   503     07F1  1903               	skipnz
   504     07F2  2FCB               	goto	l659
   505     07F3  3A07               	xorlw	7	; case 68
   506     07F4  1903               	skipnz
   507     07F5  2FD6               	goto	l661
   508     07F6  2FF7               	goto	l43
   509     07F7                     l43:
   510     07F7  1283               	bcf	3,5	;RP0=0, select bank0
   511     07F8  1303               	bcf	3,6	;RP1=0, select bank0
   512     07F9  128C               	bcf	12,5	;volatile
   513     07FA                     l47:
   514     07FA  0008               	return
   515     07FB                     __end_of_RT_Scanning:
   516     007E                     btemp	set	126	;btemp
   517     007E                     wtemp0	set	126
   518                           
   519                           	psect	config
   520                           
   521                           ;Config register CONFIG @ 0x2007
   522                           ;	Oscillator Selection bits
   523                           ;	FOSC = EXTRC, RC oscillator
   524                           ;	Watchdog Timer Enable bit
   525                           ;	WDTE = OFF, WDT disabled
   526                           ;	Power-up Timer Enable bit
   527                           ;	PWRTE = OFF, PWRT disabled
   528                           ;	Brown-out Reset Enable bit
   529                           ;	BOREN = OFF, BOR disabled
   530                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   531                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   532                           ;	Data EEPROM Memory Code Protection bit
   533                           ;	CPD = OFF, Data EEPROM code protection off
   534                           ;	Flash Program Memory Write Enable bits
   535                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   536                           ;	In-Circuit Debugger Mode bit
   537                           ;	DEBUG = 0x1, unprogrammed default
   538                           ;	Flash Program Memory Code Protection bit
   539                           ;	CP = OFF, Code protection off
   540     2007                     	org	8199
   541     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_RT_Scanning

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _RT_Scanning
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RT_Scanning                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RT_Scanning
   _init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       3       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       3      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Oct 11 16:28:19 2023

                     l43 07F7                       l37 07AB                       l47 07FA  
                     u10 07B2                       u11 07B1                       u27 07BB  
                     u37 07C6                       u47 07D1                       u57 07DC  
                    l641 0795                      l651 07AC                      l643 0798  
                    l661 07D6                      l653 07B2                      l645 079F  
                    l655 07B5                      l647 07A3                      l639 0791  
                    l671 0783                      l657 07C0                      l665 07E1  
                    l649 07A7                      l673 0788                      l659 07CB  
                    l695 07E9                     _RCIF 0065                     _main 0783  
                   _init 0791                     btemp 007E                     start 0000  
                  ?_main 0070                    ?_init 0070                    _RCREG 001A  
                  _RCSTA 0018                    _SPBRG 0099                    _PORTB 0006  
                  _TRISB 0086                    _TRISC 0087                    _TXREG 0019  
                  _TXSTA 0098              _RT_Scanning 07AC                    status 0003  
                  wtemp0 007E          __initialization 07FB             __end_of_main 0791  
           __end_of_init 07AC                   ??_main 0072                   ??_init 0070  
                 _result 0072  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 0783             ?_RT_Scanning 0070                  __ptext1 0791  
                __ptext2 07AC     end_of_initialization 07FC      start_initialization 07FB  
            __pbssCOMMON 0072                ___latbits 0002            ??_RT_Scanning 0070  
    __end_of_RT_Scanning 07FB  
