

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Oct 11 18:56:26 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 22/03/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170     001A                     _RCREG	set	26
   171     0019                     _TXREG	set	25
   172     0018                     _RCSTA	set	24
   173     0007                     _PORTC	set	7
   174     0008                     _PORTD	set	8
   175     0006                     _PORTB	set	6
   176     0065                     _RCIF	set	101
   177     0099                     _SPBRG	set	153
   178     0098                     _TXSTA	set	152
   179     0087                     _TRISC	set	135
   180     0081                     _OPTION_REG	set	129
   181     0086                     _TRISB	set	134
   182     0088                     _TRISD	set	136
   183                           
   184                           	psect	cinit
   185     07FA                     start_initialization:	
   186                           ; #config settings
   187                           
   188     07FA                     __initialization:
   189                           
   190                           ; Clear objects allocated to COMMON
   191     07FA  01F5               	clrf	__pbssCOMMON& (0+127)
   192     07FB  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   193     07FC                     end_of_initialization:	
   194                           ;End of C runtime variable initialization code
   195                           
   196     07FC                     __end_of__initialization:
   197     07FC  0183               	clrf	3
   198     07FD  120A  118A  2E8C   	ljmp	_main	;jump to C main() function
   199                           
   200                           	psect	bssCOMMON
   201     0075                     __pbssCOMMON:
   202     0075                     _value:
   203     0075                     	ds	1
   204     0076                     _result:
   205     0076                     	ds	1
   206                           
   207                           	psect	cstackCOMMON
   208     0070                     __pcstackCOMMON:
   209     0070                     ?_init:
   210     0070                     ?_TX_Scanning:	
   211                           ; 1 bytes @ 0x0
   212                           
   213     0070                     ?_RX_Scanning:	
   214                           ; 1 bytes @ 0x0
   215                           
   216     0070                     ?_Lcd_cmd:	
   217                           ; 1 bytes @ 0x0
   218                           
   219     0070                     ??_Lcd_cmd:	
   220                           ; 1 bytes @ 0x0
   221                           
   222     0070                     ?_Lcd_data:	
   223                           ; 1 bytes @ 0x0
   224                           
   225     0070                     ??_Lcd_data:	
   226                           ; 1 bytes @ 0x0
   227                           
   228     0070                     ?_main:	
   229                           ; 1 bytes @ 0x0
   230                           
   231                           
   232                           ; 1 bytes @ 0x0
   233     0070                     	ds	2
   234     0072                     Lcd_cmd@cmd:
   235     0072                     Lcd_data@data:	
   236                           ; 1 bytes @ 0x2
   237                           
   238                           
   239                           ; 1 bytes @ 0x2
   240     0072                     	ds	1
   241     0073                     ??_init:
   242     0073                     ??_TX_Scanning:	
   243                           ; 1 bytes @ 0x3
   244                           
   245     0073                     ??_RX_Scanning:	
   246                           ; 1 bytes @ 0x3
   247                           
   248                           
   249                           ; 1 bytes @ 0x3
   250     0073                     	ds	2
   251     0075                     ??_main:
   252                           
   253                           	psect	maintext
   254     068C                     __pmaintext:	
   255                           ; 1 bytes @ 0x5
   256 ;;
   257 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   258 ;;
   259 ;; *************** function _main *****************
   260 ;; Defined at:
   261 ;;		line 28 in file "UART_TX.c"
   262 ;; Parameters:    Size  Location     Type
   263 ;;		None
   264 ;; Auto vars:     Size  Location     Type
   265 ;;		None
   266 ;; Return value:  Size  Location     Type
   267 ;;                  1    wreg      void 
   268 ;; Registers used:
   269 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   270 ;; Tracked objects:
   271 ;;		On entry : B00/0
   272 ;;		On exit  : 0/0
   273 ;;		Unchanged: 0/0
   274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   275 ;;      Params:         0       0       0       0       0
   276 ;;      Locals:         0       0       0       0       0
   277 ;;      Temps:          0       0       0       0       0
   278 ;;      Totals:         0       0       0       0       0
   279 ;;Total ram usage:        0 bytes
   280 ;; Hardware stack levels required when called: 2
   281 ;; This function calls:
   282 ;;		_RX_Scanning
   283 ;;		_TX_Scanning
   284 ;;		_init
   285 ;; This function is called by:
   286 ;;		Startup code after reset
   287 ;; This function uses a non-reentrant model
   288 ;;
   289                           
   290     068C                     _main:	
   291                           ;psect for function _main
   292                           
   293     068C                     l808:	
   294                           ;incstack = 0
   295                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   296                           
   297                           
   298                           ;UART_TX.c: 29:     init();
   299     068C  120A  118A  276D  120A  118A  	fcall	_init
   300     0691                     l810:
   301                           
   302                           ;UART_TX.c: 31:     TX_Scanning();
   303     0691  120A  118A  2717  120A  118A  	fcall	_TX_Scanning
   304     0696                     l812:
   305                           
   306                           ;UART_TX.c: 32:     RX_Scanning();
   307     0696  120A  118A  26CA  120A  118A  	fcall	_RX_Scanning
   308     069B  2E91               	goto	l810
   309     069C  120A  118A  2800   	ljmp	start
   310     069F                     __end_of_main:
   311                           
   312                           	psect	text1
   313     076D                     __ptext1:	
   314 ;; *************** function _init *****************
   315 ;; Defined at:
   316 ;;		line 37 in file "UART_TX.c"
   317 ;; Parameters:    Size  Location     Type
   318 ;;		None
   319 ;; Auto vars:     Size  Location     Type
   320 ;;		None
   321 ;; Return value:  Size  Location     Type
   322 ;;                  1    wreg      void 
   323 ;; Registers used:
   324 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   325 ;; Tracked objects:
   326 ;;		On entry : 0/0
   327 ;;		On exit  : 0/0
   328 ;;		Unchanged: 0/0
   329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   330 ;;      Params:         0       0       0       0       0
   331 ;;      Locals:         0       0       0       0       0
   332 ;;      Temps:          2       0       0       0       0
   333 ;;      Totals:         2       0       0       0       0
   334 ;;Total ram usage:        2 bytes
   335 ;; Hardware stack levels used: 1
   336 ;; Hardware stack levels required when called: 1
   337 ;; This function calls:
   338 ;;		_Lcd_cmd
   339 ;;		_Lcd_data
   340 ;; This function is called by:
   341 ;;		_main
   342 ;; This function uses a non-reentrant model
   343 ;;
   344                           
   345     076D                     _init:	
   346                           ;psect for function _init
   347                           
   348     076D                     l688:	
   349                           ;incstack = 0
   350                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   351                           
   352                           
   353                           ;UART_TX.c: 38:     TRISD=0x00;
   354     076D  1683               	bsf	3,5	;RP0=1, select bank1
   355     076E  1303               	bcf	3,6	;RP1=0, select bank1
   356     076F  0188               	clrf	8	;volatile
   357     0770                     l690:
   358                           
   359                           ;UART_TX.c: 39:     TRISB=0xF0;
   360     0770  30F0               	movlw	240
   361     0771  0086               	movwf	6	;volatile
   362     0772                     l692:
   363                           
   364                           ;UART_TX.c: 40:     PORTB=0x00;
   365     0772  1283               	bcf	3,5	;RP0=0, select bank0
   366     0773  1303               	bcf	3,6	;RP1=0, select bank0
   367     0774  0186               	clrf	6	;volatile
   368     0775                     l694:
   369                           
   370                           ;UART_TX.c: 41:     PORTD=0x00;
   371     0775  0188               	clrf	8	;volatile
   372     0776                     l696:
   373                           
   374                           ;UART_TX.c: 42:     PORTC=0x00;
   375     0776  0187               	clrf	7	;volatile
   376     0777                     l698:
   377                           
   378                           ;UART_TX.c: 45:     OPTION_REG&=0x7F;
   379     0777  307F               	movlw	127
   380     0778  00FF               	movwf	btemp+1
   381     0779  087F               	movf	btemp+1,w
   382     077A  1683               	bsf	3,5	;RP0=1, select bank1
   383     077B  1303               	bcf	3,6	;RP1=0, select bank1
   384     077C  0581               	andwf	1,f	;volatile
   385     077D                     l700:
   386                           
   387                           ;UART_TX.c: 47:     TRISC=0x80;
   388     077D  3080               	movlw	128
   389     077E  0087               	movwf	7	;volatile
   390     077F                     l702:
   391                           
   392                           ;UART_TX.c: 49:     TXSTA=0x20;
   393     077F  3020               	movlw	32
   394     0780  0098               	movwf	24	;volatile
   395     0781                     l704:
   396                           
   397                           ;UART_TX.c: 50:     RCSTA=0x90;
   398     0781  3090               	movlw	144
   399     0782  1283               	bcf	3,5	;RP0=0, select bank0
   400     0783  1303               	bcf	3,6	;RP1=0, select bank0
   401     0784  0098               	movwf	24	;volatile
   402     0785                     l706:
   403                           
   404                           ;UART_TX.c: 51:     SPBRG=0x09;
   405     0785  3009               	movlw	9
   406     0786  1683               	bsf	3,5	;RP0=1, select bank1
   407     0787  1303               	bcf	3,6	;RP1=0, select bank1
   408     0788  0099               	movwf	25	;volatile
   409     0789                     l708:
   410                           
   411                           ;UART_TX.c: 54:     Lcd_cmd(0x38);
   412     0789  3038               	movlw	56
   413     078A  120A  118A  26B3  120A  118A  	fcall	_Lcd_cmd
   414     078F                     l710:
   415                           
   416                           ;UART_TX.c: 55:     _delay((unsigned long)((100)*(6000000/4000.0)));
   417     078F  30C3               	movlw	195
   418     0790  00F4               	movwf	??_init+1
   419     0791  30CD               	movlw	205
   420     0792  00F3               	movwf	??_init
   421     0793                     u27:
   422     0793  0BF3               	decfsz	??_init,f
   423     0794  2F93               	goto	u27
   424     0795  0BF4               	decfsz	??_init+1,f
   425     0796  2F93               	goto	u27
   426     0797                     l712:
   427                           
   428                           ;UART_TX.c: 56:     Lcd_cmd(0x38);
   429     0797  3038               	movlw	56
   430     0798  120A  118A  26B3  120A  118A  	fcall	_Lcd_cmd
   431     079D                     l714:
   432                           
   433                           ;UART_TX.c: 57:     _delay((unsigned long)((100)*(6000000/4000.0)));
   434     079D  30C3               	movlw	195
   435     079E  00F4               	movwf	??_init+1
   436     079F  30CD               	movlw	205
   437     07A0  00F3               	movwf	??_init
   438     07A1                     u37:
   439     07A1  0BF3               	decfsz	??_init,f
   440     07A2  2FA1               	goto	u37
   441     07A3  0BF4               	decfsz	??_init+1,f
   442     07A4  2FA1               	goto	u37
   443     07A5                     l716:
   444                           
   445                           ;UART_TX.c: 58:     Lcd_cmd(0x06);
   446     07A5  3006               	movlw	6
   447     07A6  120A  118A  26B3  120A  118A  	fcall	_Lcd_cmd
   448     07AB                     l718:
   449                           
   450                           ;UART_TX.c: 59:     _delay((unsigned long)((100)*(6000000/4000.0)));
   451     07AB  30C3               	movlw	195
   452     07AC  00F4               	movwf	??_init+1
   453     07AD  30CD               	movlw	205
   454     07AE  00F3               	movwf	??_init
   455     07AF                     u47:
   456     07AF  0BF3               	decfsz	??_init,f
   457     07B0  2FAF               	goto	u47
   458     07B1  0BF4               	decfsz	??_init+1,f
   459     07B2  2FAF               	goto	u47
   460     07B3                     l720:
   461                           
   462                           ;UART_TX.c: 60:     Lcd_cmd(0x0C);
   463     07B3  300C               	movlw	12
   464     07B4  120A  118A  26B3  120A  118A  	fcall	_Lcd_cmd
   465     07B9                     l722:
   466                           
   467                           ;UART_TX.c: 61:     _delay((unsigned long)((100)*(6000000/4000.0)));
   468     07B9  30C3               	movlw	195
   469     07BA  00F4               	movwf	??_init+1
   470     07BB  30CD               	movlw	205
   471     07BC  00F3               	movwf	??_init
   472     07BD                     u57:
   473     07BD  0BF3               	decfsz	??_init,f
   474     07BE  2FBD               	goto	u57
   475     07BF  0BF4               	decfsz	??_init+1,f
   476     07C0  2FBD               	goto	u57
   477     07C1                     l724:
   478                           
   479                           ;UART_TX.c: 62:     Lcd_cmd(0x80);
   480     07C1  3080               	movlw	128
   481     07C2  120A  118A  26B3  120A  118A  	fcall	_Lcd_cmd
   482     07C7                     l726:
   483                           
   484                           ;UART_TX.c: 63:     _delay((unsigned long)((100)*(6000000/4000.0)));
   485     07C7  30C3               	movlw	195
   486     07C8  00F4               	movwf	??_init+1
   487     07C9  30CD               	movlw	205
   488     07CA  00F3               	movwf	??_init
   489     07CB                     u67:
   490     07CB  0BF3               	decfsz	??_init,f
   491     07CC  2FCB               	goto	u67
   492     07CD  0BF4               	decfsz	??_init+1,f
   493     07CE  2FCB               	goto	u67
   494     07CF                     l728:
   495                           
   496                           ;UART_TX.c: 64:     Lcd_data('T');
   497     07CF  3054               	movlw	84
   498     07D0  120A  118A  269F  120A  118A  	fcall	_Lcd_data
   499     07D5                     l730:
   500                           
   501                           ;UART_TX.c: 65:     Lcd_data('X');
   502     07D5  3058               	movlw	88
   503     07D6  120A  118A  269F  120A  118A  	fcall	_Lcd_data
   504     07DB                     l732:
   505                           
   506                           ;UART_TX.c: 66:     Lcd_data(':');
   507     07DB  303A               	movlw	58
   508     07DC  120A  118A  269F  120A  118A  	fcall	_Lcd_data
   509     07E1                     l734:
   510                           
   511                           ;UART_TX.c: 67:     Lcd_cmd(0xC0);
   512     07E1  30C0               	movlw	192
   513     07E2  120A  118A  26B3  120A  118A  	fcall	_Lcd_cmd
   514     07E7                     l736:
   515                           
   516                           ;UART_TX.c: 68:     Lcd_data('R');
   517     07E7  3052               	movlw	82
   518     07E8  120A  118A  269F  120A  118A  	fcall	_Lcd_data
   519     07ED                     l738:
   520                           
   521                           ;UART_TX.c: 69:     Lcd_data('X');
   522     07ED  3058               	movlw	88
   523     07EE  120A  118A  269F  120A  118A  	fcall	_Lcd_data
   524     07F3                     l740:
   525                           
   526                           ;UART_TX.c: 70:     Lcd_data(':');
   527     07F3  303A               	movlw	58
   528     07F4  120A  118A  269F  120A  118A  	fcall	_Lcd_data
   529     07F9                     l53:
   530     07F9  0008               	return
   531     07FA                     __end_of_init:
   532                           
   533                           	psect	text2
   534     0717                     __ptext2:	
   535 ;; *************** function _TX_Scanning *****************
   536 ;; Defined at:
   537 ;;		line 73 in file "UART_TX.c"
   538 ;; Parameters:    Size  Location     Type
   539 ;;		None
   540 ;; Auto vars:     Size  Location     Type
   541 ;;		None
   542 ;; Return value:  Size  Location     Type
   543 ;;                  1    wreg      void 
   544 ;; Registers used:
   545 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   546 ;; Tracked objects:
   547 ;;		On entry : 0/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   551 ;;      Params:         0       0       0       0       0
   552 ;;      Locals:         0       0       0       0       0
   553 ;;      Temps:          2       0       0       0       0
   554 ;;      Totals:         2       0       0       0       0
   555 ;;Total ram usage:        2 bytes
   556 ;; Hardware stack levels used: 1
   557 ;; Hardware stack levels required when called: 1
   558 ;; This function calls:
   559 ;;		_Lcd_cmd
   560 ;;		_Lcd_data
   561 ;; This function is called by:
   562 ;;		_main
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566     0717                     _TX_Scanning:	
   567                           ;psect for function _TX_Scanning
   568                           
   569     0717                     l742:	
   570                           ;incstack = 0
   571                           ; Regs used in _TX_Scanning: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   572                           
   573                           
   574                           ;UART_TX.c: 74:     value=PORTB;
   575     0717  1283               	bcf	3,5	;RP0=0, select bank0
   576     0718  1303               	bcf	3,6	;RP1=0, select bank0
   577     0719  0806               	movf	6,w	;volatile
   578     071A  00F5               	movwf	_value
   579     071B                     l744:
   580                           
   581                           ;UART_TX.c: 75:     Lcd_cmd(0x83);
   582     071B  3083               	movlw	131
   583     071C  120A  118A  26B3  120A  118A  	fcall	_Lcd_cmd
   584                           
   585                           ;UART_TX.c: 76:     switch(value){
   586     0721  2F56               	goto	l772
   587     0722                     l746:
   588                           
   589                           ;UART_TX.c: 78:             TXREG='A';
   590     0722  3041               	movlw	65
   591     0723  1283               	bcf	3,5	;RP0=0, select bank0
   592     0724  1303               	bcf	3,6	;RP1=0, select bank0
   593     0725  0099               	movwf	25	;volatile
   594     0726                     l748:
   595                           
   596                           ;UART_TX.c: 79:             Lcd_data('A');
   597     0726  3041               	movlw	65
   598     0727  120A  118A  269F  120A  118A  	fcall	_Lcd_data
   599     072C                     l750:
   600                           
   601                           ;UART_TX.c: 80:             _delay((unsigned long)((100)*(6000000/4000.0)));
   602     072C  30C3               	movlw	195
   603     072D  00F4               	movwf	??_TX_Scanning+1
   604     072E  30CD               	movlw	205
   605     072F  00F3               	movwf	??_TX_Scanning
   606     0730                     u77:
   607     0730  0BF3               	decfsz	??_TX_Scanning,f
   608     0731  2F30               	goto	u77
   609     0732  0BF4               	decfsz	??_TX_Scanning+1,f
   610     0733  2F30               	goto	u77
   611                           
   612                           ;UART_TX.c: 81:             break;
   613     0734  2F6C               	goto	l62
   614     0735                     l752:
   615                           
   616                           ;UART_TX.c: 83:             TXREG='B';
   617     0735  3042               	movlw	66
   618     0736  1283               	bcf	3,5	;RP0=0, select bank0
   619     0737  1303               	bcf	3,6	;RP1=0, select bank0
   620     0738  0099               	movwf	25	;volatile
   621     0739                     l754:
   622                           
   623                           ;UART_TX.c: 84:             Lcd_data('B');
   624     0739  3042               	movlw	66
   625     073A  120A  118A  269F  120A  118A  	fcall	_Lcd_data
   626     073F  2F2C               	goto	l750
   627     0740                     l758:
   628                           
   629                           ;UART_TX.c: 88:         TXREG='C';
   630     0740  3043               	movlw	67
   631     0741  1283               	bcf	3,5	;RP0=0, select bank0
   632     0742  1303               	bcf	3,6	;RP1=0, select bank0
   633     0743  0099               	movwf	25	;volatile
   634     0744                     l760:
   635                           
   636                           ;UART_TX.c: 89:         Lcd_data('C');
   637     0744  3043               	movlw	67
   638     0745  120A  118A  269F  120A  118A  	fcall	_Lcd_data
   639     074A  2F2C               	goto	l750
   640     074B                     l764:
   641                           
   642                           ;UART_TX.c: 93:             TXREG='D';
   643     074B  3044               	movlw	68
   644     074C  1283               	bcf	3,5	;RP0=0, select bank0
   645     074D  1303               	bcf	3,6	;RP1=0, select bank0
   646     074E  0099               	movwf	25	;volatile
   647     074F                     l766:
   648                           
   649                           ;UART_TX.c: 94:             Lcd_data('D');
   650     074F  3044               	movlw	68
   651     0750  120A  118A  269F  120A  118A  	fcall	_Lcd_data
   652     0755  2F2C               	goto	l750
   653     0756                     l772:
   654     0756  0875               	movf	_value,w
   655     0757  00F3               	movwf	??_TX_Scanning
   656     0758  01F4               	clrf	??_TX_Scanning+1
   657                           
   658                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   659                           ; Switch size 1, requested type "simple"
   660                           ; Number of cases is 1, Range of values is 0 to 0
   661                           ; switch strategies available:
   662                           ; Name         Instructions Cycles
   663                           ; simple_byte            4     3 (average)
   664                           ; direct_byte           11     8 (fixed)
   665                           ; jumptable            260     6 (fixed)
   666                           ;	Chosen strategy is simple_byte
   667     0759  0874               	movf	??_TX_Scanning+1,w
   668     075A  3A00               	xorlw	0	; case 0
   669     075B  1903               	skipnz
   670     075C  2F5E               	goto	l854
   671     075D  2F6C               	goto	l62
   672     075E                     l854:
   673                           
   674                           ; Switch size 1, requested type "simple"
   675                           ; Number of cases is 4, Range of values is 112 to 224
   676                           ; switch strategies available:
   677                           ; Name         Instructions Cycles
   678                           ; simple_byte           13     7 (average)
   679                           ; jumptable            263     9 (fixed)
   680                           ;	Chosen strategy is simple_byte
   681     075E  0873               	movf	??_TX_Scanning,w
   682     075F  3A70               	xorlw	112	; case 112
   683     0760  1903               	skipnz
   684     0761  2F4B               	goto	l764
   685     0762  3AC0               	xorlw	192	; case 176
   686     0763  1903               	skipnz
   687     0764  2F40               	goto	l758
   688     0765  3A60               	xorlw	96	; case 208
   689     0766  1903               	skipnz
   690     0767  2F35               	goto	l752
   691     0768  3A30               	xorlw	48	; case 224
   692     0769  1903               	skipnz
   693     076A  2F22               	goto	l746
   694     076B  2F6C               	goto	l62
   695     076C                     l62:
   696     076C  0008               	return
   697     076D                     __end_of_TX_Scanning:
   698                           
   699                           	psect	text3
   700     06CA                     __ptext3:	
   701 ;; *************** function _RX_Scanning *****************
   702 ;; Defined at:
   703 ;;		line 101 in file "UART_TX.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;		None
   706 ;; Auto vars:     Size  Location     Type
   707 ;;		None
   708 ;; Return value:  Size  Location     Type
   709 ;;                  1    wreg      void 
   710 ;; Registers used:
   711 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   717 ;;      Params:         0       0       0       0       0
   718 ;;      Locals:         0       0       0       0       0
   719 ;;      Temps:          2       0       0       0       0
   720 ;;      Totals:         2       0       0       0       0
   721 ;;Total ram usage:        2 bytes
   722 ;; Hardware stack levels used: 1
   723 ;; Hardware stack levels required when called: 1
   724 ;; This function calls:
   725 ;;		_Lcd_cmd
   726 ;;		_Lcd_data
   727 ;; This function is called by:
   728 ;;		_main
   729 ;; This function uses a non-reentrant model
   730 ;;
   731                           
   732     06CA                     _RX_Scanning:	
   733                           ;psect for function _RX_Scanning
   734                           
   735     06CA                     l778:	
   736                           ;incstack = 0
   737                           ; Regs used in _RX_Scanning: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   738                           
   739                           
   740                           ;UART_TX.c: 103:     if(RCIF==1){
   741     06CA  1283               	bcf	3,5	;RP0=0, select bank0
   742     06CB  1303               	bcf	3,6	;RP1=0, select bank0
   743     06CC  1E8C               	btfss	12,5	;volatile
   744     06CD  2ECF               	goto	u11
   745     06CE  2ED0               	goto	u10
   746     06CF                     u11:
   747     06CF  2F16               	goto	l72
   748     06D0                     u10:
   749     06D0                     l780:
   750                           
   751                           ;UART_TX.c: 104:         result=RCREG;
   752     06D0  081A               	movf	26,w	;volatile
   753     06D1  00F6               	movwf	_result
   754     06D2                     l782:
   755                           
   756                           ;UART_TX.c: 105:         Lcd_cmd(0xC3);
   757     06D2  30C3               	movlw	195
   758     06D3  120A  118A  26B3  120A  118A  	fcall	_Lcd_cmd
   759                           
   760                           ;UART_TX.c: 106:         switch(result){
   761     06D8  2EFD               	goto	l802
   762     06D9                     l784:
   763     06D9  3061               	movlw	97
   764     06DA  120A  118A  269F  120A  118A  	fcall	_Lcd_data
   765     06DF                     l786:
   766     06DF  30C3               	movlw	195
   767     06E0  00F4               	movwf	??_RX_Scanning+1
   768     06E1  30CD               	movlw	205
   769     06E2  00F3               	movwf	??_RX_Scanning
   770     06E3                     u87:
   771     06E3  0BF3               	decfsz	??_RX_Scanning,f
   772     06E4  2EE3               	goto	u87
   773     06E5  0BF4               	decfsz	??_RX_Scanning+1,f
   774     06E6  2EE3               	goto	u87
   775     06E7  2F13               	goto	l68
   776     06E8                     l788:
   777     06E8  3062               	movlw	98
   778     06E9  120A  118A  269F  120A  118A  	fcall	_Lcd_data
   779     06EE  2EDF               	goto	l786
   780     06EF                     l792:
   781     06EF  3063               	movlw	99
   782     06F0  120A  118A  269F  120A  118A  	fcall	_Lcd_data
   783     06F5  2EDF               	goto	l786
   784     06F6                     l796:
   785     06F6  3064               	movlw	100
   786     06F7  120A  118A  269F  120A  118A  	fcall	_Lcd_data
   787     06FC  2EDF               	goto	l786
   788     06FD                     l802:
   789     06FD  0876               	movf	_result,w
   790     06FE  00F3               	movwf	??_RX_Scanning
   791     06FF  01F4               	clrf	??_RX_Scanning+1
   792                           
   793                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   794                           ; Switch size 1, requested type "simple"
   795                           ; Number of cases is 1, Range of values is 0 to 0
   796                           ; switch strategies available:
   797                           ; Name         Instructions Cycles
   798                           ; simple_byte            4     3 (average)
   799                           ; direct_byte           11     8 (fixed)
   800                           ; jumptable            260     6 (fixed)
   801                           ;	Chosen strategy is simple_byte
   802     0700  0874               	movf	??_RX_Scanning+1,w
   803     0701  3A00               	xorlw	0	; case 0
   804     0702  1903               	skipnz
   805     0703  2F05               	goto	l856
   806     0704  2F13               	goto	l68
   807     0705                     l856:
   808                           
   809                           ; Switch size 1, requested type "simple"
   810                           ; Number of cases is 4, Range of values is 97 to 100
   811                           ; switch strategies available:
   812                           ; Name         Instructions Cycles
   813                           ; simple_byte           13     7 (average)
   814                           ; direct_byte           23    11 (fixed)
   815                           ; jumptable            263     9 (fixed)
   816                           ;	Chosen strategy is simple_byte
   817     0705  0873               	movf	??_RX_Scanning,w
   818     0706  3A61               	xorlw	97	; case 97
   819     0707  1903               	skipnz
   820     0708  2ED9               	goto	l784
   821     0709  3A03               	xorlw	3	; case 98
   822     070A  1903               	skipnz
   823     070B  2EE8               	goto	l788
   824     070C  3A01               	xorlw	1	; case 99
   825     070D  1903               	skipnz
   826     070E  2EEF               	goto	l792
   827     070F  3A07               	xorlw	7	; case 100
   828     0710  1903               	skipnz
   829     0711  2EF6               	goto	l796
   830     0712  2F13               	goto	l68
   831     0713                     l68:
   832                           
   833                           ;UART_TX.c: 113:         RCIF=0;
   834     0713  1283               	bcf	3,5	;RP0=0, select bank0
   835     0714  1303               	bcf	3,6	;RP1=0, select bank0
   836     0715  128C               	bcf	12,5	;volatile
   837     0716                     l72:
   838     0716  0008               	return
   839     0717                     __end_of_RX_Scanning:
   840                           
   841                           	psect	text4
   842     069F                     __ptext4:	
   843 ;; *************** function _Lcd_data *****************
   844 ;; Defined at:
   845 ;;		line 126 in file "UART_TX.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;  data            1    wreg     unsigned char 
   848 ;; Auto vars:     Size  Location     Type
   849 ;;  data            1    2[COMMON] unsigned char 
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, status,2, status,0, btemp+1
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   859 ;;      Params:         0       0       0       0       0
   860 ;;      Locals:         1       0       0       0       0
   861 ;;      Temps:          2       0       0       0       0
   862 ;;      Totals:         3       0       0       0       0
   863 ;;Total ram usage:        3 bytes
   864 ;; Hardware stack levels used: 1
   865 ;; This function calls:
   866 ;;		Nothing
   867 ;; This function is called by:
   868 ;;		_init
   869 ;;		_TX_Scanning
   870 ;;		_RX_Scanning
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874     069F                     _Lcd_data:	
   875                           ;psect for function _Lcd_data
   876                           
   877                           
   878                           ;incstack = 0
   879                           ; Regs used in _Lcd_data: [wreg+status,2+status,0+btemp+1]
   880                           ;Lcd_data@data stored from wreg
   881     069F  00F2               	movwf	Lcd_data@data
   882     06A0                     l678:
   883                           
   884                           ;UART_TX.c: 127:     PORTC |=0x01;
   885     06A0  1283               	bcf	3,5	;RP0=0, select bank0
   886     06A1  1303               	bcf	3,6	;RP1=0, select bank0
   887     06A2  1407               	bsf	7,0	;volatile
   888     06A3                     l680:
   889                           
   890                           ;UART_TX.c: 128:     PORTD=data;
   891     06A3  0872               	movf	Lcd_data@data,w
   892     06A4  0088               	movwf	8	;volatile
   893     06A5                     l682:
   894                           
   895                           ;UART_TX.c: 129:     PORTC |=0x02;
   896     06A5  1487               	bsf	7,1	;volatile
   897     06A6                     l684:
   898                           
   899                           ;UART_TX.c: 130:     PORTC &=~0x02;
   900     06A6  30FD               	movlw	253
   901     06A7  00FF               	movwf	btemp+1
   902     06A8  087F               	movf	btemp+1,w
   903     06A9  0587               	andwf	7,f	;volatile
   904     06AA                     l686:
   905                           
   906                           ;UART_TX.c: 131:     _delay((unsigned long)((100)*(6000000/4000.0)));
   907     06AA  30C3               	movlw	195
   908     06AB  00F1               	movwf	??_Lcd_data+1
   909     06AC  30CD               	movlw	205
   910     06AD  00F0               	movwf	??_Lcd_data
   911     06AE                     u97:
   912     06AE  0BF0               	decfsz	??_Lcd_data,f
   913     06AF  2EAE               	goto	u97
   914     06B0  0BF1               	decfsz	??_Lcd_data+1,f
   915     06B1  2EAE               	goto	u97
   916     06B2                     l78:
   917     06B2  0008               	return
   918     06B3                     __end_of_Lcd_data:
   919                           
   920                           	psect	text5
   921     06B3                     __ptext5:	
   922 ;; *************** function _Lcd_cmd *****************
   923 ;; Defined at:
   924 ;;		line 119 in file "UART_TX.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;  cmd             1    wreg     unsigned char 
   927 ;; Auto vars:     Size  Location     Type
   928 ;;  cmd             1    2[COMMON] unsigned char 
   929 ;; Return value:  Size  Location     Type
   930 ;;                  1    wreg      void 
   931 ;; Registers used:
   932 ;;		wreg, status,2, status,0, btemp+1
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   938 ;;      Params:         0       0       0       0       0
   939 ;;      Locals:         1       0       0       0       0
   940 ;;      Temps:          2       0       0       0       0
   941 ;;      Totals:         3       0       0       0       0
   942 ;;Total ram usage:        3 bytes
   943 ;; Hardware stack levels used: 1
   944 ;; This function calls:
   945 ;;		Nothing
   946 ;; This function is called by:
   947 ;;		_init
   948 ;;		_TX_Scanning
   949 ;;		_RX_Scanning
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953     06B3                     _Lcd_cmd:	
   954                           ;psect for function _Lcd_cmd
   955                           
   956                           
   957                           ;incstack = 0
   958                           ; Regs used in _Lcd_cmd: [wreg+status,2+status,0+btemp+1]
   959                           ;Lcd_cmd@cmd stored from wreg
   960     06B3  00F2               	movwf	Lcd_cmd@cmd
   961     06B4                     l670:
   962                           
   963                           ;UART_TX.c: 120:     PORTC &=~0x01;
   964     06B4  30FE               	movlw	254
   965     06B5  00FF               	movwf	btemp+1
   966     06B6  087F               	movf	btemp+1,w
   967     06B7  1283               	bcf	3,5	;RP0=0, select bank0
   968     06B8  1303               	bcf	3,6	;RP1=0, select bank0
   969     06B9  0587               	andwf	7,f	;volatile
   970     06BA                     l672:
   971                           
   972                           ;UART_TX.c: 121:     PORTD =cmd;
   973     06BA  0872               	movf	Lcd_cmd@cmd,w
   974     06BB  0088               	movwf	8	;volatile
   975     06BC                     l674:
   976                           
   977                           ;UART_TX.c: 122:     PORTC |=0x02;
   978     06BC  1487               	bsf	7,1	;volatile
   979     06BD                     l676:
   980                           
   981                           ;UART_TX.c: 123:     PORTC &=~0x02;
   982     06BD  30FD               	movlw	253
   983     06BE  00FF               	movwf	btemp+1
   984     06BF  087F               	movf	btemp+1,w
   985     06C0  0587               	andwf	7,f	;volatile
   986                           
   987                           ;UART_TX.c: 124:     _delay((unsigned long)((100)*(6000000/4000.0)));
   988     06C1  30C3               	movlw	195
   989     06C2  00F1               	movwf	??_Lcd_cmd+1
   990     06C3  30CD               	movlw	205
   991     06C4  00F0               	movwf	??_Lcd_cmd
   992     06C5                     u107:
   993     06C5  0BF0               	decfsz	??_Lcd_cmd,f
   994     06C6  2EC5               	goto	u107
   995     06C7  0BF1               	decfsz	??_Lcd_cmd+1,f
   996     06C8  2EC5               	goto	u107
   997     06C9                     l75:
   998     06C9  0008               	return
   999     06CA                     __end_of_Lcd_cmd:
  1000     007E                     btemp	set	126	;btemp
  1001     007E                     wtemp0	set	126
  1002                           
  1003                           	psect	config
  1004                           
  1005                           ;Config register CONFIG @ 0x2007
  1006                           ;	Oscillator Selection bits
  1007                           ;	FOSC = EXTRC, RC oscillator
  1008                           ;	Watchdog Timer Enable bit
  1009                           ;	WDTE = OFF, WDT disabled
  1010                           ;	Power-up Timer Enable bit
  1011                           ;	PWRTE = OFF, PWRT disabled
  1012                           ;	Brown-out Reset Enable bit
  1013                           ;	BOREN = OFF, BOR disabled
  1014                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1015                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1016                           ;	Data EEPROM Memory Code Protection bit
  1017                           ;	CPD = OFF, Data EEPROM code protection off
  1018                           ;	Flash Program Memory Write Enable bits
  1019                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1020                           ;	In-Circuit Debugger Mode bit
  1021                           ;	DEBUG = 0x1, unprogrammed default
  1022                           ;	Flash Program Memory Code Protection bit
  1023                           ;	CP = OFF, Code protection off
  1024     2007                     	org	8199
  1025     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_RX_Scanning
    _main->_TX_Scanning
    _main->_init
    _init->_Lcd_cmd
    _init->_Lcd_data
    _TX_Scanning->_Lcd_cmd
    _TX_Scanning->_Lcd_data
    _RX_Scanning->_Lcd_cmd
    _RX_Scanning->_Lcd_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      90
                        _RX_Scanning
                        _TX_Scanning
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0      30
                                              3 COMMON     2     2      0
                            _Lcd_cmd
                           _Lcd_data
 ---------------------------------------------------------------------------------
 (1) _TX_Scanning                                          2     2      0      30
                                              3 COMMON     2     2      0
                            _Lcd_cmd
                           _Lcd_data
 ---------------------------------------------------------------------------------
 (1) _RX_Scanning                                          2     2      0      30
                                              3 COMMON     2     2      0
                            _Lcd_cmd
                           _Lcd_data
 ---------------------------------------------------------------------------------
 (2) _Lcd_data                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_cmd                                              3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RX_Scanning
     _Lcd_cmd
     _Lcd_data
   _TX_Scanning
     _Lcd_cmd
     _Lcd_data
   _init
     _Lcd_cmd
     _Lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Oct 11 18:56:26 2023

                     l53 07F9                       l62 076C                       l72 0716  
                     l75 06C9                       l68 0713                       l78 06B2  
                     u10 06D0                       u11 06CF                       u27 0793  
                     u37 07A1                       u47 07AF                       u57 07BD  
                     u67 07CB                       u77 0730                       u87 06E3  
                     u97 06AE                      l700 077D                      l710 078F  
                    l702 077F                      l720 07B3                      l712 0797  
                    l704 0781                      l802 06FD                      l730 07D5  
                    l722 07B9                      l714 079D                      l706 0785  
                    l810 0691                      l740 07F3                      l732 07DB  
                    l724 07C1                      l716 07A5                      l708 0789  
                    l812 0696                      l670 06B4                      l750 072C  
                    l742 0717                      l734 07E1                      l726 07C7  
                    l718 07AB                      l672 06BA                      l680 06A3  
                    l760 0744                      l752 0735                      l744 071B  
                    l736 07E7                      l728 07CF                      l808 068C  
                    l674 06BC                      l682 06A5                      l754 0739  
                    l746 0722                      l738 07ED                      l690 0770  
                    l676 06BD                      l684 06A6                      l780 06D0  
                    l764 074B                      l748 0726                      l772 0756  
                    l692 0772                      l686 06AA                      l678 06A0  
                    l782 06D2                      l854 075E                      l766 074F  
                    l758 0740                      l694 0775                      l856 0705  
                    l792 06EF                      l784 06D9                      l696 0776  
                    l688 076D                      l786 06DF                      l778 06CA  
                    l698 0777                      l796 06F6                      l788 06E8  
    __end_of_RX_Scanning 0717                      u107 06C5                     _RCIF 0065  
                   _main 068C                     _init 076D                     btemp 007E  
    __end_of_TX_Scanning 076D                     start 0000          __end_of_Lcd_cmd 06CA  
                  ?_main 0070                    ?_init 0070                    _RCREG 001A  
                  _RCSTA 0018                    _SPBRG 0099                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TXREG 0019  
                  _TXSTA 0098                    _value 0075                    status 0003  
                  wtemp0 007E         __end_of_Lcd_data 06B3          __initialization 07FA  
           __end_of_main 069F             __end_of_init 07FA              _RX_Scanning 06CA  
                 ??_main 0075                   ??_init 0073              _TX_Scanning 0717  
              ??_Lcd_cmd 0070                   _result 0076  __end_of__initialization 07FC  
         __pcstackCOMMON 0070                ?_Lcd_data 0070               __pmaintext 068C  
             ??_Lcd_data 0070                  _Lcd_cmd 06B3             ?_RX_Scanning 0070  
                __ptext1 076D                  __ptext2 0717                  __ptext3 06CA  
                __ptext4 069F                  __ptext5 06B3             ?_TX_Scanning 0070  
   end_of_initialization 07FC      start_initialization 07FA              __pbssCOMMON 0075  
              ___latbits 0002                 ?_Lcd_cmd 0070                 _Lcd_data 069F  
           Lcd_data@data 0072            ??_RX_Scanning 0073               _OPTION_REG 0081  
             Lcd_cmd@cmd 0072            ??_TX_Scanning 0073  
