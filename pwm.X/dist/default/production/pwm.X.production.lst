

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Aug 12 08:13:04 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 22/03/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168                           
   169                           	psect	nvCOMMON
   170     0070                     __pnvCOMMON:
   171     0070                     _Pwmhigh80:
   172     0070                     	ds	1
   173     0071                     _Pwmhigh50:
   174     0071                     	ds	1
   175     0072                     _Pwmlow10:
   176     0072                     	ds	1
   177     0073                     _Pwmhigh10:
   178     0073                     	ds	1
   179     0015                     _CCPR1L	set	21
   180     0012                     _T2CON	set	18
   181     0017                     _CCP1CON	set	23
   182     0007                     _PORTC	set	7
   183     0092                     _PR2	set	146
   184     0087                     _TRISC	set	135
   185                           
   186                           	psect	cinit
   187     07FA                     start_initialization:	
   188                           ; #config settings
   189                           
   190     07FA                     __initialization:
   191                           
   192                           ; Clear objects allocated to COMMON
   193     07FA  01F7               	clrf	__pbssCOMMON& (0+127)
   194     07FB  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   195     07FC                     end_of_initialization:	
   196                           ;End of C runtime variable initialization code
   197                           
   198     07FC                     __end_of__initialization:
   199     07FC  0183               	clrf	3
   200     07FD  120A  118A  2F92   	ljmp	_main	;jump to C main() function
   201                           
   202                           	psect	bssCOMMON
   203     0077                     __pbssCOMMON:
   204     0077                     _Pwmlow80:
   205     0077                     	ds	1
   206     0078                     _Pwmlow50:
   207     0078                     	ds	1
   208                           
   209                           	psect	cstackCOMMON
   210     0074                     __pcstackCOMMON:
   211     0074                     ?_configuration:
   212     0074                     ??_configuration:	
   213                           ; 1 bytes @ 0x0
   214                           
   215     0074                     ?_pwm_level:	
   216                           ; 1 bytes @ 0x0
   217                           
   218     0074                     ??_pwm_level:	
   219                           ; 1 bytes @ 0x0
   220                           
   221     0074                     ?_main:	
   222                           ; 1 bytes @ 0x0
   223                           
   224                           
   225                           ; 1 bytes @ 0x0
   226     0074                     	ds	3
   227     0077                     ??_main:
   228                           
   229                           	psect	maintext
   230     0792                     __pmaintext:	
   231                           ; 1 bytes @ 0x3
   232 ;;
   233 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   234 ;;
   235 ;; *************** function _main *****************
   236 ;; Defined at:
   237 ;;		line 26 in file "pwm_class_progra.c"
   238 ;; Parameters:    Size  Location     Type
   239 ;;		None
   240 ;; Auto vars:     Size  Location     Type
   241 ;;		None
   242 ;; Return value:  Size  Location     Type
   243 ;;                  1    wreg      void 
   244 ;; Registers used:
   245 ;;		wreg, status,2, status,0, pclath, cstack
   246 ;; Tracked objects:
   247 ;;		On entry : B00/0
   248 ;;		On exit  : 0/0
   249 ;;		Unchanged: 0/0
   250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   251 ;;      Params:         0       0       0       0       0
   252 ;;      Locals:         0       0       0       0       0
   253 ;;      Temps:          0       0       0       0       0
   254 ;;      Totals:         0       0       0       0       0
   255 ;;Total ram usage:        0 bytes
   256 ;; Hardware stack levels required when called: 1
   257 ;; This function calls:
   258 ;;		_configuration
   259 ;;		_pwm_level
   260 ;; This function is called by:
   261 ;;		Startup code after reset
   262 ;; This function uses a non-reentrant model
   263 ;;
   264                           
   265     0792                     _main:	
   266                           ;psect for function _main
   267                           
   268     0792                     l670:	
   269                           ;incstack = 0
   270                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   271                           
   272                           
   273                           ;pwm_class_progra.c: 27:     configuration();
   274     0792  120A  118A  27A0  120A  118A  	fcall	_configuration
   275     0797                     l35:	
   276                           ;pwm_class_progra.c: 28:     while (1) {
   277                           
   278                           
   279                           ;pwm_class_progra.c: 29:         pwm_level();
   280     0797  120A  118A  27BA  120A  118A  	fcall	_pwm_level
   281     079C  2F97               	goto	l35
   282     079D  120A  118A  2800   	ljmp	start
   283     07A0                     __end_of_main:
   284                           
   285                           	psect	text1
   286     07BA                     __ptext1:	
   287 ;; *************** function _pwm_level *****************
   288 ;; Defined at:
   289 ;;		line 49 in file "pwm_class_progra.c"
   290 ;; Parameters:    Size  Location     Type
   291 ;;		None
   292 ;; Auto vars:     Size  Location     Type
   293 ;;		None
   294 ;; Return value:  Size  Location     Type
   295 ;;                  1    wreg      void 
   296 ;; Registers used:
   297 ;;		wreg, status,2, status,0
   298 ;; Tracked objects:
   299 ;;		On entry : 0/0
   300 ;;		On exit  : 0/0
   301 ;;		Unchanged: 0/0
   302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   303 ;;      Params:         0       0       0       0       0
   304 ;;      Locals:         0       0       0       0       0
   305 ;;      Temps:          3       0       0       0       0
   306 ;;      Totals:         3       0       0       0       0
   307 ;;Total ram usage:        3 bytes
   308 ;; Hardware stack levels used: 1
   309 ;; This function calls:
   310 ;;		Nothing
   311 ;; This function is called by:
   312 ;;		_main
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316     07BA                     _pwm_level:	
   317                           ;psect for function _pwm_level
   318                           
   319     07BA                     l656:	
   320                           ;incstack = 0
   321                           ; Regs used in _pwm_level: [wreg+status,2+status,0]
   322                           
   323                           
   324                           ;pwm_class_progra.c: 50:     CCPR1L = Pwmhigh10;
   325     07BA  0873               	movf	_Pwmhigh10,w
   326     07BB  1283               	bcf	3,5	;RP0=0, select bank0
   327     07BC  1303               	bcf	3,6	;RP1=0, select bank0
   328     07BD  0095               	movwf	21	;volatile
   329     07BE                     l658:
   330                           
   331                           ;pwm_class_progra.c: 51:     CCP1CON = (CCP1CON & 0xCF) | Pwmlow10;
   332     07BE  0817               	movf	23,w	;volatile
   333     07BF  39CF               	andlw	207
   334     07C0  0472               	iorwf	_Pwmlow10,w
   335     07C1  0097               	movwf	23	;volatile
   336     07C2                     l660:
   337                           
   338                           ;pwm_class_progra.c: 52:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   339     07C2  3017               	movlw	23
   340     07C3  00F6               	movwf	??_pwm_level+2
   341     07C4  30D5               	movlw	213
   342     07C5  00F5               	movwf	??_pwm_level+1
   343     07C6  3016               	movlw	22
   344     07C7  00F4               	movwf	??_pwm_level
   345     07C8                     u17:
   346     07C8  0BF4               	decfsz	??_pwm_level,f
   347     07C9  2FC8               	goto	u17
   348     07CA  0BF5               	decfsz	??_pwm_level+1,f
   349     07CB  2FC8               	goto	u17
   350     07CC  0BF6               	decfsz	??_pwm_level+2,f
   351     07CD  2FC8               	goto	u17
   352     07CE  0000               	nop
   353     07CF                     l662:
   354                           
   355                           ;pwm_class_progra.c: 54:     CCPR1L = Pwmhigh50;
   356     07CF  0871               	movf	_Pwmhigh50,w
   357     07D0  1283               	bcf	3,5	;RP0=0, select bank0
   358     07D1  1303               	bcf	3,6	;RP1=0, select bank0
   359     07D2  0095               	movwf	21	;volatile
   360     07D3                     l664:
   361                           
   362                           ;pwm_class_progra.c: 55:     CCP1CON = (CCP1CON & 0xCF) | Pwmlow50;
   363     07D3  0817               	movf	23,w	;volatile
   364     07D4  39CF               	andlw	207
   365     07D5  0478               	iorwf	_Pwmlow50,w
   366     07D6  0097               	movwf	23	;volatile
   367                           
   368                           ;pwm_class_progra.c: 56:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   369     07D7  3017               	movlw	23
   370     07D8  00F6               	movwf	??_pwm_level+2
   371     07D9  30D5               	movlw	213
   372     07DA  00F5               	movwf	??_pwm_level+1
   373     07DB  3016               	movlw	22
   374     07DC  00F4               	movwf	??_pwm_level
   375     07DD                     u27:
   376     07DD  0BF4               	decfsz	??_pwm_level,f
   377     07DE  2FDD               	goto	u27
   378     07DF  0BF5               	decfsz	??_pwm_level+1,f
   379     07E0  2FDD               	goto	u27
   380     07E1  0BF6               	decfsz	??_pwm_level+2,f
   381     07E2  2FDD               	goto	u27
   382     07E3  0000               	nop
   383                           
   384                           ;pwm_class_progra.c: 58:     CCPR1L = Pwmhigh80;
   385     07E4  0870               	movf	_Pwmhigh80,w
   386     07E5  1283               	bcf	3,5	;RP0=0, select bank0
   387     07E6  1303               	bcf	3,6	;RP1=0, select bank0
   388     07E7  0095               	movwf	21	;volatile
   389     07E8                     l666:
   390                           
   391                           ;pwm_class_progra.c: 59:     CCP1CON = (CCP1CON & 0xCF) | Pwmlow80;
   392     07E8  0817               	movf	23,w	;volatile
   393     07E9  39CF               	andlw	207
   394     07EA  0477               	iorwf	_Pwmlow80,w
   395     07EB  0097               	movwf	23	;volatile
   396     07EC                     l668:
   397                           
   398                           ;pwm_class_progra.c: 60:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   399     07EC  3017               	movlw	23
   400     07ED  00F6               	movwf	??_pwm_level+2
   401     07EE  30D5               	movlw	213
   402     07EF  00F5               	movwf	??_pwm_level+1
   403     07F0  3016               	movlw	22
   404     07F1  00F4               	movwf	??_pwm_level
   405     07F2                     u37:
   406     07F2  0BF4               	decfsz	??_pwm_level,f
   407     07F3  2FF2               	goto	u37
   408     07F4  0BF5               	decfsz	??_pwm_level+1,f
   409     07F5  2FF2               	goto	u37
   410     07F6  0BF6               	decfsz	??_pwm_level+2,f
   411     07F7  2FF2               	goto	u37
   412     07F8  0000               	nop
   413     07F9                     l44:
   414     07F9  0008               	return
   415     07FA                     __end_of_pwm_level:
   416                           
   417                           	psect	text2
   418     07A0                     __ptext2:	
   419 ;; *************** function _configuration *****************
   420 ;; Defined at:
   421 ;;		line 33 in file "pwm_class_progra.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;		None
   424 ;; Auto vars:     Size  Location     Type
   425 ;;		None
   426 ;; Return value:  Size  Location     Type
   427 ;;                  1    wreg      void 
   428 ;; Registers used:
   429 ;;		wreg, status,2
   430 ;; Tracked objects:
   431 ;;		On entry : 0/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   435 ;;      Params:         0       0       0       0       0
   436 ;;      Locals:         0       0       0       0       0
   437 ;;      Temps:          0       0       0       0       0
   438 ;;      Totals:         0       0       0       0       0
   439 ;;Total ram usage:        0 bytes
   440 ;; Hardware stack levels used: 1
   441 ;; This function calls:
   442 ;;		Nothing
   443 ;; This function is called by:
   444 ;;		_main
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448     07A0                     _configuration:	
   449                           ;psect for function _configuration
   450                           
   451     07A0                     l636:	
   452                           ;incstack = 0
   453                           ; Regs used in _configuration: [wreg+status,2]
   454                           
   455                           
   456                           ;pwm_class_progra.c: 34:     TRISC = 0xFB;
   457     07A0  30FB               	movlw	251
   458     07A1  1683               	bsf	3,5	;RP0=1, select bank1
   459     07A2  1303               	bcf	3,6	;RP1=0, select bank1
   460     07A3  0087               	movwf	7	;volatile
   461     07A4                     l638:
   462                           
   463                           ;pwm_class_progra.c: 35:     PORTC=0x00;
   464     07A4  1283               	bcf	3,5	;RP0=0, select bank0
   465     07A5  1303               	bcf	3,6	;RP1=0, select bank0
   466     07A6  0187               	clrf	7	;volatile
   467     07A7                     l640:
   468                           
   469                           ;pwm_class_progra.c: 36:     CCP1CON = 0x0C;
   470     07A7  300C               	movlw	12
   471     07A8  0097               	movwf	23	;volatile
   472     07A9                     l642:
   473                           
   474                           ;pwm_class_progra.c: 37:     T2CON = 0x06;
   475     07A9  3006               	movlw	6
   476     07AA  0092               	movwf	18	;volatile
   477     07AB                     l644:
   478                           
   479                           ;pwm_class_progra.c: 38:     PR2 = 0x5D;
   480     07AB  305D               	movlw	93
   481     07AC  1683               	bsf	3,5	;RP0=1, select bank1
   482     07AD  1303               	bcf	3,6	;RP1=0, select bank1
   483     07AE  0092               	movwf	18	;volatile
   484     07AF                     l646:
   485                           
   486                           ;pwm_class_progra.c: 40:     Pwmhigh10 = 0x09;
   487     07AF  3009               	movlw	9
   488     07B0  00F3               	movwf	_Pwmhigh10
   489     07B1                     l648:
   490                           
   491                           ;pwm_class_progra.c: 41:     Pwmlow10 = 0x20;
   492     07B1  3020               	movlw	32
   493     07B2  00F2               	movwf	_Pwmlow10
   494     07B3                     l650:
   495                           
   496                           ;pwm_class_progra.c: 42:     Pwmhigh50 = 0x2F;
   497     07B3  302F               	movlw	47
   498     07B4  00F1               	movwf	_Pwmhigh50
   499     07B5                     l652:
   500                           
   501                           ;pwm_class_progra.c: 43:     Pwmlow50 = 0x00;
   502     07B5  01F8               	clrf	_Pwmlow50
   503                           
   504                           ;pwm_class_progra.c: 44:     Pwmhigh80 = 0x4B;
   505     07B6  304B               	movlw	75
   506     07B7  00F0               	movwf	_Pwmhigh80
   507     07B8                     l654:
   508                           
   509                           ;pwm_class_progra.c: 45:     Pwmlow80 = 0x00;
   510     07B8  01F7               	clrf	_Pwmlow80
   511     07B9                     l41:
   512     07B9  0008               	return
   513     07BA                     __end_of_configuration:
   514     007E                     btemp	set	126	;btemp
   515     007E                     wtemp0	set	126
   516                           
   517                           	psect	config
   518                           
   519                           ;Config register CONFIG @ 0x2007
   520                           ;	Oscillator Selection bits
   521                           ;	FOSC = EXTRC, RC oscillator
   522                           ;	Watchdog Timer Enable bit
   523                           ;	WDTE = OFF, WDT disabled
   524                           ;	Power-up Timer Enable bit
   525                           ;	PWRTE = OFF, PWRT disabled
   526                           ;	Brown-out Reset Enable bit
   527                           ;	BOREN = OFF, BOR disabled
   528                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   529                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   530                           ;	Data EEPROM Memory Code Protection bit
   531                           ;	CPD = OFF, Data EEPROM code protection off
   532                           ;	Flash Program Memory Write Enable bits
   533                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   534                           ;	In-Circuit Debugger Mode bit
   535                           ;	DEBUG = 0x1, unprogrammed default
   536                           ;	Flash Program Memory Code Protection bit
   537                           ;	CP = OFF, Code protection off
   538     2007                     	org	8199
   539     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_pwm_level

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                      _configuration
                          _pwm_level
 ---------------------------------------------------------------------------------
 (1) _pwm_level                                            3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _configuration                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configuration
   _pwm_level

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Aug 12 08:13:04 2023

                     l41 07B9                       l35 0797                       l44 07F9  
                     u17 07C8                       u27 07DD                       u37 07F2  
         ?_configuration 0074                      l640 07A7                      l650 07B3  
                    l642 07A9                      l652 07B5                      l644 07AB  
                    l636 07A0                      l660 07C2                      l654 07B8  
                    l646 07AF                      l638 07A4                      l662 07CF  
                    l670 0792                      l648 07B1                      l664 07D3  
                    l656 07BA                      l666 07E8                      l658 07BE  
                    l668 07EC                      _PR2 0092                     _main 0792  
                   btemp 007E                     start 0000                    ?_main 0074  
                  _T2CON 0012                    _PORTC 0007                    _TRISC 0087  
                  status 0003                    wtemp0 007E          __initialization 07FA  
           __end_of_main 07A0          ??_configuration 0074                   ??_main 0077  
                 _CCPR1L 0015  __end_of__initialization 07FC           __pcstackCOMMON 0074  
             __pnvCOMMON 0070               __pmaintext 0792                  _CCP1CON 0017  
                __ptext1 07BA                  __ptext2 07A0     end_of_initialization 07FC  
      __end_of_pwm_level 07FA    __end_of_configuration 07BA      start_initialization 07FA  
              _Pwmhigh10 0073                _Pwmhigh50 0071                _Pwmhigh80 0070  
            __pbssCOMMON 0077                ___latbits 0002                _pwm_level 07BA  
               _Pwmlow10 0072                 _Pwmlow50 0078                 _Pwmlow80 0077  
             ?_pwm_level 0074              ??_pwm_level 0074            _configuration 07A0  
