

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Jul 29 18:15:16 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 22/03/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0088                     	;# 
    97     0089                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     008E                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0098                     	;# 
   106     0099                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     009F                     	;# 
   111     010C                     	;# 
   112     010D                     	;# 
   113     010E                     	;# 
   114     010F                     	;# 
   115     018C                     	;# 
   116     018D                     	;# 
   117     0000                     	;# 
   118     0001                     	;# 
   119     0002                     	;# 
   120     0003                     	;# 
   121     0004                     	;# 
   122     0005                     	;# 
   123     0006                     	;# 
   124     0007                     	;# 
   125     0008                     	;# 
   126     0009                     	;# 
   127     000A                     	;# 
   128     000B                     	;# 
   129     000C                     	;# 
   130     000D                     	;# 
   131     000E                     	;# 
   132     000E                     	;# 
   133     000F                     	;# 
   134     0010                     	;# 
   135     0011                     	;# 
   136     0012                     	;# 
   137     0013                     	;# 
   138     0014                     	;# 
   139     0015                     	;# 
   140     0015                     	;# 
   141     0016                     	;# 
   142     0017                     	;# 
   143     0018                     	;# 
   144     0019                     	;# 
   145     001A                     	;# 
   146     001B                     	;# 
   147     001B                     	;# 
   148     001C                     	;# 
   149     001D                     	;# 
   150     001E                     	;# 
   151     001F                     	;# 
   152     0081                     	;# 
   153     0085                     	;# 
   154     0086                     	;# 
   155     0087                     	;# 
   156     0088                     	;# 
   157     0089                     	;# 
   158     008C                     	;# 
   159     008D                     	;# 
   160     008E                     	;# 
   161     0091                     	;# 
   162     0092                     	;# 
   163     0093                     	;# 
   164     0094                     	;# 
   165     0098                     	;# 
   166     0099                     	;# 
   167     009C                     	;# 
   168     009D                     	;# 
   169     009E                     	;# 
   170     009F                     	;# 
   171     010C                     	;# 
   172     010D                     	;# 
   173     010E                     	;# 
   174     010F                     	;# 
   175     018C                     	;# 
   176     018D                     	;# 
   177                           
   178                           	psect	idataBANK0
   179     0560                     __pidataBANK0:
   180                           
   181                           ;initializer for _array
   182     0560  3453               	retlw	83
   183     0561  3445               	retlw	69
   184     0562  3454               	retlw	84
   185     0563  3420               	retlw	32
   186     0564  3453               	retlw	83
   187     0565  3450               	retlw	80
   188     0566  3444               	retlw	68
   189     0567  343A               	retlw	58
   190     0568  3420               	retlw	32
   191     0569  3420               	retlw	32
   192     056A  3420               	retlw	32
   193     056B  3420               	retlw	32
   194     056C  3452               	retlw	82
   195     056D  3450               	retlw	80
   196     056E  344D               	retlw	77
   197     056F  3400               	retlw	0
   198     0008                     _PORTD	set	8
   199     0006                     _PORTB	set	6
   200     0007                     _PORTC	set	7
   201     0081                     _OPTION_REG	set	129
   202     0086                     _TRISB	set	134
   203     0088                     _TRISD	set	136
   204     0087                     _TRISC	set	135
   205                           
   206                           	psect	cinit
   207     07E9                     start_initialization:	
   208                           ; #config settings
   209                           
   210     07E9                     __initialization:
   211                           
   212                           ; Initialize objects allocated to BANK0
   213     07E9  1383               	bcf	3,7	;select IRP bank0
   214     07EA  3030               	movlw	low (__pdataBANK0+16)
   215     07EB  00FD               	movwf	btemp+-1
   216     07EC  3005               	movlw	high __pidataBANK0
   217     07ED  00FE               	movwf	btemp
   218     07EE  3060               	movlw	low __pidataBANK0
   219     07EF  00FF               	movwf	btemp+1
   220     07F0  3020               	movlw	low __pdataBANK0
   221     07F1  0084               	movwf	4
   222     07F2  120A  118A  2574  120A  118A  	fcall	init_ram0
   223                           
   224                           ; Clear objects allocated to BANK0
   225     07F7  01B0               	clrf	__pbssBANK0& (0+127)
   226     07F8  01B1               	clrf	(__pbssBANK0+1)& (0+127)
   227     07F9  01B2               	clrf	(__pbssBANK0+2)& (0+127)
   228     07FA  01B3               	clrf	(__pbssBANK0+3)& (0+127)
   229     07FB  01B4               	clrf	(__pbssBANK0+4)& (0+127)
   230     07FC                     end_of_initialization:	
   231                           ;End of C runtime variable initialization code
   232                           
   233     07FC                     __end_of__initialization:
   234     07FC  0183               	clrf	3
   235     07FD  120A  118A  2D52   	ljmp	_main	;jump to C main() function
   236                           
   237                           	psect	bssBANK0
   238     0030                     __pbssBANK0:
   239     0030                     _speed:
   240     0030                     	ds	2
   241     0032                     _i:
   242     0032                     	ds	2
   243     0034                     _input:
   244     0034                     	ds	1
   245                           
   246                           	psect	dataBANK0
   247     0020                     __pdataBANK0:
   248     0020                     _array:
   249     0020                     	ds	16
   250                           
   251                           	psect	inittext
   252     0570                     init_fetch0:	
   253                           ;	Called with low address in FSR and high address in W
   254                           
   255     0570  087E               	movf	btemp,w
   256     0571  008A               	movwf	10
   257     0572  087F               	movf	btemp+1,w
   258     0573  0082               	movwf	2
   259     0574                     init_ram0:	
   260                           ;Called with:
   261                           ;	high address of idata address in btemp 
   262                           ;	low address of idata address in btemp+1 
   263                           ;	low address of data in FSR
   264                           ;	high address + 1 of data in btemp-1
   265                           
   266     0574  120A  118A  2570  120A  118A  	fcall	init_fetch0
   267     0579  0080               	movwf	0
   268     057A  0A84               	incf	4,f
   269     057B  0804               	movf	4,w
   270     057C  067D               	xorwf	btemp+-1,w
   271     057D  1903               	btfsc	3,2
   272     057E  3400               	retlw	0
   273     057F  0AFF               	incf	btemp+1,f
   274     0580  1903               	btfsc	3,2
   275     0581  0AFE               	incf	btemp,f
   276     0582  2D74               	goto	init_ram0
   277                           
   278                           	psect	cstackCOMMON
   279     0070                     __pcstackCOMMON:
   280     0070                     ?_Configuration:
   281     0070                     ?_Scanninginput:	
   282                           ; 1 bytes @ 0x0
   283                           
   284     0070                     ?_Lcd_instruction:	
   285                           ; 1 bytes @ 0x0
   286                           
   287     0070                     ??_Lcd_instruction:	
   288                           ; 1 bytes @ 0x0
   289                           
   290     0070                     ?_ContentPrint:	
   291                           ; 1 bytes @ 0x0
   292                           
   293     0070                     ?_main:	
   294                           ; 1 bytes @ 0x0
   295                           
   296     0070                     ?_Lcd_displaydata:	
   297                           ; 1 bytes @ 0x0
   298                           
   299     0070                     ??_Lcd_displaydata:	
   300                           ; 1 bytes @ 0x0
   301                           
   302     0070                     ?___awdiv:	
   303                           ; 1 bytes @ 0x0
   304                           
   305     0070                     ?___awmod:	
   306                           ; 2 bytes @ 0x0
   307                           
   308     0070                     ___awdiv@divisor:	
   309                           ; 2 bytes @ 0x0
   310                           
   311     0070                     ___awmod@divisor:	
   312                           ; 2 bytes @ 0x0
   313                           
   314                           
   315                           ; 2 bytes @ 0x0
   316     0070                     	ds	2
   317     0072                     Lcd_instruction@cmd:
   318     0072                     Lcd_displaydata@data:	
   319                           ; 1 bytes @ 0x2
   320                           
   321     0072                     ___awdiv@dividend:	
   322                           ; 1 bytes @ 0x2
   323                           
   324     0072                     ___awmod@dividend:	
   325                           ; 2 bytes @ 0x2
   326                           
   327                           
   328                           ; 2 bytes @ 0x2
   329     0072                     	ds	1
   330     0073                     ??_Configuration:
   331     0073                     ??_ContentPrint:	
   332                           ; 1 bytes @ 0x3
   333                           
   334                           
   335                           ; 1 bytes @ 0x3
   336     0073                     	ds	1
   337     0074                     ??___awdiv:
   338     0074                     ??___awmod:	
   339                           ; 1 bytes @ 0x4
   340                           
   341     0074                     ___awdiv@counter:	
   342                           ; 1 bytes @ 0x4
   343                           
   344     0074                     ___awmod@counter:	
   345                           ; 1 bytes @ 0x4
   346                           
   347                           
   348                           ; 1 bytes @ 0x4
   349     0074                     	ds	1
   350     0075                     ___awdiv@sign:
   351     0075                     ___awmod@sign:	
   352                           ; 1 bytes @ 0x5
   353                           
   354                           
   355                           ; 1 bytes @ 0x5
   356     0075                     	ds	1
   357     0076                     ___awdiv@quotient:
   358                           
   359                           ; 2 bytes @ 0x6
   360     0076                     	ds	2
   361     0078                     ?_Atoi:
   362     0078                     Atoi@number:	
   363                           ; 1 bytes @ 0x8
   364                           
   365                           
   366                           ; 2 bytes @ 0x8
   367     0078                     	ds	2
   368     007A                     ??_Atoi:
   369                           
   370                           ; 1 bytes @ 0xA
   371     007A                     	ds	2
   372     007C                     Atoi@temp:
   373                           
   374                           ; 2 bytes @ 0xC
   375     007C                     	ds	2
   376     007E                     ??_main:
   377                           
   378                           	psect	cstackBANK0
   379     0035                     __pcstackBANK0:	
   380                           ; 1 bytes @ 0xE
   381                           
   382     0035                     ??_Scanninginput:
   383                           
   384                           ; 1 bytes @ 0x0
   385     0035                     	ds	2
   386                           
   387                           	psect	maintext
   388     0552                     __pmaintext:	
   389 ;;
   390 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   391 ;;
   392 ;; *************** function _main *****************
   393 ;; Defined at:
   394 ;;		line 31 in file "Rpm_.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;		None
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   403 ;; Tracked objects:
   404 ;;		On entry : B00/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   408 ;;      Params:         0       0       0       0       0
   409 ;;      Locals:         0       0       0       0       0
   410 ;;      Temps:          0       0       0       0       0
   411 ;;      Totals:         0       0       0       0       0
   412 ;;Total ram usage:        0 bytes
   413 ;; Hardware stack levels required when called: 3
   414 ;; This function calls:
   415 ;;		_Configuration
   416 ;;		_Scanninginput
   417 ;; This function is called by:
   418 ;;		Startup code after reset
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422     0552                     _main:	
   423                           ;psect for function _main
   424                           
   425     0552                     l1107:	
   426                           ;incstack = 0
   427                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   428                           
   429                           
   430                           ;Rpm_.c: 32:     Configuration();
   431     0552  120A  118A  2601  120A  118A  	fcall	_Configuration
   432     0557                     l1109:
   433                           
   434                           ;Rpm_.c: 36:     {;Rpm_.c: 38:        Scanninginput();
   435     0557  120A  118A  26B2  120A  118A  	fcall	_Scanninginput
   436     055C  2D57               	goto	l1109
   437     055D  120A  118A  2800   	ljmp	start
   438     0560                     __end_of_main:
   439                           
   440                           	psect	text1
   441     06B2                     __ptext1:	
   442 ;; *************** function _Scanninginput *****************
   443 ;; Defined at:
   444 ;;		line 81 in file "Rpm_.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;		None
   447 ;; Auto vars:     Size  Location     Type
   448 ;;		None
   449 ;; Return value:  Size  Location     Type
   450 ;;                  1    wreg      void 
   451 ;; Registers used:
   452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   453 ;; Tracked objects:
   454 ;;		On entry : 0/0
   455 ;;		On exit  : 0/0
   456 ;;		Unchanged: 0/0
   457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   458 ;;      Params:         0       0       0       0       0
   459 ;;      Locals:         0       0       0       0       0
   460 ;;      Temps:          0       2       0       0       0
   461 ;;      Totals:         0       2       0       0       0
   462 ;;Total ram usage:        2 bytes
   463 ;; Hardware stack levels used: 1
   464 ;; Hardware stack levels required when called: 2
   465 ;; This function calls:
   466 ;;		_Atoi
   467 ;;		_ContentPrint
   468 ;; This function is called by:
   469 ;;		_main
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473     06B2                     _Scanninginput:	
   474                           ;psect for function _Scanninginput
   475                           
   476     06B2                     l1079:	
   477                           ;incstack = 0
   478                           ; Regs used in _Scanninginput: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   479                           
   480                           
   481                           ;Rpm_.c: 82:     input=PORTB;
   482     06B2  1283               	bcf	3,5	;RP0=0, select bank0
   483     06B3  1303               	bcf	3,6	;RP1=0, select bank0
   484     06B4  0806               	movf	6,w	;volatile
   485     06B5  00B4               	movwf	_input
   486                           
   487                           ;Rpm_.c: 84:     switch(input){
   488     06B6  2EFC               	goto	l1101
   489     06B7                     l1081:
   490                           
   491                           ;Rpm_.c: 87:             ContentPrint();
   492     06B7  120A  118A  277A  120A  118A  	fcall	_ContentPrint
   493                           
   494                           ;Rpm_.c: 89:         break;
   495     06BC  2F12               	goto	l62
   496     06BD                     l1083:
   497                           
   498                           ;Rpm_.c: 94:            if(speed<=49){
   499     06BD  0831               	movf	_speed+1,w
   500     06BE  3A80               	xorlw	128
   501     06BF  00FF               	movwf	btemp+1
   502     06C0  3080               	movlw	128
   503     06C1  027F               	subwf	btemp+1,w
   504     06C2  1D03               	skipz
   505     06C3  2EC6               	goto	u475
   506     06C4  3032               	movlw	50
   507     06C5  0230               	subwf	_speed,w
   508     06C6                     u475:
   509     06C6  1803               	skipnc
   510     06C7  2EC9               	goto	u471
   511     06C8  2ECA               	goto	u470
   512     06C9                     u471:
   513     06C9  2F12               	goto	l62
   514     06CA                     u470:
   515     06CA                     l1085:
   516                           
   517                           ;Rpm_.c: 95:                speed++;
   518     06CA  3001               	movlw	1
   519     06CB  1283               	bcf	3,5	;RP0=0, select bank0
   520     06CC  1303               	bcf	3,6	;RP1=0, select bank0
   521     06CD  07B0               	addwf	_speed,f
   522     06CE  1803               	skipnc
   523     06CF  0AB1               	incf	_speed+1,f
   524     06D0  3000               	movlw	0
   525     06D1  07B1               	addwf	_speed+1,f
   526     06D2                     l1087:
   527                           
   528                           ;Rpm_.c: 96:                Atoi(speed);
   529     06D2  0831               	movf	_speed+1,w
   530     06D3  00F9               	movwf	Atoi@number+1
   531     06D4  0830               	movf	_speed,w
   532     06D5  00F8               	movwf	Atoi@number
   533     06D6  120A  118A  25AE  120A  118A  	fcall	_Atoi
   534     06DB  2F12               	goto	l62
   535     06DC                     l1089:
   536                           
   537                           ;Rpm_.c: 101:             if( speed>=1){
   538     06DC  0831               	movf	_speed+1,w
   539     06DD  3A80               	xorlw	128
   540     06DE  00FF               	movwf	btemp+1
   541     06DF  3080               	movlw	128
   542     06E0  027F               	subwf	btemp+1,w
   543     06E1  1D03               	skipz
   544     06E2  2EE5               	goto	u485
   545     06E3  3001               	movlw	1
   546     06E4  0230               	subwf	_speed,w
   547     06E5                     u485:
   548     06E5  1C03               	skipc
   549     06E6  2EE8               	goto	u481
   550     06E7  2EE9               	goto	u480
   551     06E8                     u481:
   552     06E8  2F12               	goto	l62
   553     06E9                     u480:
   554     06E9                     l1091:
   555                           
   556                           ;Rpm_.c: 102:                 speed--;
   557     06E9  30FF               	movlw	255
   558     06EA  1283               	bcf	3,5	;RP0=0, select bank0
   559     06EB  1303               	bcf	3,6	;RP1=0, select bank0
   560     06EC  07B0               	addwf	_speed,f
   561     06ED  1803               	skipnc
   562     06EE  0AB1               	incf	_speed+1,f
   563     06EF  30FF               	movlw	255
   564     06F0  07B1               	addwf	_speed+1,f
   565     06F1  2ED2               	goto	l1087
   566     06F2                     l1095:
   567                           
   568                           ;Rpm_.c: 108:             ContentPrint();
   569     06F2  120A  118A  277A  120A  118A  	fcall	_ContentPrint
   570     06F7                     l1097:
   571                           
   572                           ;Rpm_.c: 109:             speed=0;
   573     06F7  1283               	bcf	3,5	;RP0=0, select bank0
   574     06F8  1303               	bcf	3,6	;RP1=0, select bank0
   575     06F9  01B0               	clrf	_speed
   576     06FA  01B1               	clrf	_speed+1
   577                           
   578                           ;Rpm_.c: 111:         break;
   579     06FB  2F12               	goto	l62
   580     06FC                     l1101:
   581     06FC  0834               	movf	_input,w
   582     06FD  00B5               	movwf	??_Scanninginput
   583     06FE  01B6               	clrf	??_Scanninginput+1
   584                           
   585                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   586                           ; Switch size 1, requested type "simple"
   587                           ; Number of cases is 1, Range of values is 0 to 0
   588                           ; switch strategies available:
   589                           ; Name         Instructions Cycles
   590                           ; simple_byte            4     3 (average)
   591                           ; direct_byte           11     8 (fixed)
   592                           ; jumptable            260     6 (fixed)
   593                           ;	Chosen strategy is simple_byte
   594     06FF  0836               	movf	??_Scanninginput+1,w
   595     0700  3A00               	xorlw	0	; case 0
   596     0701  1903               	skipnz
   597     0702  2F04               	goto	l1131
   598     0703  2F12               	goto	l62
   599     0704                     l1131:
   600                           
   601                           ; Switch size 1, requested type "simple"
   602                           ; Number of cases is 4, Range of values is 112 to 224
   603                           ; switch strategies available:
   604                           ; Name         Instructions Cycles
   605                           ; simple_byte           13     7 (average)
   606                           ; jumptable            263     9 (fixed)
   607                           ;	Chosen strategy is simple_byte
   608     0704  0835               	movf	??_Scanninginput,w
   609     0705  3A70               	xorlw	112	; case 112
   610     0706  1903               	skipnz
   611     0707  2EF2               	goto	l1095
   612     0708  3AC0               	xorlw	192	; case 176
   613     0709  1903               	skipnz
   614     070A  2EDC               	goto	l1089
   615     070B  3A60               	xorlw	96	; case 208
   616     070C  1903               	skipnz
   617     070D  2EBD               	goto	l1083
   618     070E  3A30               	xorlw	48	; case 224
   619     070F  1903               	skipnz
   620     0710  2EB7               	goto	l1081
   621     0711  2F12               	goto	l62
   622     0712                     l62:
   623     0712  0008               	return
   624     0713                     __end_of_Scanninginput:
   625                           
   626                           	psect	text2
   627     077A                     __ptext2:	
   628 ;; *************** function _ContentPrint *****************
   629 ;; Defined at:
   630 ;;		line 118 in file "Rpm_.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   644 ;;      Params:         0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0
   646 ;;      Temps:          0       0       0       0       0
   647 ;;      Totals:         0       0       0       0       0
   648 ;;Total ram usage:        0 bytes
   649 ;; Hardware stack levels used: 1
   650 ;; Hardware stack levels required when called: 1
   651 ;; This function calls:
   652 ;;		_Lcd_displaydata
   653 ;;		_Lcd_instruction
   654 ;; This function is called by:
   655 ;;		_Scanninginput
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659     077A                     _ContentPrint:	
   660                           ;psect for function _ContentPrint
   661                           
   662     077A                     l999:	
   663                           ;incstack = 0
   664                           ; Regs used in _ContentPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   665                           
   666                           
   667                           ;Rpm_.c: 119:     Lcd_instruction(0x80);
   668     077A  3080               	movlw	128
   669     077B  120A  118A  2597  120A  118A  	fcall	_Lcd_instruction
   670     0780                     l1001:
   671                           
   672                           ;Rpm_.c: 120:     for(i=0;i<8;i++)
   673     0780  1283               	bcf	3,5	;RP0=0, select bank0
   674     0781  1303               	bcf	3,6	;RP1=0, select bank0
   675     0782  01B2               	clrf	_i
   676     0783  01B3               	clrf	_i+1
   677     0784                     l1003:
   678     0784  0833               	movf	_i+1,w
   679     0785  3A80               	xorlw	128
   680     0786  00FF               	movwf	btemp+1
   681     0787  3080               	movlw	128
   682     0788  027F               	subwf	btemp+1,w
   683     0789  1D03               	skipz
   684     078A  2F8D               	goto	u445
   685     078B  3008               	movlw	8
   686     078C  0232               	subwf	_i,w
   687     078D                     u445:
   688     078D  1C03               	skipc
   689     078E  2F90               	goto	u441
   690     078F  2F91               	goto	u440
   691     0790                     u441:
   692     0790  2F92               	goto	l1007
   693     0791                     u440:
   694     0791  2FA7               	goto	l1013
   695     0792                     l1007:
   696                           
   697                           ;Rpm_.c: 121:         Lcd_displaydata(array[i]);
   698     0792  1283               	bcf	3,5	;RP0=0, select bank0
   699     0793  1303               	bcf	3,6	;RP1=0, select bank0
   700     0794  0832               	movf	_i,w
   701     0795  3E20               	addlw	(low (_array| 0))& (0+255)
   702     0796  0084               	movwf	4
   703     0797  1383               	bcf	3,7	;select IRP bank0
   704     0798  0800               	movf	0,w
   705     0799  120A  118A  2583  120A  118A  	fcall	_Lcd_displaydata
   706     079E                     l1009:
   707     079E  3001               	movlw	1
   708     079F  1283               	bcf	3,5	;RP0=0, select bank0
   709     07A0  1303               	bcf	3,6	;RP1=0, select bank0
   710     07A1  07B2               	addwf	_i,f
   711     07A2  1803               	skipnc
   712     07A3  0AB3               	incf	_i+1,f
   713     07A4  3000               	movlw	0
   714     07A5  07B3               	addwf	_i+1,f
   715     07A6  2F84               	goto	l1003
   716     07A7                     l1013:
   717                           
   718                           ;Rpm_.c: 122:     Lcd_displaydata('0');
   719     07A7  3030               	movlw	48
   720     07A8  120A  118A  2583  120A  118A  	fcall	_Lcd_displaydata
   721                           
   722                           ;Rpm_.c: 123:     Lcd_displaydata('0');
   723     07AD  3030               	movlw	48
   724     07AE  120A  118A  2583  120A  118A  	fcall	_Lcd_displaydata
   725                           
   726                           ;Rpm_.c: 124:     Lcd_displaydata('0');
   727     07B3  3030               	movlw	48
   728     07B4  120A  118A  2583  120A  118A  	fcall	_Lcd_displaydata
   729                           
   730                           ;Rpm_.c: 125:     Lcd_displaydata('0');
   731     07B9  3030               	movlw	48
   732     07BA  120A  118A  2583  120A  118A  	fcall	_Lcd_displaydata
   733     07BF                     l1015:
   734                           
   735                           ;Rpm_.c: 126:     for(i=12;i<15;i++)
   736     07BF  300C               	movlw	12
   737     07C0  1283               	bcf	3,5	;RP0=0, select bank0
   738     07C1  1303               	bcf	3,6	;RP1=0, select bank0
   739     07C2  00B2               	movwf	_i
   740     07C3  3000               	movlw	0
   741     07C4  00B3               	movwf	_i+1
   742     07C5                     l1017:
   743     07C5  0833               	movf	_i+1,w
   744     07C6  3A80               	xorlw	128
   745     07C7  00FF               	movwf	btemp+1
   746     07C8  3080               	movlw	128
   747     07C9  027F               	subwf	btemp+1,w
   748     07CA  1D03               	skipz
   749     07CB  2FCE               	goto	u455
   750     07CC  300F               	movlw	15
   751     07CD  0232               	subwf	_i,w
   752     07CE                     u455:
   753     07CE  1C03               	skipc
   754     07CF  2FD1               	goto	u451
   755     07D0  2FD2               	goto	u450
   756     07D1                     u451:
   757     07D1  2FD3               	goto	l1021
   758     07D2                     u450:
   759     07D2  2FE8               	goto	l69
   760     07D3                     l1021:
   761                           
   762                           ;Rpm_.c: 127:         Lcd_displaydata(array[i]);
   763     07D3  1283               	bcf	3,5	;RP0=0, select bank0
   764     07D4  1303               	bcf	3,6	;RP1=0, select bank0
   765     07D5  0832               	movf	_i,w
   766     07D6  3E20               	addlw	(low (_array| 0))& (0+255)
   767     07D7  0084               	movwf	4
   768     07D8  1383               	bcf	3,7	;select IRP bank0
   769     07D9  0800               	movf	0,w
   770     07DA  120A  118A  2583  120A  118A  	fcall	_Lcd_displaydata
   771     07DF                     l1023:
   772     07DF  3001               	movlw	1
   773     07E0  1283               	bcf	3,5	;RP0=0, select bank0
   774     07E1  1303               	bcf	3,6	;RP1=0, select bank0
   775     07E2  07B2               	addwf	_i,f
   776     07E3  1803               	skipnc
   777     07E4  0AB3               	incf	_i+1,f
   778     07E5  3000               	movlw	0
   779     07E6  07B3               	addwf	_i+1,f
   780     07E7  2FC5               	goto	l1017
   781     07E8                     l69:
   782     07E8  0008               	return
   783     07E9                     __end_of_ContentPrint:
   784                           
   785                           	psect	text3
   786     05AE                     __ptext3:	
   787 ;; *************** function _Atoi *****************
   788 ;; Defined at:
   789 ;;		line 130 in file "Rpm_.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;  number          2    8[COMMON] int 
   792 ;; Auto vars:     Size  Location     Type
   793 ;;  temp            2   12[COMMON] int 
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   803 ;;      Params:         2       0       0       0       0
   804 ;;      Locals:         2       0       0       0       0
   805 ;;      Temps:          2       0       0       0       0
   806 ;;      Totals:         6       0       0       0       0
   807 ;;Total ram usage:        6 bytes
   808 ;; Hardware stack levels used: 1
   809 ;; Hardware stack levels required when called: 1
   810 ;; This function calls:
   811 ;;		_Lcd_displaydata
   812 ;;		_Lcd_instruction
   813 ;;		___awdiv
   814 ;;		___awmod
   815 ;; This function is called by:
   816 ;;		_Scanninginput
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820     05AE                     _Atoi:	
   821                           ;psect for function _Atoi
   822                           
   823     05AE                     l1027:	
   824                           ;incstack = 0
   825                           ; Regs used in _Atoi: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   826                           
   827                           
   828                           ;Rpm_.c: 132:     int temp=number;
   829     05AE  0879               	movf	Atoi@number+1,w
   830     05AF  00FD               	movwf	Atoi@temp+1
   831     05B0  0878               	movf	Atoi@number,w
   832     05B1  00FC               	movwf	Atoi@temp
   833     05B2                     l1029:
   834                           
   835                           ;Rpm_.c: 133:     i=0;
   836     05B2  1283               	bcf	3,5	;RP0=0, select bank0
   837     05B3  1303               	bcf	3,6	;RP1=0, select bank0
   838     05B4  01B2               	clrf	_i
   839     05B5  01B3               	clrf	_i+1
   840     05B6                     l1031:
   841                           
   842                           ;Rpm_.c: 134:     Lcd_instruction(0x8B);
   843     05B6  308B               	movlw	139
   844     05B7  120A  118A  2597  120A  118A  	fcall	_Lcd_instruction
   845     05BC                     l1033:
   846                           
   847                           ;Rpm_.c: 135:     Lcd_instruction(0x04);
   848     05BC  3004               	movlw	4
   849     05BD  120A  118A  2597  120A  118A  	fcall	_Lcd_instruction
   850                           
   851                           ;Rpm_.c: 137:     while(temp){
   852     05C2  2DFA               	goto	l1045
   853     05C3                     l1035:
   854                           
   855                           ;Rpm_.c: 138:         number=(temp%10);
   856     05C3  300A               	movlw	10
   857     05C4  00F0               	movwf	___awmod@divisor
   858     05C5  3000               	movlw	0
   859     05C6  00F1               	movwf	___awmod@divisor+1
   860     05C7  087D               	movf	Atoi@temp+1,w
   861     05C8  00F3               	movwf	___awmod@dividend+1
   862     05C9  087C               	movf	Atoi@temp,w
   863     05CA  00F2               	movwf	___awmod@dividend
   864     05CB  120A  118A  2659  120A  118A  	fcall	___awmod
   865     05D0  0871               	movf	?___awmod+1,w
   866     05D1  00F9               	movwf	Atoi@number+1
   867     05D2  0870               	movf	?___awmod,w
   868     05D3  00F8               	movwf	Atoi@number
   869     05D4                     l1037:
   870                           
   871                           ;Rpm_.c: 139:         number=(unsigned char)number+48;
   872     05D4  0878               	movf	Atoi@number,w
   873     05D5  3E30               	addlw	48
   874     05D6  00F8               	movwf	Atoi@number
   875     05D7  3000               	movlw	0
   876     05D8  1803               	skipnc
   877     05D9  3001               	movlw	1
   878     05DA  00F9               	movwf	Atoi@number+1
   879     05DB                     l1039:
   880                           
   881                           ;Rpm_.c: 142:         Lcd_displaydata((unsigned char)number);
   882     05DB  0878               	movf	Atoi@number,w
   883     05DC  120A  118A  2583  120A  118A  	fcall	_Lcd_displaydata
   884     05E1                     l1041:
   885                           
   886                           ;Rpm_.c: 143:         temp/=10;
   887     05E1  300A               	movlw	10
   888     05E2  00F0               	movwf	___awdiv@divisor
   889     05E3  3000               	movlw	0
   890     05E4  00F1               	movwf	___awdiv@divisor+1
   891     05E5  087D               	movf	Atoi@temp+1,w
   892     05E6  00F3               	movwf	___awdiv@dividend+1
   893     05E7  087C               	movf	Atoi@temp,w
   894     05E8  00F2               	movwf	___awdiv@dividend
   895     05E9  120A  118A  2713  120A  118A  	fcall	___awdiv
   896     05EE  0871               	movf	?___awdiv+1,w
   897     05EF  00FD               	movwf	Atoi@temp+1
   898     05F0  0870               	movf	?___awdiv,w
   899     05F1  00FC               	movwf	Atoi@temp
   900     05F2                     l1043:
   901                           
   902                           ;Rpm_.c: 144:         _delay((unsigned long)((1000)*(600000/4000.0)));
   903     05F2  30C3               	movlw	195
   904     05F3  00FB               	movwf	??_Atoi+1
   905     05F4  30CD               	movlw	205
   906     05F5  00FA               	movwf	??_Atoi
   907     05F6                     u497:
   908     05F6  0BFA               	decfsz	??_Atoi,f
   909     05F7  2DF6               	goto	u497
   910     05F8  0BFB               	decfsz	??_Atoi+1,f
   911     05F9  2DF6               	goto	u497
   912     05FA                     l1045:
   913                           
   914                           ;Rpm_.c: 137:     while(temp){
   915     05FA  087C               	movf	Atoi@temp,w
   916     05FB  047D               	iorwf	Atoi@temp+1,w
   917     05FC  1D03               	btfss	3,2
   918     05FD  2DFF               	goto	u461
   919     05FE  2E00               	goto	u460
   920     05FF                     u461:
   921     05FF  2DC3               	goto	l1035
   922     0600                     u460:
   923     0600                     l75:
   924     0600  0008               	return
   925     0601                     __end_of_Atoi:
   926                           
   927                           	psect	text4
   928     0659                     __ptext4:	
   929 ;; *************** function ___awmod *****************
   930 ;; Defined at:
   931 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;  divisor         2    0[COMMON] int 
   934 ;;  dividend        2    2[COMMON] int 
   935 ;; Auto vars:     Size  Location     Type
   936 ;;  sign            1    5[COMMON] unsigned char 
   937 ;;  counter         1    4[COMMON] unsigned char 
   938 ;; Return value:  Size  Location     Type
   939 ;;                  2    0[COMMON] int 
   940 ;; Registers used:
   941 ;;		wreg, status,2, status,0, btemp+1
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   947 ;;      Params:         4       0       0       0       0
   948 ;;      Locals:         2       0       0       0       0
   949 ;;      Temps:          0       0       0       0       0
   950 ;;      Totals:         6       0       0       0       0
   951 ;;Total ram usage:        6 bytes
   952 ;; Hardware stack levels used: 1
   953 ;; This function calls:
   954 ;;		Nothing
   955 ;; This function is called by:
   956 ;;		_Atoi
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960     0659                     ___awmod:	
   961                           ;psect for function ___awmod
   962                           
   963     0659                     l961:	
   964                           ;incstack = 0
   965                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
   966                           
   967     0659  01F5               	clrf	___awmod@sign
   968     065A                     l963:
   969     065A  1FF3               	btfss	___awmod@dividend+1,7
   970     065B  2E5D               	goto	u351
   971     065C  2E5E               	goto	u350
   972     065D                     u351:
   973     065D  2E65               	goto	l969
   974     065E                     u350:
   975     065E                     l965:
   976     065E  09F2               	comf	___awmod@dividend,f
   977     065F  09F3               	comf	___awmod@dividend+1,f
   978     0660  0AF2               	incf	___awmod@dividend,f
   979     0661  1903               	skipnz
   980     0662  0AF3               	incf	___awmod@dividend+1,f
   981     0663                     l967:
   982     0663  01F5               	clrf	___awmod@sign
   983     0664  0AF5               	incf	___awmod@sign,f
   984     0665                     l969:
   985     0665  1FF1               	btfss	___awmod@divisor+1,7
   986     0666  2E68               	goto	u361
   987     0667  2E69               	goto	u360
   988     0668                     u361:
   989     0668  2E6E               	goto	l973
   990     0669                     u360:
   991     0669                     l971:
   992     0669  09F0               	comf	___awmod@divisor,f
   993     066A  09F1               	comf	___awmod@divisor+1,f
   994     066B  0AF0               	incf	___awmod@divisor,f
   995     066C  1903               	skipnz
   996     066D  0AF1               	incf	___awmod@divisor+1,f
   997     066E                     l973:
   998     066E  0870               	movf	___awmod@divisor,w
   999     066F  0471               	iorwf	___awmod@divisor+1,w
  1000     0670  1903               	btfsc	3,2
  1001     0671  2E73               	goto	u371
  1002     0672  2E74               	goto	u370
  1003     0673                     u371:
  1004     0673  2EA3               	goto	l991
  1005     0674                     u370:
  1006     0674                     l975:
  1007     0674  01F4               	clrf	___awmod@counter
  1008     0675  0AF4               	incf	___awmod@counter,f
  1009     0676  2E82               	goto	l981
  1010     0677                     l977:
  1011     0677  3001               	movlw	1
  1012     0678                     u385:
  1013     0678  1003               	clrc
  1014     0679  0DF0               	rlf	___awmod@divisor,f
  1015     067A  0DF1               	rlf	___awmod@divisor+1,f
  1016     067B  3EFF               	addlw	-1
  1017     067C  1D03               	skipz
  1018     067D  2E78               	goto	u385
  1019     067E                     l979:
  1020     067E  3001               	movlw	1
  1021     067F  00FF               	movwf	btemp+1
  1022     0680  087F               	movf	btemp+1,w
  1023     0681  07F4               	addwf	___awmod@counter,f
  1024     0682                     l981:
  1025     0682  1FF1               	btfss	___awmod@divisor+1,7
  1026     0683  2E85               	goto	u391
  1027     0684  2E86               	goto	u390
  1028     0685                     u391:
  1029     0685  2E77               	goto	l977
  1030     0686                     u390:
  1031     0686                     l983:
  1032     0686  0871               	movf	___awmod@divisor+1,w
  1033     0687  0273               	subwf	___awmod@dividend+1,w
  1034     0688  1D03               	skipz
  1035     0689  2E8C               	goto	u405
  1036     068A  0870               	movf	___awmod@divisor,w
  1037     068B  0272               	subwf	___awmod@dividend,w
  1038     068C                     u405:
  1039     068C  1C03               	skipc
  1040     068D  2E8F               	goto	u401
  1041     068E  2E90               	goto	u400
  1042     068F                     u401:
  1043     068F  2E96               	goto	l987
  1044     0690                     u400:
  1045     0690                     l985:
  1046     0690  0870               	movf	___awmod@divisor,w
  1047     0691  02F2               	subwf	___awmod@dividend,f
  1048     0692  0871               	movf	___awmod@divisor+1,w
  1049     0693  1C03               	skipc
  1050     0694  03F3               	decf	___awmod@dividend+1,f
  1051     0695  02F3               	subwf	___awmod@dividend+1,f
  1052     0696                     l987:
  1053     0696  3001               	movlw	1
  1054     0697                     u415:
  1055     0697  1003               	clrc
  1056     0698  0CF1               	rrf	___awmod@divisor+1,f
  1057     0699  0CF0               	rrf	___awmod@divisor,f
  1058     069A  3EFF               	addlw	-1
  1059     069B  1D03               	skipz
  1060     069C  2E97               	goto	u415
  1061     069D                     l989:
  1062     069D  3001               	movlw	1
  1063     069E  02F4               	subwf	___awmod@counter,f
  1064     069F  1D03               	btfss	3,2
  1065     06A0  2EA2               	goto	u421
  1066     06A1  2EA3               	goto	u420
  1067     06A2                     u421:
  1068     06A2  2E86               	goto	l983
  1069     06A3                     u420:
  1070     06A3                     l991:
  1071     06A3  0875               	movf	___awmod@sign,w
  1072     06A4  1903               	btfsc	3,2
  1073     06A5  2EA7               	goto	u431
  1074     06A6  2EA8               	goto	u430
  1075     06A7                     u431:
  1076     06A7  2EAD               	goto	l995
  1077     06A8                     u430:
  1078     06A8                     l993:
  1079     06A8  09F2               	comf	___awmod@dividend,f
  1080     06A9  09F3               	comf	___awmod@dividend+1,f
  1081     06AA  0AF2               	incf	___awmod@dividend,f
  1082     06AB  1903               	skipnz
  1083     06AC  0AF3               	incf	___awmod@dividend+1,f
  1084     06AD                     l995:
  1085     06AD  0873               	movf	___awmod@dividend+1,w
  1086     06AE  00F1               	movwf	?___awmod+1
  1087     06AF  0872               	movf	___awmod@dividend,w
  1088     06B0  00F0               	movwf	?___awmod
  1089     06B1                     l327:
  1090     06B1  0008               	return
  1091     06B2                     __end_of___awmod:
  1092                           
  1093                           	psect	text5
  1094     0713                     __ptext5:	
  1095 ;; *************** function ___awdiv *****************
  1096 ;; Defined at:
  1097 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;  divisor         2    0[COMMON] int 
  1100 ;;  dividend        2    2[COMMON] int 
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;  quotient        2    6[COMMON] int 
  1103 ;;  sign            1    5[COMMON] unsigned char 
  1104 ;;  counter         1    4[COMMON] unsigned char 
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  2    0[COMMON] int 
  1107 ;; Registers used:
  1108 ;;		wreg, status,2, status,0, btemp+1
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1114 ;;      Params:         4       0       0       0       0
  1115 ;;      Locals:         4       0       0       0       0
  1116 ;;      Temps:          0       0       0       0       0
  1117 ;;      Totals:         8       0       0       0       0
  1118 ;;Total ram usage:        8 bytes
  1119 ;; Hardware stack levels used: 1
  1120 ;; This function calls:
  1121 ;;		Nothing
  1122 ;; This function is called by:
  1123 ;;		_Atoi
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127     0713                     ___awdiv:	
  1128                           ;psect for function ___awdiv
  1129                           
  1130     0713                     l917:	
  1131                           ;incstack = 0
  1132                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1133                           
  1134     0713  01F5               	clrf	___awdiv@sign
  1135     0714                     l919:
  1136     0714  1FF1               	btfss	___awdiv@divisor+1,7
  1137     0715  2F17               	goto	u251
  1138     0716  2F18               	goto	u250
  1139     0717                     u251:
  1140     0717  2F1F               	goto	l925
  1141     0718                     u250:
  1142     0718                     l921:
  1143     0718  09F0               	comf	___awdiv@divisor,f
  1144     0719  09F1               	comf	___awdiv@divisor+1,f
  1145     071A  0AF0               	incf	___awdiv@divisor,f
  1146     071B  1903               	skipnz
  1147     071C  0AF1               	incf	___awdiv@divisor+1,f
  1148     071D                     l923:
  1149     071D  01F5               	clrf	___awdiv@sign
  1150     071E  0AF5               	incf	___awdiv@sign,f
  1151     071F                     l925:
  1152     071F  1FF3               	btfss	___awdiv@dividend+1,7
  1153     0720  2F22               	goto	u261
  1154     0721  2F23               	goto	u260
  1155     0722                     u261:
  1156     0722  2F2C               	goto	l931
  1157     0723                     u260:
  1158     0723                     l927:
  1159     0723  09F2               	comf	___awdiv@dividend,f
  1160     0724  09F3               	comf	___awdiv@dividend+1,f
  1161     0725  0AF2               	incf	___awdiv@dividend,f
  1162     0726  1903               	skipnz
  1163     0727  0AF3               	incf	___awdiv@dividend+1,f
  1164     0728                     l929:
  1165     0728  3001               	movlw	1
  1166     0729  00FF               	movwf	btemp+1
  1167     072A  087F               	movf	btemp+1,w
  1168     072B  06F5               	xorwf	___awdiv@sign,f
  1169     072C                     l931:
  1170     072C  01F6               	clrf	___awdiv@quotient
  1171     072D  01F7               	clrf	___awdiv@quotient+1
  1172     072E                     l933:
  1173     072E  0870               	movf	___awdiv@divisor,w
  1174     072F  0471               	iorwf	___awdiv@divisor+1,w
  1175     0730  1903               	btfsc	3,2
  1176     0731  2F33               	goto	u271
  1177     0732  2F34               	goto	u270
  1178     0733                     u271:
  1179     0733  2F6B               	goto	l953
  1180     0734                     u270:
  1181     0734                     l935:
  1182     0734  01F4               	clrf	___awdiv@counter
  1183     0735  0AF4               	incf	___awdiv@counter,f
  1184     0736  2F42               	goto	l941
  1185     0737                     l937:
  1186     0737  3001               	movlw	1
  1187     0738                     u285:
  1188     0738  1003               	clrc
  1189     0739  0DF0               	rlf	___awdiv@divisor,f
  1190     073A  0DF1               	rlf	___awdiv@divisor+1,f
  1191     073B  3EFF               	addlw	-1
  1192     073C  1D03               	skipz
  1193     073D  2F38               	goto	u285
  1194     073E                     l939:
  1195     073E  3001               	movlw	1
  1196     073F  00FF               	movwf	btemp+1
  1197     0740  087F               	movf	btemp+1,w
  1198     0741  07F4               	addwf	___awdiv@counter,f
  1199     0742                     l941:
  1200     0742  1FF1               	btfss	___awdiv@divisor+1,7
  1201     0743  2F45               	goto	u291
  1202     0744  2F46               	goto	u290
  1203     0745                     u291:
  1204     0745  2F37               	goto	l937
  1205     0746                     u290:
  1206     0746                     l943:
  1207     0746  3001               	movlw	1
  1208     0747                     u305:
  1209     0747  1003               	clrc
  1210     0748  0DF6               	rlf	___awdiv@quotient,f
  1211     0749  0DF7               	rlf	___awdiv@quotient+1,f
  1212     074A  3EFF               	addlw	-1
  1213     074B  1D03               	skipz
  1214     074C  2F47               	goto	u305
  1215     074D  0871               	movf	___awdiv@divisor+1,w
  1216     074E  0273               	subwf	___awdiv@dividend+1,w
  1217     074F  1D03               	skipz
  1218     0750  2F53               	goto	u315
  1219     0751  0870               	movf	___awdiv@divisor,w
  1220     0752  0272               	subwf	___awdiv@dividend,w
  1221     0753                     u315:
  1222     0753  1C03               	skipc
  1223     0754  2F56               	goto	u311
  1224     0755  2F57               	goto	u310
  1225     0756                     u311:
  1226     0756  2F5E               	goto	l949
  1227     0757                     u310:
  1228     0757                     l945:
  1229     0757  0870               	movf	___awdiv@divisor,w
  1230     0758  02F2               	subwf	___awdiv@dividend,f
  1231     0759  0871               	movf	___awdiv@divisor+1,w
  1232     075A  1C03               	skipc
  1233     075B  03F3               	decf	___awdiv@dividend+1,f
  1234     075C  02F3               	subwf	___awdiv@dividend+1,f
  1235     075D                     l947:
  1236     075D  1476               	bsf	___awdiv@quotient,0
  1237     075E                     l949:
  1238     075E  3001               	movlw	1
  1239     075F                     u325:
  1240     075F  1003               	clrc
  1241     0760  0CF1               	rrf	___awdiv@divisor+1,f
  1242     0761  0CF0               	rrf	___awdiv@divisor,f
  1243     0762  3EFF               	addlw	-1
  1244     0763  1D03               	skipz
  1245     0764  2F5F               	goto	u325
  1246     0765                     l951:
  1247     0765  3001               	movlw	1
  1248     0766  02F4               	subwf	___awdiv@counter,f
  1249     0767  1D03               	btfss	3,2
  1250     0768  2F6A               	goto	u331
  1251     0769  2F6B               	goto	u330
  1252     076A                     u331:
  1253     076A  2F46               	goto	l943
  1254     076B                     u330:
  1255     076B                     l953:
  1256     076B  0875               	movf	___awdiv@sign,w
  1257     076C  1903               	btfsc	3,2
  1258     076D  2F6F               	goto	u341
  1259     076E  2F70               	goto	u340
  1260     076F                     u341:
  1261     076F  2F75               	goto	l957
  1262     0770                     u340:
  1263     0770                     l955:
  1264     0770  09F6               	comf	___awdiv@quotient,f
  1265     0771  09F7               	comf	___awdiv@quotient+1,f
  1266     0772  0AF6               	incf	___awdiv@quotient,f
  1267     0773  1903               	skipnz
  1268     0774  0AF7               	incf	___awdiv@quotient+1,f
  1269     0775                     l957:
  1270     0775  0877               	movf	___awdiv@quotient+1,w
  1271     0776  00F1               	movwf	?___awdiv+1
  1272     0777  0876               	movf	___awdiv@quotient,w
  1273     0778  00F0               	movwf	?___awdiv
  1274     0779                     l314:
  1275     0779  0008               	return
  1276     077A                     __end_of___awdiv:
  1277                           
  1278                           	psect	text6
  1279     0583                     __ptext6:	
  1280 ;; *************** function _Lcd_displaydata *****************
  1281 ;; Defined at:
  1282 ;;		line 72 in file "Rpm_.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;  data            1    wreg     unsigned char 
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  data            1    2[COMMON] unsigned char 
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      void 
  1289 ;; Registers used:
  1290 ;;		wreg, status,2, status,0, btemp+1
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1296 ;;      Params:         0       0       0       0       0
  1297 ;;      Locals:         1       0       0       0       0
  1298 ;;      Temps:          2       0       0       0       0
  1299 ;;      Totals:         3       0       0       0       0
  1300 ;;Total ram usage:        3 bytes
  1301 ;; Hardware stack levels used: 1
  1302 ;; This function calls:
  1303 ;;		Nothing
  1304 ;; This function is called by:
  1305 ;;		_ContentPrint
  1306 ;;		_Atoi
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310     0583                     _Lcd_displaydata:	
  1311                           ;psect for function _Lcd_displaydata
  1312                           
  1313                           
  1314                           ;incstack = 0
  1315                           ; Regs used in _Lcd_displaydata: [wreg+status,2+status,0+btemp+1]
  1316                           ;Lcd_displaydata@data stored from wreg
  1317     0583  00F2               	movwf	Lcd_displaydata@data
  1318     0584                     l907:
  1319                           
  1320                           ;Rpm_.c: 73:     PORTC|=0x08;
  1321     0584  1283               	bcf	3,5	;RP0=0, select bank0
  1322     0585  1303               	bcf	3,6	;RP1=0, select bank0
  1323     0586  1587               	bsf	7,3	;volatile
  1324     0587                     l909:
  1325                           
  1326                           ;Rpm_.c: 74:     PORTD=data;
  1327     0587  0872               	movf	Lcd_displaydata@data,w
  1328     0588  0088               	movwf	8	;volatile
  1329     0589                     l911:
  1330                           
  1331                           ;Rpm_.c: 75:     PORTC|=0x01;
  1332     0589  1407               	bsf	7,0	;volatile
  1333     058A                     l913:
  1334                           
  1335                           ;Rpm_.c: 76:     PORTC &=~0x01;
  1336     058A  30FE               	movlw	254
  1337     058B  00FF               	movwf	btemp+1
  1338     058C  087F               	movf	btemp+1,w
  1339     058D  0587               	andwf	7,f	;volatile
  1340     058E                     l915:
  1341                           
  1342                           ;Rpm_.c: 77:     _delay((unsigned long)((1000)*(600000/4000.0)));
  1343     058E  30C3               	movlw	195
  1344     058F  00F1               	movwf	??_Lcd_displaydata+1
  1345     0590  30CD               	movlw	205
  1346     0591  00F0               	movwf	??_Lcd_displaydata
  1347     0592                     u507:
  1348     0592  0BF0               	decfsz	??_Lcd_displaydata,f
  1349     0593  2D92               	goto	u507
  1350     0594  0BF1               	decfsz	??_Lcd_displaydata+1,f
  1351     0595  2D92               	goto	u507
  1352     0596                     l51:
  1353     0596  0008               	return
  1354     0597                     __end_of_Lcd_displaydata:
  1355                           
  1356                           	psect	text7
  1357     0601                     __ptext7:	
  1358 ;; *************** function _Configuration *****************
  1359 ;; Defined at:
  1360 ;;		line 43 in file "Rpm_.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;		None
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;		None
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1374 ;;      Params:         0       0       0       0       0
  1375 ;;      Locals:         0       0       0       0       0
  1376 ;;      Temps:          2       0       0       0       0
  1377 ;;      Totals:         2       0       0       0       0
  1378 ;;Total ram usage:        2 bytes
  1379 ;; Hardware stack levels used: 1
  1380 ;; Hardware stack levels required when called: 1
  1381 ;; This function calls:
  1382 ;;		_Lcd_instruction
  1383 ;; This function is called by:
  1384 ;;		_main
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388     0601                     _Configuration:	
  1389                           ;psect for function _Configuration
  1390                           
  1391     0601                     l1047:	
  1392                           ;incstack = 0
  1393                           ; Regs used in _Configuration: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1394                           
  1395                           
  1396                           ;Rpm_.c: 44:     TRISC=0x00;
  1397     0601  1683               	bsf	3,5	;RP0=1, select bank1
  1398     0602  1303               	bcf	3,6	;RP1=0, select bank1
  1399     0603  0187               	clrf	7	;volatile
  1400                           
  1401                           ;Rpm_.c: 45:     TRISD=0x00;
  1402     0604  0188               	clrf	8	;volatile
  1403     0605                     l1049:
  1404                           
  1405                           ;Rpm_.c: 46:     TRISB=0xF0;
  1406     0605  30F0               	movlw	240
  1407     0606  0086               	movwf	6	;volatile
  1408     0607                     l1051:
  1409                           
  1410                           ;Rpm_.c: 47:     PORTC=0x00;
  1411     0607  1283               	bcf	3,5	;RP0=0, select bank0
  1412     0608  1303               	bcf	3,6	;RP1=0, select bank0
  1413     0609  0187               	clrf	7	;volatile
  1414     060A                     l1053:
  1415                           
  1416                           ;Rpm_.c: 48:     PORTB=0x00;
  1417     060A  0186               	clrf	6	;volatile
  1418     060B                     l1055:
  1419                           
  1420                           ;Rpm_.c: 49:     PORTD=0x00;
  1421     060B  0188               	clrf	8	;volatile
  1422     060C                     l1057:
  1423                           
  1424                           ;Rpm_.c: 50:     OPTION_REG&=~0x80;
  1425     060C  307F               	movlw	127
  1426     060D  00FF               	movwf	btemp+1
  1427     060E  087F               	movf	btemp+1,w
  1428     060F  1683               	bsf	3,5	;RP0=1, select bank1
  1429     0610  1303               	bcf	3,6	;RP1=0, select bank1
  1430     0611  0581               	andwf	1,f	;volatile
  1431     0612                     l1059:
  1432                           
  1433                           ;Rpm_.c: 51:     Lcd_instruction(0x38);
  1434     0612  3038               	movlw	56
  1435     0613  120A  118A  2597  120A  118A  	fcall	_Lcd_instruction
  1436     0618                     l1061:
  1437                           
  1438                           ;Rpm_.c: 52:     _delay((unsigned long)((1000)*(600000/4000.0)));
  1439     0618  30C3               	movlw	195
  1440     0619  00F4               	movwf	??_Configuration+1
  1441     061A  30CD               	movlw	205
  1442     061B  00F3               	movwf	??_Configuration
  1443     061C                     u517:
  1444     061C  0BF3               	decfsz	??_Configuration,f
  1445     061D  2E1C               	goto	u517
  1446     061E  0BF4               	decfsz	??_Configuration+1,f
  1447     061F  2E1C               	goto	u517
  1448     0620                     l1063:
  1449                           
  1450                           ;Rpm_.c: 53:     Lcd_instruction(0x08);
  1451     0620  3008               	movlw	8
  1452     0621  120A  118A  2597  120A  118A  	fcall	_Lcd_instruction
  1453     0626                     l1065:
  1454                           
  1455                           ;Rpm_.c: 54:     _delay((unsigned long)((1000)*(600000/4000.0)));
  1456     0626  30C3               	movlw	195
  1457     0627  00F4               	movwf	??_Configuration+1
  1458     0628  30CD               	movlw	205
  1459     0629  00F3               	movwf	??_Configuration
  1460     062A                     u527:
  1461     062A  0BF3               	decfsz	??_Configuration,f
  1462     062B  2E2A               	goto	u527
  1463     062C  0BF4               	decfsz	??_Configuration+1,f
  1464     062D  2E2A               	goto	u527
  1465     062E                     l1067:
  1466                           
  1467                           ;Rpm_.c: 55:     Lcd_instruction(0x01);
  1468     062E  3001               	movlw	1
  1469     062F  120A  118A  2597  120A  118A  	fcall	_Lcd_instruction
  1470     0634                     l1069:
  1471                           
  1472                           ;Rpm_.c: 56:     _delay((unsigned long)((1000)*(600000/4000.0)));
  1473     0634  30C3               	movlw	195
  1474     0635  00F4               	movwf	??_Configuration+1
  1475     0636  30CD               	movlw	205
  1476     0637  00F3               	movwf	??_Configuration
  1477     0638                     u537:
  1478     0638  0BF3               	decfsz	??_Configuration,f
  1479     0639  2E38               	goto	u537
  1480     063A  0BF4               	decfsz	??_Configuration+1,f
  1481     063B  2E38               	goto	u537
  1482     063C                     l1071:
  1483                           
  1484                           ;Rpm_.c: 57:     Lcd_instruction(0x06);
  1485     063C  3006               	movlw	6
  1486     063D  120A  118A  2597  120A  118A  	fcall	_Lcd_instruction
  1487     0642                     l1073:
  1488                           
  1489                           ;Rpm_.c: 58:     _delay((unsigned long)((1000)*(600000/4000.0)));
  1490     0642  30C3               	movlw	195
  1491     0643  00F4               	movwf	??_Configuration+1
  1492     0644  30CD               	movlw	205
  1493     0645  00F3               	movwf	??_Configuration
  1494     0646                     u547:
  1495     0646  0BF3               	decfsz	??_Configuration,f
  1496     0647  2E46               	goto	u547
  1497     0648  0BF4               	decfsz	??_Configuration+1,f
  1498     0649  2E46               	goto	u547
  1499     064A                     l1075:
  1500                           
  1501                           ;Rpm_.c: 59:     Lcd_instruction(0x0C);
  1502     064A  300C               	movlw	12
  1503     064B  120A  118A  2597  120A  118A  	fcall	_Lcd_instruction
  1504     0650                     l1077:
  1505                           
  1506                           ;Rpm_.c: 60:     _delay((unsigned long)((1000)*(600000/4000.0)));
  1507     0650  30C3               	movlw	195
  1508     0651  00F4               	movwf	??_Configuration+1
  1509     0652  30CD               	movlw	205
  1510     0653  00F3               	movwf	??_Configuration
  1511     0654                     u557:
  1512     0654  0BF3               	decfsz	??_Configuration,f
  1513     0655  2E54               	goto	u557
  1514     0656  0BF4               	decfsz	??_Configuration+1,f
  1515     0657  2E54               	goto	u557
  1516     0658                     l45:
  1517     0658  0008               	return
  1518     0659                     __end_of_Configuration:
  1519                           
  1520                           	psect	text8
  1521     0597                     __ptext8:	
  1522 ;; *************** function _Lcd_instruction *****************
  1523 ;; Defined at:
  1524 ;;		line 64 in file "Rpm_.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;  cmd             1    wreg     unsigned char 
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;  cmd             1    2[COMMON] unsigned char 
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      void 
  1531 ;; Registers used:
  1532 ;;		wreg, status,2, status,0, btemp+1
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1538 ;;      Params:         0       0       0       0       0
  1539 ;;      Locals:         1       0       0       0       0
  1540 ;;      Temps:          2       0       0       0       0
  1541 ;;      Totals:         3       0       0       0       0
  1542 ;;Total ram usage:        3 bytes
  1543 ;; Hardware stack levels used: 1
  1544 ;; This function calls:
  1545 ;;		Nothing
  1546 ;; This function is called by:
  1547 ;;		_Configuration
  1548 ;;		_ContentPrint
  1549 ;;		_Atoi
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553     0597                     _Lcd_instruction:	
  1554                           ;psect for function _Lcd_instruction
  1555                           
  1556                           
  1557                           ;incstack = 0
  1558                           ; Regs used in _Lcd_instruction: [wreg+status,2+status,0+btemp+1]
  1559                           ;Lcd_instruction@cmd stored from wreg
  1560     0597  00F2               	movwf	Lcd_instruction@cmd
  1561     0598                     l899:
  1562                           
  1563                           ;Rpm_.c: 65:     PORTC&=~0x08;
  1564     0598  30F7               	movlw	247
  1565     0599  00FF               	movwf	btemp+1
  1566     059A  087F               	movf	btemp+1,w
  1567     059B  1283               	bcf	3,5	;RP0=0, select bank0
  1568     059C  1303               	bcf	3,6	;RP1=0, select bank0
  1569     059D  0587               	andwf	7,f	;volatile
  1570     059E                     l901:
  1571                           
  1572                           ;Rpm_.c: 66:     PORTD=cmd;
  1573     059E  0872               	movf	Lcd_instruction@cmd,w
  1574     059F  0088               	movwf	8	;volatile
  1575     05A0                     l903:
  1576                           
  1577                           ;Rpm_.c: 67:     PORTC|=0x01;
  1578     05A0  1407               	bsf	7,0	;volatile
  1579     05A1                     l905:
  1580                           
  1581                           ;Rpm_.c: 68:     PORTC&=~0x01;
  1582     05A1  30FE               	movlw	254
  1583     05A2  00FF               	movwf	btemp+1
  1584     05A3  087F               	movf	btemp+1,w
  1585     05A4  0587               	andwf	7,f	;volatile
  1586                           
  1587                           ;Rpm_.c: 69:     _delay((unsigned long)((1000)*(600000/4000.0)));
  1588     05A5  30C3               	movlw	195
  1589     05A6  00F1               	movwf	??_Lcd_instruction+1
  1590     05A7  30CD               	movlw	205
  1591     05A8  00F0               	movwf	??_Lcd_instruction
  1592     05A9                     u567:
  1593     05A9  0BF0               	decfsz	??_Lcd_instruction,f
  1594     05AA  2DA9               	goto	u567
  1595     05AB  0BF1               	decfsz	??_Lcd_instruction+1,f
  1596     05AC  2DA9               	goto	u567
  1597     05AD                     l48:
  1598     05AD  0008               	return
  1599     05AE                     __end_of_Lcd_instruction:
  1600     007E                     btemp	set	126	;btemp
  1601     007E                     wtemp0	set	126
  1602                           
  1603                           	psect	config
  1604                           
  1605                           ;Config register CONFIG @ 0x2007
  1606                           ;	Oscillator Selection bits
  1607                           ;	FOSC = EXTRC, RC oscillator
  1608                           ;	Watchdog Timer Enable bit
  1609                           ;	WDTE = OFF, WDT disabled
  1610                           ;	Power-up Timer Enable bit
  1611                           ;	PWRTE = OFF, PWRT disabled
  1612                           ;	Brown-out Reset Enable bit
  1613                           ;	BOREN = OFF, BOR disabled
  1614                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1615                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1616                           ;	Data EEPROM Memory Code Protection bit
  1617                           ;	CPD = OFF, Data EEPROM code protection off
  1618                           ;	Flash Program Memory Write Enable bits
  1619                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1620                           ;	In-Circuit Debugger Mode bit
  1621                           ;	DEBUG = 0x1, unprogrammed default
  1622                           ;	Flash Program Memory Code Protection bit
  1623                           ;	CP = OFF, Code protection off
  1624     2007                     	org	8199
  1625     2007  3FBB               	dw	16315

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      2      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _Scanninginput->_Atoi
    _ContentPrint->_Lcd_displaydata
    _ContentPrint->_Lcd_instruction
    _Atoi->___awdiv
    _Configuration->_Lcd_instruction

Critical Paths under _main in BANK0

    _main->_Scanninginput

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1298
                      _Configuration
                      _Scanninginput
 ---------------------------------------------------------------------------------
 (1) _Scanninginput                                        2     2      0    1276
                                              0 BANK0      2     2      0
                               _Atoi
                       _ContentPrint
 ---------------------------------------------------------------------------------
 (2) _ContentPrint                                         0     0      0      44
                    _Lcd_displaydata
                    _Lcd_instruction
 ---------------------------------------------------------------------------------
 (2) _Atoi                                                 6     4      2    1232
                                              8 COMMON     6     4      2
                    _Lcd_displaydata
                    _Lcd_instruction
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) _Lcd_displaydata                                      3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Configuration                                        2     2      0      22
                                              3 COMMON     2     2      0
                    _Lcd_instruction
 ---------------------------------------------------------------------------------
 (3) _Lcd_instruction                                      3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuration
     _Lcd_instruction
   _Scanninginput
     _Atoi
       _Lcd_displaydata
       _Lcd_instruction
       ___awdiv
       ___awmod
     _ContentPrint
       _Lcd_displaydata
       _Lcd_instruction

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      2      17       5       28.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      25      12        0.0%
ABS                  0      0      25       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Jul 29 18:15:16 2023

                      _i 0032                        pc 0002                       l51 0596  
                     l45 0658                       l62 0712                       l48 05AD  
                     l75 0600                       l69 07E8             ___awdiv@sign 0075  
                     fsr 0004                      l314 0779                      l327 06B1  
                    l901 059E                      l903 05A0                      l911 0589  
                    l905 05A1                      l913 058A                      l921 0718  
                    l915 058E                      l907 0584                      l931 072C  
                    l923 071D                      l909 0587                      l941 0742  
                    l933 072E                      l925 071F                      l917 0713  
                    l951 0765                      l943 0746                      l935 0734  
                    l927 0723                      l919 0714                      l945 0757  
                    l937 0737                      l953 076B                      l929 0728  
                    l961 0659                      l955 0770                      l947 075D  
                    l939 073E                      l971 0669                      l963 065A  
                    l957 0775                      l949 075E                      l981 0682  
                    l973 066E                      l965 065E                      l983 0686  
                    l975 0674                      l991 06A3                      l967 0663  
                    l993 06A8                      l985 0690                      l977 0677  
                    l969 0665                      l899 0598                      l995 06AD  
                    l987 0696                      l979 067E                      l989 069D  
                    l999 077A                      u310 0757                      u311 0756  
                    u400 0690                      u305 0747                      u401 068F  
                    u330 076B                      u250 0718                      u331 076A  
                    u315 0753                      u251 0717                      u340 0770  
                    u260 0723                      u420 06A3                      u341 076F  
                    u325 075F                      u261 0722                      u421 06A2  
                    u405 068C                      u270 0734                      u430 06A8  
                    u350 065E                      u271 0733                      u431 06A7  
                    u415 0697                      u351 065D                      u360 0669  
                    u440 0791                      u361 0668                      u441 0790  
                    u290 0746                      u370 0674                      u450 07D2  
                    u507 0592                      u291 0745                      u371 0673  
                    u451 07D1                      u460 0600                      u517 061C  
                    u285 0738                      u461 05FF                      u445 078D  
                    u390 0686                      u470 06CA                      u527 062A  
                    u391 0685                      u455 07CE                      u471 06C9  
                    u480 06E9                      u537 0638                      u385 0678  
                    u481 06E8                      u547 0646                      u475 06C6  
                    u557 0654                      u485 06E5                      u567 05A9  
                    u497 05F6                      fsr0 0004                      indf 0000  
           ___awmod@sign 0075           ??_ContentPrint 0073                     l1001 0780  
                   l1003 0784                     l1021 07D3                     l1013 07A7  
                   l1101 06FC                     l1031 05B6                     l1023 07DF  
                   l1015 07BF                     l1007 0792                     l1041 05E1  
                   l1033 05BC                     l1017 07C5                     l1009 079E  
                   l1051 0607                     l1043 05F2                     l1035 05C3  
                   l1027 05AE                     l1131 0704                     l1107 0552  
                   l1061 0618                     l1053 060A                     l1037 05D4  
                   l1045 05FA                     l1029 05B2                     l1109 0557  
                   l1071 063C                     l1063 0620                     l1055 060B  
                   l1047 0601                     l1039 05DB                     l1073 0642  
                   l1065 0626                     l1057 060C                     l1049 0605  
                   l1081 06B7                     l1075 064A                     l1067 062E  
                   l1059 0612                     l1091 06E9                     l1083 06BD  
                   l1077 0650                     l1069 0634                     l1085 06CA  
                   l1095 06F2                     l1087 06D2                     l1079 06B2  
                   l1097 06F7                     l1089 06DC                     _Atoi 05AE  
                   _main 0552                     btemp 007E                     start 0000  
                  ?_Atoi 0078  __end_of_Lcd_displaydata 0597                    ?_main 0070  
        __end_of___awdiv 077A          __end_of___awmod 06B2          ___awdiv@divisor 0070  
        ___awdiv@counter 0074                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _array 0020                    _input 0034  
                  _speed 0030                    pclath 000A          _Lcd_instruction 0597  
                  status 0003                    wtemp0 007E             __end_of_Atoi 0601  
        __initialization 07E9             __end_of_main 0560                   ??_Atoi 007A  
                 ??_main 007E         ___awdiv@dividend 0072                ??___awdiv 0074  
              ??___awmod 0074     __end_of_ContentPrint 07E9         ___awdiv@quotient 0076  
        ___awmod@divisor 0070          ___awmod@counter 0074         ?_Lcd_displaydata 0070  
    Lcd_displaydata@data 0072  __end_of_Lcd_instruction 05AE  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 0560               __pbssBANK0 0030  
  __end_of_Configuration 0659            _Scanninginput 06B2               __pmaintext 0552  
       ?_Lcd_instruction 0070           ?_Scanninginput 0070                  ___awdiv 0713  
                ___awmod 0659                  __ptext1 06B2                  __ptext2 077A  
                __ptext3 05AE                  __ptext4 0659                  __ptext5 0713  
                __ptext6 0583                  __ptext7 0601                  __ptext8 0597  
       ___awmod@dividend 0072             _ContentPrint 077A     end_of_initialization 07FC  
     Lcd_instruction@cmd 0072          ??_Scanninginput 0035      start_initialization 07E9  
             init_fetch0 0570              __pdataBANK0 0020                ___latbits 0002  
          __pcstackBANK0 0035                 ?___awdiv 0070                 ?___awmod 0070  
      ??_Lcd_displaydata 0070                 Atoi@temp 007C            _Configuration 0601  
         ?_Configuration 0070    __end_of_Scanninginput 0713        ??_Lcd_instruction 0070  
               init_ram0 0574               _OPTION_REG 0081               Atoi@number 0078  
        _Lcd_displaydata 0583            ?_ContentPrint 0070          ??_Configuration 0073  
