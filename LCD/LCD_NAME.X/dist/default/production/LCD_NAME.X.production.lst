

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Sep 24 12:59:35 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 22/03/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     009F                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     0006                     	;# 
   118     0007                     	;# 
   119     0008                     	;# 
   120     0009                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     0088                     	;# 
   151     0089                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171                           
   172                           	psect	idataBANK0
   173     0711                     __pidataBANK0:
   174                           
   175                           ;initializer for _name
   176     0711  3456               	retlw	86
   177     0712  3445               	retlw	69
   178     0713  344C               	retlw	76
   179     0714  344D               	retlw	77
   180     0715  3455               	retlw	85
   181     0716  3452               	retlw	82
   182     0717  3455               	retlw	85
   183     0718  3447               	retlw	71
   184     0719  3441               	retlw	65
   185     071A  344E               	retlw	78
   186     071B  3400               	retlw	0
   187     071C  3400               	retlw	0
   188     071D  3400               	retlw	0
   189     071E  3400               	retlw	0
   190     071F  3400               	retlw	0
   191     0720  3400               	retlw	0
   192     0721  3400               	retlw	0
   193     0722  3400               	retlw	0
   194     0723  3400               	retlw	0
   195     0724  3400               	retlw	0
   196     0725  3400               	retlw	0
   197     0726  3400               	retlw	0
   198     0727  3400               	retlw	0
   199     0728  3400               	retlw	0
   200     0729  3400               	retlw	0
   201     072A  3400               	retlw	0
   202     072B  3400               	retlw	0
   203     072C  3400               	retlw	0
   204     072D  3400               	retlw	0
   205     072E  3400               	retlw	0
   206     072F  3400               	retlw	0
   207     0730  3400               	retlw	0
   208     0731  3400               	retlw	0
   209     0732  3400               	retlw	0
   210     0733  3400               	retlw	0
   211     0734  3400               	retlw	0
   212     0735  3400               	retlw	0
   213     0736  3400               	retlw	0
   214     0737  3400               	retlw	0
   215     0738  3400               	retlw	0
   216     0739  3400               	retlw	0
   217     073A  3400               	retlw	0
   218     073B  3400               	retlw	0
   219     073C  3400               	retlw	0
   220     073D  3400               	retlw	0
   221     073E  3400               	retlw	0
   222     073F  3400               	retlw	0
   223     0740  3400               	retlw	0
   224     0741  3400               	retlw	0
   225     0742  3400               	retlw	0
   226     0008                     _PORTD	set	8
   227     0007                     _PORTC	set	7
   228     0088                     _TRISD	set	136
   229     0087                     _TRISC	set	135
   230                           
   231                           	psect	cinit
   232     07EB                     start_initialization:	
   233                           ; #config settings
   234                           
   235     07EB                     __initialization:
   236                           
   237                           ; Initialize objects allocated to BANK0
   238     07EB  1383               	bcf	3,7	;select IRP bank0
   239     07EC  3052               	movlw	low (__pdataBANK0+50)
   240     07ED  00FD               	movwf	btemp+-1
   241     07EE  3007               	movlw	high __pidataBANK0
   242     07EF  00FE               	movwf	btemp
   243     07F0  3011               	movlw	low __pidataBANK0
   244     07F1  00FF               	movwf	btemp+1
   245     07F2  3020               	movlw	low __pdataBANK0
   246     07F3  0084               	movwf	4
   247     07F4  120A  118A  26D7  120A  118A  	fcall	init_ram0
   248                           
   249                           ; Clear objects allocated to COMMON
   250     07F9  01F5               	clrf	__pbssCOMMON& (0+127)
   251     07FA  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   252     07FB  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   253     07FC                     end_of_initialization:	
   254                           ;End of C runtime variable initialization code
   255                           
   256     07FC                     __end_of__initialization:
   257     07FC  0183               	clrf	3
   258     07FD  120A  118A  2F92   	ljmp	_main	;jump to C main() function
   259                           
   260                           	psect	bssCOMMON
   261     0075                     __pbssCOMMON:
   262     0075                     _k:
   263     0075                     	ds	2
   264     0077                     _i:
   265     0077                     	ds	1
   266                           
   267                           	psect	dataBANK0
   268     0020                     __pdataBANK0:
   269     0020                     _name:
   270     0020                     	ds	50
   271                           
   272                           	psect	inittext
   273     06D3                     init_fetch0:	
   274                           ;	Called with low address in FSR and high address in W
   275                           
   276     06D3  087E               	movf	btemp,w
   277     06D4  008A               	movwf	10
   278     06D5  087F               	movf	btemp+1,w
   279     06D6  0082               	movwf	2
   280     06D7                     init_ram0:	
   281                           ;Called with:
   282                           ;	high address of idata address in btemp 
   283                           ;	low address of idata address in btemp+1 
   284                           ;	low address of data in FSR
   285                           ;	high address + 1 of data in btemp-1
   286                           
   287     06D7  120A  118A  26D3  120A  118A  	fcall	init_fetch0
   288     06DC  0080               	movwf	0
   289     06DD  0A84               	incf	4,f
   290     06DE  0804               	movf	4,w
   291     06DF  067D               	xorwf	btemp+-1,w
   292     06E0  1903               	btfsc	3,2
   293     06E1  3400               	retlw	0
   294     06E2  0AFF               	incf	btemp+1,f
   295     06E3  1903               	btfsc	3,2
   296     06E4  0AFE               	incf	btemp,f
   297     06E5  2ED7               	goto	init_ram0
   298                           
   299                           	psect	cstackCOMMON
   300     0070                     __pcstackCOMMON:
   301     0070                     ?_initi:
   302     0070                     ?_Lcd_command:	
   303                           ; 1 bytes @ 0x0
   304                           
   305     0070                     ??_Lcd_command:	
   306                           ; 1 bytes @ 0x0
   307                           
   308     0070                     ?_Lcd_data:	
   309                           ; 1 bytes @ 0x0
   310                           
   311     0070                     ??_Lcd_data:	
   312                           ; 1 bytes @ 0x0
   313                           
   314     0070                     ?_main:	
   315                           ; 1 bytes @ 0x0
   316                           
   317                           
   318                           ; 1 bytes @ 0x0
   319     0070                     	ds	2
   320     0072                     Lcd_command@i:
   321     0072                     Lcd_data@i:	
   322                           ; 1 bytes @ 0x2
   323                           
   324                           
   325                           ; 1 bytes @ 0x2
   326     0072                     	ds	1
   327     0073                     ??_initi:
   328                           
   329                           ; 1 bytes @ 0x3
   330     0073                     	ds	2
   331     0075                     ??_main:
   332                           
   333                           	psect	maintext
   334     0792                     __pmaintext:	
   335                           ; 1 bytes @ 0x5
   336 ;;
   337 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   338 ;;
   339 ;; *************** function _main *****************
   340 ;; Defined at:
   341 ;;		line 27 in file "LCD_DISLPAY.c"
   342 ;; Parameters:    Size  Location     Type
   343 ;;		None
   344 ;; Auto vars:     Size  Location     Type
   345 ;;		None
   346 ;; Return value:  Size  Location     Type
   347 ;;                  1    wreg      void 
   348 ;; Registers used:
   349 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   350 ;; Tracked objects:
   351 ;;		On entry : B00/0
   352 ;;		On exit  : 0/0
   353 ;;		Unchanged: 0/0
   354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   355 ;;      Params:         0       0       0       0       0
   356 ;;      Locals:         0       0       0       0       0
   357 ;;      Temps:          0       0       0       0       0
   358 ;;      Totals:         0       0       0       0       0
   359 ;;Total ram usage:        0 bytes
   360 ;; Hardware stack levels required when called: 2
   361 ;; This function calls:
   362 ;;		_Lcd_command
   363 ;;		_Lcd_data
   364 ;;		_initi
   365 ;; This function is called by:
   366 ;;		Startup code after reset
   367 ;; This function uses a non-reentrant model
   368 ;;
   369                           
   370     0792                     _main:	
   371                           ;psect for function _main
   372                           
   373     0792                     l675:	
   374                           ;incstack = 0
   375                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   376                           
   377                           
   378                           ;LCD_DISLPAY.c: 28:        initi();
   379     0792  120A  118A  2743  120A  118A  	fcall	_initi
   380                           
   381                           ;LCD_DISLPAY.c: 29:      Lcd_command(0x84);
   382     0797  3084               	movlw	132
   383     0798  120A  118A  26FA  120A  118A  	fcall	_Lcd_command
   384     079D                     l677:
   385                           
   386                           ;LCD_DISLPAY.c: 30:      for(k=0;k<10;k++){
   387     079D  01F5               	clrf	_k
   388     079E  01F6               	clrf	_k+1
   389     079F                     l683:
   390                           
   391                           ;LCD_DISLPAY.c: 31:          Lcd_data(name[k]);
   392     079F  0875               	movf	_k,w
   393     07A0  3E20               	addlw	(low (_name| 0))& (0+255)
   394     07A1  0084               	movwf	4
   395     07A2  1383               	bcf	3,7	;select IRP bank0
   396     07A3  0800               	movf	0,w
   397     07A4  120A  118A  26E6  120A  118A  	fcall	_Lcd_data
   398     07A9                     l685:
   399                           
   400                           ;LCD_DISLPAY.c: 32:      }
   401     07A9  3001               	movlw	1
   402     07AA  07F5               	addwf	_k,f
   403     07AB  1803               	skipnc
   404     07AC  0AF6               	incf	_k+1,f
   405     07AD  3000               	movlw	0
   406     07AE  07F6               	addwf	_k+1,f
   407     07AF                     l687:
   408     07AF  0876               	movf	_k+1,w
   409     07B0  3A80               	xorlw	128
   410     07B1  00FF               	movwf	btemp+1
   411     07B2  3080               	movlw	128
   412     07B3  027F               	subwf	btemp+1,w
   413     07B4  1D03               	skipz
   414     07B5  2FB8               	goto	u15
   415     07B6  300A               	movlw	10
   416     07B7  0275               	subwf	_k,w
   417     07B8                     u15:
   418     07B8  1C03               	skipc
   419     07B9  2FBB               	goto	u11
   420     07BA  2FBC               	goto	u10
   421     07BB                     u11:
   422     07BB  2F9F               	goto	l683
   423     07BC                     u10:
   424     07BC                     l689:
   425                           
   426                           ;LCD_DISLPAY.c: 33:      Lcd_command(0x04);
   427     07BC  3004               	movlw	4
   428     07BD  120A  118A  26FA  120A  118A  	fcall	_Lcd_command
   429                           
   430                           ;LCD_DISLPAY.c: 34:      Lcd_command(0xCE);
   431     07C2  30CE               	movlw	206
   432     07C3  120A  118A  26FA  120A  118A  	fcall	_Lcd_command
   433     07C8                     l691:
   434                           
   435                           ;LCD_DISLPAY.c: 35:      for(k=0;k<10;k++){
   436     07C8  01F5               	clrf	_k
   437     07C9  01F6               	clrf	_k+1
   438     07CA                     l697:
   439                           
   440                           ;LCD_DISLPAY.c: 36:        Lcd_data(name[k]);
   441     07CA  0875               	movf	_k,w
   442     07CB  3E20               	addlw	(low (_name| 0))& (0+255)
   443     07CC  0084               	movwf	4
   444     07CD  1383               	bcf	3,7	;select IRP bank0
   445     07CE  0800               	movf	0,w
   446     07CF  120A  118A  26E6  120A  118A  	fcall	_Lcd_data
   447     07D4                     l699:
   448                           
   449                           ;LCD_DISLPAY.c: 37:     }
   450     07D4  3001               	movlw	1
   451     07D5  07F5               	addwf	_k,f
   452     07D6  1803               	skipnc
   453     07D7  0AF6               	incf	_k+1,f
   454     07D8  3000               	movlw	0
   455     07D9  07F6               	addwf	_k+1,f
   456     07DA                     l701:
   457     07DA  0876               	movf	_k+1,w
   458     07DB  3A80               	xorlw	128
   459     07DC  00FF               	movwf	btemp+1
   460     07DD  3080               	movlw	128
   461     07DE  027F               	subwf	btemp+1,w
   462     07DF  1D03               	skipz
   463     07E0  2FE3               	goto	u25
   464     07E1  300A               	movlw	10
   465     07E2  0275               	subwf	_k,w
   466     07E3                     u25:
   467     07E3  1C03               	skipc
   468     07E4  2FE6               	goto	u21
   469     07E5  2FE7               	goto	u20
   470     07E6                     u21:
   471     07E6  2FCA               	goto	l697
   472     07E7                     u20:
   473     07E7                     l31:	
   474                           ;LCD_DISLPAY.c: 38:     while(1);
   475                           
   476     07E7  2FE7               	goto	l31
   477     07E8  120A  118A  2800   	ljmp	start
   478     07EB                     __end_of_main:
   479                           
   480                           	psect	text1
   481     0743                     __ptext1:	
   482 ;; *************** function _initi *****************
   483 ;; Defined at:
   484 ;;		line 40 in file "LCD_DISLPAY.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   498 ;;      Params:         0       0       0       0       0
   499 ;;      Locals:         0       0       0       0       0
   500 ;;      Temps:          2       0       0       0       0
   501 ;;      Totals:         2       0       0       0       0
   502 ;;Total ram usage:        2 bytes
   503 ;; Hardware stack levels used: 1
   504 ;; Hardware stack levels required when called: 1
   505 ;; This function calls:
   506 ;;		_Lcd_command
   507 ;; This function is called by:
   508 ;;		_main
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512     0743                     _initi:	
   513                           ;psect for function _initi
   514                           
   515     0743                     l643:	
   516                           ;incstack = 0
   517                           ; Regs used in _initi: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   518                           
   519                           
   520                           ;LCD_DISLPAY.c: 41:     TRISC=0x00;
   521     0743  1683               	bsf	3,5	;RP0=1, select bank1
   522     0744  1303               	bcf	3,6	;RP1=0, select bank1
   523     0745  0187               	clrf	7	;volatile
   524                           
   525                           ;LCD_DISLPAY.c: 42:     TRISD=0x00;
   526     0746  0188               	clrf	8	;volatile
   527                           
   528                           ;LCD_DISLPAY.c: 43:     PORTC=0x00;
   529     0747  1283               	bcf	3,5	;RP0=0, select bank0
   530     0748  1303               	bcf	3,6	;RP1=0, select bank0
   531     0749  0187               	clrf	7	;volatile
   532                           
   533                           ;LCD_DISLPAY.c: 44:     PORTD=0x00;
   534     074A  0188               	clrf	8	;volatile
   535     074B                     l645:
   536                           
   537                           ;LCD_DISLPAY.c: 45: Lcd_command(0x38);
   538     074B  3038               	movlw	56
   539     074C  120A  118A  26FA  120A  118A  	fcall	_Lcd_command
   540     0751                     l647:
   541                           
   542                           ;LCD_DISLPAY.c: 46: _delay((unsigned long)((100)*(6000000/4000.0)));
   543     0751  30C3               	movlw	195
   544     0752  00F4               	movwf	??_initi+1
   545     0753  30CD               	movlw	205
   546     0754  00F3               	movwf	??_initi
   547     0755                     u37:
   548     0755  0BF3               	decfsz	??_initi,f
   549     0756  2F55               	goto	u37
   550     0757  0BF4               	decfsz	??_initi+1,f
   551     0758  2F55               	goto	u37
   552     0759                     l649:
   553                           
   554                           ;LCD_DISLPAY.c: 47: Lcd_command(0x08);
   555     0759  3008               	movlw	8
   556     075A  120A  118A  26FA  120A  118A  	fcall	_Lcd_command
   557     075F                     l651:
   558                           
   559                           ;LCD_DISLPAY.c: 48: _delay((unsigned long)((100)*(6000000/4000.0)));
   560     075F  30C3               	movlw	195
   561     0760  00F4               	movwf	??_initi+1
   562     0761  30CD               	movlw	205
   563     0762  00F3               	movwf	??_initi
   564     0763                     u47:
   565     0763  0BF3               	decfsz	??_initi,f
   566     0764  2F63               	goto	u47
   567     0765  0BF4               	decfsz	??_initi+1,f
   568     0766  2F63               	goto	u47
   569     0767                     l653:
   570                           
   571                           ;LCD_DISLPAY.c: 49: Lcd_command(0x01);
   572     0767  3001               	movlw	1
   573     0768  120A  118A  26FA  120A  118A  	fcall	_Lcd_command
   574     076D                     l655:
   575                           
   576                           ;LCD_DISLPAY.c: 50: _delay((unsigned long)((100)*(6000000/4000.0)));
   577     076D  30C3               	movlw	195
   578     076E  00F4               	movwf	??_initi+1
   579     076F  30CD               	movlw	205
   580     0770  00F3               	movwf	??_initi
   581     0771                     u57:
   582     0771  0BF3               	decfsz	??_initi,f
   583     0772  2F71               	goto	u57
   584     0773  0BF4               	decfsz	??_initi+1,f
   585     0774  2F71               	goto	u57
   586     0775                     l657:
   587                           
   588                           ;LCD_DISLPAY.c: 51: Lcd_command(0x06);
   589     0775  3006               	movlw	6
   590     0776  120A  118A  26FA  120A  118A  	fcall	_Lcd_command
   591     077B                     l659:
   592                           
   593                           ;LCD_DISLPAY.c: 52: _delay((unsigned long)((100)*(6000000/4000.0)));
   594     077B  30C3               	movlw	195
   595     077C  00F4               	movwf	??_initi+1
   596     077D  30CD               	movlw	205
   597     077E  00F3               	movwf	??_initi
   598     077F                     u67:
   599     077F  0BF3               	decfsz	??_initi,f
   600     0780  2F7F               	goto	u67
   601     0781  0BF4               	decfsz	??_initi+1,f
   602     0782  2F7F               	goto	u67
   603     0783                     l661:
   604                           
   605                           ;LCD_DISLPAY.c: 53: Lcd_command(0x0C);
   606     0783  300C               	movlw	12
   607     0784  120A  118A  26FA  120A  118A  	fcall	_Lcd_command
   608     0789                     l663:
   609                           
   610                           ;LCD_DISLPAY.c: 54: _delay((unsigned long)((100)*(6000000/4000.0)));
   611     0789  30C3               	movlw	195
   612     078A  00F4               	movwf	??_initi+1
   613     078B  30CD               	movlw	205
   614     078C  00F3               	movwf	??_initi
   615     078D                     u77:
   616     078D  0BF3               	decfsz	??_initi,f
   617     078E  2F8D               	goto	u77
   618     078F  0BF4               	decfsz	??_initi+1,f
   619     0790  2F8D               	goto	u77
   620     0791                     l37:
   621     0791  0008               	return
   622     0792                     __end_of_initi:
   623                           
   624                           	psect	text2
   625     06FA                     __ptext2:	
   626 ;; *************** function _Lcd_command *****************
   627 ;; Defined at:
   628 ;;		line 57 in file "LCD_DISLPAY.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;  i               1    wreg     unsigned char 
   631 ;; Auto vars:     Size  Location     Type
   632 ;;  i               1    2[COMMON] unsigned char 
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		wreg, status,2, status,0, btemp+1
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   642 ;;      Params:         0       0       0       0       0
   643 ;;      Locals:         1       0       0       0       0
   644 ;;      Temps:          2       0       0       0       0
   645 ;;      Totals:         3       0       0       0       0
   646 ;;Total ram usage:        3 bytes
   647 ;; Hardware stack levels used: 1
   648 ;; This function calls:
   649 ;;		Nothing
   650 ;; This function is called by:
   651 ;;		_main
   652 ;;		_initi
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656     06FA                     _Lcd_command:	
   657                           ;psect for function _Lcd_command
   658                           
   659                           
   660                           ;incstack = 0
   661                           ; Regs used in _Lcd_command: [wreg+status,2+status,0+btemp+1]
   662                           ;Lcd_command@i stored from wreg
   663     06FA  00F2               	movwf	Lcd_command@i
   664     06FB                     l635:
   665                           
   666                           ;LCD_DISLPAY.c: 58:     PORTC &=~0x08;
   667     06FB  30F7               	movlw	247
   668     06FC  00FF               	movwf	btemp+1
   669     06FD  087F               	movf	btemp+1,w
   670     06FE  1283               	bcf	3,5	;RP0=0, select bank0
   671     06FF  1303               	bcf	3,6	;RP1=0, select bank0
   672     0700  0587               	andwf	7,f	;volatile
   673     0701                     l637:
   674                           
   675                           ;LCD_DISLPAY.c: 59:     PORTD=i;
   676     0701  0872               	movf	Lcd_command@i,w
   677     0702  0088               	movwf	8	;volatile
   678     0703                     l639:
   679                           
   680                           ;LCD_DISLPAY.c: 60:     PORTC|=0x01;
   681     0703  1407               	bsf	7,0	;volatile
   682     0704                     l641:
   683                           
   684                           ;LCD_DISLPAY.c: 61:     PORTC &=~0x01;
   685     0704  30FE               	movlw	254
   686     0705  00FF               	movwf	btemp+1
   687     0706  087F               	movf	btemp+1,w
   688     0707  0587               	andwf	7,f	;volatile
   689                           
   690                           ;LCD_DISLPAY.c: 62:     _delay((unsigned long)((100)*(6000000/4000.0)));
   691     0708  30C3               	movlw	195
   692     0709  00F1               	movwf	??_Lcd_command+1
   693     070A  30CD               	movlw	205
   694     070B  00F0               	movwf	??_Lcd_command
   695     070C                     u87:
   696     070C  0BF0               	decfsz	??_Lcd_command,f
   697     070D  2F0C               	goto	u87
   698     070E  0BF1               	decfsz	??_Lcd_command+1,f
   699     070F  2F0C               	goto	u87
   700     0710                     l40:
   701     0710  0008               	return
   702     0711                     __end_of_Lcd_command:
   703                           
   704                           	psect	text3
   705     06E6                     __ptext3:	
   706 ;; *************** function _Lcd_data *****************
   707 ;; Defined at:
   708 ;;		line 65 in file "LCD_DISLPAY.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;  i               1    wreg     unsigned char 
   711 ;; Auto vars:     Size  Location     Type
   712 ;;  i               1    2[COMMON] unsigned char 
   713 ;; Return value:  Size  Location     Type
   714 ;;                  1    wreg      void 
   715 ;; Registers used:
   716 ;;		wreg, status,2, status,0, btemp+1
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   722 ;;      Params:         0       0       0       0       0
   723 ;;      Locals:         1       0       0       0       0
   724 ;;      Temps:          2       0       0       0       0
   725 ;;      Totals:         3       0       0       0       0
   726 ;;Total ram usage:        3 bytes
   727 ;; Hardware stack levels used: 1
   728 ;; This function calls:
   729 ;;		Nothing
   730 ;; This function is called by:
   731 ;;		_main
   732 ;; This function uses a non-reentrant model
   733 ;;
   734                           
   735     06E6                     _Lcd_data:	
   736                           ;psect for function _Lcd_data
   737                           
   738                           
   739                           ;incstack = 0
   740                           ; Regs used in _Lcd_data: [wreg+status,2+status,0+btemp+1]
   741                           ;Lcd_data@i stored from wreg
   742     06E6  00F2               	movwf	Lcd_data@i
   743     06E7                     l665:
   744                           
   745                           ;LCD_DISLPAY.c: 66:     PORTC |=0x08;
   746     06E7  1283               	bcf	3,5	;RP0=0, select bank0
   747     06E8  1303               	bcf	3,6	;RP1=0, select bank0
   748     06E9  1587               	bsf	7,3	;volatile
   749     06EA                     l667:
   750                           
   751                           ;LCD_DISLPAY.c: 67:     PORTD=i;
   752     06EA  0872               	movf	Lcd_data@i,w
   753     06EB  0088               	movwf	8	;volatile
   754     06EC                     l669:
   755                           
   756                           ;LCD_DISLPAY.c: 68:     PORTC|=0x01;
   757     06EC  1407               	bsf	7,0	;volatile
   758     06ED                     l671:
   759                           
   760                           ;LCD_DISLPAY.c: 69:     PORTC&=~0x01;
   761     06ED  30FE               	movlw	254
   762     06EE  00FF               	movwf	btemp+1
   763     06EF  087F               	movf	btemp+1,w
   764     06F0  0587               	andwf	7,f	;volatile
   765     06F1                     l673:
   766                           
   767                           ;LCD_DISLPAY.c: 70:     _delay((unsigned long)((100)*(6000000/4000.0)));
   768     06F1  30C3               	movlw	195
   769     06F2  00F1               	movwf	??_Lcd_data+1
   770     06F3  30CD               	movlw	205
   771     06F4  00F0               	movwf	??_Lcd_data
   772     06F5                     u97:
   773     06F5  0BF0               	decfsz	??_Lcd_data,f
   774     06F6  2EF5               	goto	u97
   775     06F7  0BF1               	decfsz	??_Lcd_data+1,f
   776     06F8  2EF5               	goto	u97
   777     06F9                     l43:
   778     06F9  0008               	return
   779     06FA                     __end_of_Lcd_data:
   780     007E                     btemp	set	126	;btemp
   781     007E                     wtemp0	set	126
   782                           
   783                           	psect	config
   784                           
   785                           ;Config register CONFIG @ 0x2007
   786                           ;	Oscillator Selection bits
   787                           ;	FOSC = EXTRC, RC oscillator
   788                           ;	Watchdog Timer Enable bit
   789                           ;	WDTE = OFF, WDT disabled
   790                           ;	Power-up Timer Enable bit
   791                           ;	PWRTE = OFF, PWRT disabled
   792                           ;	Brown-out Reset Enable bit
   793                           ;	BOREN = OFF, BOR disabled
   794                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   795                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   796                           ;	Data EEPROM Memory Code Protection bit
   797                           ;	CPD = OFF, Data EEPROM code protection off
   798                           ;	Flash Program Memory Write Enable bits
   799                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   800                           ;	In-Circuit Debugger Mode bit
   801                           ;	DEBUG = 0x1, unprogrammed default
   802                           ;	Flash Program Memory Code Protection bit
   803                           ;	CP = OFF, Code protection off
   804     2007                     	org	8199
   805     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        50
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       8
    BANK0            80      0      50
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_initi
    _initi->_Lcd_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      45
                        _Lcd_command
                           _Lcd_data
                              _initi
 ---------------------------------------------------------------------------------
 (1) _initi                                                2     2      0      15
                                              3 COMMON     2     2      0
                        _Lcd_command
 ---------------------------------------------------------------------------------
 (2) _Lcd_command                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_data                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_command
   _Lcd_data
   _initi
     _Lcd_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      32       5       62.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3A      12        0.0%
ABS                  0      0      3A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Sep 24 12:59:35 2023

                      _i 0077                        _k 0075                        pc 0002  
                     l31 07E7                       l40 0710                       l43 06F9  
                     l37 0791                       u10 07BC                       u11 07BB  
                     u20 07E7                       u21 07E6                       u15 07B8  
                     u25 07E3                       u37 0755                       u47 0763  
                     u57 0771                       u67 077F                       u77 078D  
                     u87 070C                       u97 06F5                       fsr 0004  
                    l701 07DA                      l641 0704                      l635 06FB  
                    l651 075F                      l643 0743                      l637 0701  
                    l661 0783                      l653 0767                      l645 074B  
                    l671 06ED                      l639 0703                      l663 0789  
                    l655 076D                      l647 0751                      l673 06F1  
                    l665 06E7                      l657 0775                      l649 0759  
                    l667 06EA                      l659 077B                      l691 07C8  
                    l683 079F                      l675 0792                      l669 06EC  
                    l685 07A9                      l677 079D                      l687 07AF  
                    l697 07CA                      l689 07BC                      l699 07D4  
                    fsr0 0004                      indf 0000                     _main 0792  
                   _name 0020                     btemp 007E                     start 0000  
    __end_of_Lcd_command 0711                    ?_main 0070                    _PORTC 0007  
                  _PORTD 0008                    _TRISC 0087                    _TRISD 0088  
                  _initi 0743                    pclath 000A                    status 0003  
                  wtemp0 007E         __end_of_Lcd_data 06FA          __initialization 07EB  
           __end_of_main 07EB                   ??_main 0075                   ?_initi 0070  
            _Lcd_command 06FA  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 0711            __end_of_initi 0792                ?_Lcd_data 0070  
                ??_initi 0073               __pmaintext 0792               ??_Lcd_data 0070  
                __ptext1 0743                  __ptext2 06FA                  __ptext3 06E6  
   end_of_initialization 07FC             ?_Lcd_command 0070                Lcd_data@i 0072  
    start_initialization 07EB               init_fetch0 06D3              __pdataBANK0 0020  
            __pbssCOMMON 0075                ___latbits 0002                 _Lcd_data 06E6  
           Lcd_command@i 0072                 init_ram0 06D7            ??_Lcd_command 0070  
