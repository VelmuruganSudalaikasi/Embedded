

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Sep 24 12:54:31 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 22/03/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     009F                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     0006                     	;# 
   118     0007                     	;# 
   119     0008                     	;# 
   120     0009                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     0088                     	;# 
   151     0089                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171                           
   172                           	psect	idataBANK0
   173     06FC                     __pidataBANK0:
   174                           
   175                           ;initializer for _name
   176     06FC  3456               	retlw	86
   177     06FD  3445               	retlw	69
   178     06FE  344C               	retlw	76
   179     06FF  344D               	retlw	77
   180     0700  3455               	retlw	85
   181     0701  3452               	retlw	82
   182     0702  3455               	retlw	85
   183     0703  3447               	retlw	71
   184     0704  3441               	retlw	65
   185     0705  344E               	retlw	78
   186     0706  3400               	retlw	0
   187     0707  3400               	retlw	0
   188     0708  3400               	retlw	0
   189     0709  3400               	retlw	0
   190     070A  3400               	retlw	0
   191     070B  3400               	retlw	0
   192     070C  3400               	retlw	0
   193     070D  3400               	retlw	0
   194     070E  3400               	retlw	0
   195     070F  3400               	retlw	0
   196     0710  3400               	retlw	0
   197     0711  3400               	retlw	0
   198     0712  3400               	retlw	0
   199     0713  3400               	retlw	0
   200     0714  3400               	retlw	0
   201     0715  3400               	retlw	0
   202     0716  3400               	retlw	0
   203     0717  3400               	retlw	0
   204     0718  3400               	retlw	0
   205     0719  3400               	retlw	0
   206     071A  3400               	retlw	0
   207     071B  3400               	retlw	0
   208     071C  3400               	retlw	0
   209     071D  3400               	retlw	0
   210     071E  3400               	retlw	0
   211     071F  3400               	retlw	0
   212     0720  3400               	retlw	0
   213     0721  3400               	retlw	0
   214     0722  3400               	retlw	0
   215     0723  3400               	retlw	0
   216     0724  3400               	retlw	0
   217     0725  3400               	retlw	0
   218     0726  3400               	retlw	0
   219     0727  3400               	retlw	0
   220     0728  3400               	retlw	0
   221     0729  3400               	retlw	0
   222     072A  3400               	retlw	0
   223     072B  3400               	retlw	0
   224     072C  3400               	retlw	0
   225     072D  3400               	retlw	0
   226     0008                     _PORTD	set	8
   227     0007                     _PORTC	set	7
   228     0088                     _TRISD	set	136
   229     0087                     _TRISC	set	135
   230                           
   231                           	psect	cinit
   232     07EB                     start_initialization:	
   233                           ; #config settings
   234                           
   235     07EB                     __initialization:
   236                           
   237                           ; Initialize objects allocated to BANK0
   238     07EB  1383               	bcf	3,7	;select IRP bank0
   239     07EC  3052               	movlw	low (__pdataBANK0+50)
   240     07ED  00FD               	movwf	btemp+-1
   241     07EE  3006               	movlw	high __pidataBANK0
   242     07EF  00FE               	movwf	btemp
   243     07F0  30FC               	movlw	low __pidataBANK0
   244     07F1  00FF               	movwf	btemp+1
   245     07F2  3020               	movlw	low __pdataBANK0
   246     07F3  0084               	movwf	4
   247     07F4  120A  118A  26B8  120A  118A  	fcall	init_ram0
   248                           
   249                           ; Clear objects allocated to COMMON
   250     07F9  01F7               	clrf	__pbssCOMMON& (0+127)
   251     07FA  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   252     07FB  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   253     07FC                     end_of_initialization:	
   254                           ;End of C runtime variable initialization code
   255                           
   256     07FC                     __end_of__initialization:
   257     07FC  0183               	clrf	3
   258     07FD  120A  118A  2F2E   	ljmp	_main	;jump to C main() function
   259                           
   260                           	psect	bssCOMMON
   261     0077                     __pbssCOMMON:
   262     0077                     _k:
   263     0077                     	ds	2
   264     0079                     _i:
   265     0079                     	ds	1
   266                           
   267                           	psect	dataBANK0
   268     0020                     __pdataBANK0:
   269     0020                     _name:
   270     0020                     	ds	50
   271                           
   272                           	psect	inittext
   273     06B4                     init_fetch0:	
   274                           ;	Called with low address in FSR and high address in W
   275                           
   276     06B4  087E               	movf	btemp,w
   277     06B5  008A               	movwf	10
   278     06B6  087F               	movf	btemp+1,w
   279     06B7  0082               	movwf	2
   280     06B8                     init_ram0:	
   281                           ;Called with:
   282                           ;	high address of idata address in btemp 
   283                           ;	low address of idata address in btemp+1 
   284                           ;	low address of data in FSR
   285                           ;	high address + 1 of data in btemp-1
   286                           
   287     06B8  120A  118A  26B4  120A  118A  	fcall	init_fetch0
   288     06BD  0080               	movwf	0
   289     06BE  0A84               	incf	4,f
   290     06BF  0804               	movf	4,w
   291     06C0  067D               	xorwf	btemp+-1,w
   292     06C1  1903               	btfsc	3,2
   293     06C2  3400               	retlw	0
   294     06C3  0AFF               	incf	btemp+1,f
   295     06C4  1903               	btfsc	3,2
   296     06C5  0AFE               	incf	btemp,f
   297     06C6  2EB8               	goto	init_ram0
   298                           
   299                           	psect	cstackCOMMON
   300     0070                     __pcstackCOMMON:
   301     0070                     ?_initi:
   302     0070                     ?_Lcd_command:	
   303                           ; 1 bytes @ 0x0
   304                           
   305     0070                     ??_Lcd_command:	
   306                           ; 1 bytes @ 0x0
   307                           
   308     0070                     ?_Lcd_data:	
   309                           ; 1 bytes @ 0x0
   310                           
   311     0070                     ??_Lcd_data:	
   312                           ; 1 bytes @ 0x0
   313                           
   314     0070                     ?_main:	
   315                           ; 1 bytes @ 0x0
   316                           
   317                           
   318                           ; 1 bytes @ 0x0
   319     0070                     	ds	3
   320     0073                     Lcd_command@i:
   321     0073                     Lcd_data@i:	
   322                           ; 1 bytes @ 0x3
   323                           
   324                           
   325                           ; 1 bytes @ 0x3
   326     0073                     	ds	1
   327     0074                     ??_initi:
   328                           
   329                           ; 1 bytes @ 0x4
   330     0074                     	ds	3
   331     0077                     ??_main:
   332                           
   333                           	psect	maintext
   334     072E                     __pmaintext:	
   335                           ; 1 bytes @ 0x7
   336 ;;
   337 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   338 ;;
   339 ;; *************** function _main *****************
   340 ;; Defined at:
   341 ;;		line 27 in file "LCD_DISLPAY.c"
   342 ;; Parameters:    Size  Location     Type
   343 ;;		None
   344 ;; Auto vars:     Size  Location     Type
   345 ;;		None
   346 ;; Return value:  Size  Location     Type
   347 ;;                  1    wreg      void 
   348 ;; Registers used:
   349 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   350 ;; Tracked objects:
   351 ;;		On entry : B00/0
   352 ;;		On exit  : 0/0
   353 ;;		Unchanged: 0/0
   354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   355 ;;      Params:         0       0       0       0       0
   356 ;;      Locals:         0       0       0       0       0
   357 ;;      Temps:          0       0       0       0       0
   358 ;;      Totals:         0       0       0       0       0
   359 ;;Total ram usage:        0 bytes
   360 ;; Hardware stack levels required when called: 2
   361 ;; This function calls:
   362 ;;		_Lcd_command
   363 ;;		_Lcd_data
   364 ;;		_initi
   365 ;; This function is called by:
   366 ;;		Startup code after reset
   367 ;; This function uses a non-reentrant model
   368 ;;
   369                           
   370     072E                     _main:	
   371                           ;psect for function _main
   372                           
   373     072E                     l675:	
   374                           ;incstack = 0
   375                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   376                           
   377                           
   378                           ;LCD_DISLPAY.c: 28:        initi();
   379     072E  120A  118A  2787  120A  118A  	fcall	_initi
   380                           
   381                           ;LCD_DISLPAY.c: 29:      Lcd_command(0x84);
   382     0733  3084               	movlw	132
   383     0734  120A  118A  26E0  120A  118A  	fcall	_Lcd_command
   384     0739                     l677:
   385                           
   386                           ;LCD_DISLPAY.c: 30:      for(k=0;k<10;k++){
   387     0739  01F7               	clrf	_k
   388     073A  01F8               	clrf	_k+1
   389     073B                     l683:
   390                           
   391                           ;LCD_DISLPAY.c: 31:          Lcd_data(name[k]);
   392     073B  0877               	movf	_k,w
   393     073C  3E20               	addlw	(low (_name| 0))& (0+255)
   394     073D  0084               	movwf	4
   395     073E  1383               	bcf	3,7	;select IRP bank0
   396     073F  0800               	movf	0,w
   397     0740  120A  118A  26C7  120A  118A  	fcall	_Lcd_data
   398     0745                     l685:
   399                           
   400                           ;LCD_DISLPAY.c: 32:      }
   401     0745  3001               	movlw	1
   402     0746  07F7               	addwf	_k,f
   403     0747  1803               	skipnc
   404     0748  0AF8               	incf	_k+1,f
   405     0749  3000               	movlw	0
   406     074A  07F8               	addwf	_k+1,f
   407     074B                     l687:
   408     074B  0878               	movf	_k+1,w
   409     074C  3A80               	xorlw	128
   410     074D  00FF               	movwf	btemp+1
   411     074E  3080               	movlw	128
   412     074F  027F               	subwf	btemp+1,w
   413     0750  1D03               	skipz
   414     0751  2F54               	goto	u15
   415     0752  300A               	movlw	10
   416     0753  0277               	subwf	_k,w
   417     0754                     u15:
   418     0754  1C03               	skipc
   419     0755  2F57               	goto	u11
   420     0756  2F58               	goto	u10
   421     0757                     u11:
   422     0757  2F3B               	goto	l683
   423     0758                     u10:
   424     0758                     l689:
   425                           
   426                           ;LCD_DISLPAY.c: 33:      Lcd_command(0x04);
   427     0758  3004               	movlw	4
   428     0759  120A  118A  26E0  120A  118A  	fcall	_Lcd_command
   429                           
   430                           ;LCD_DISLPAY.c: 34:      Lcd_command(0xCE);
   431     075E  30CE               	movlw	206
   432     075F  120A  118A  26E0  120A  118A  	fcall	_Lcd_command
   433     0764                     l691:
   434                           
   435                           ;LCD_DISLPAY.c: 35:      for(k=0;k<10;k++){
   436     0764  01F7               	clrf	_k
   437     0765  01F8               	clrf	_k+1
   438     0766                     l697:
   439                           
   440                           ;LCD_DISLPAY.c: 36:        Lcd_data(name[k]);
   441     0766  0877               	movf	_k,w
   442     0767  3E20               	addlw	(low (_name| 0))& (0+255)
   443     0768  0084               	movwf	4
   444     0769  1383               	bcf	3,7	;select IRP bank0
   445     076A  0800               	movf	0,w
   446     076B  120A  118A  26C7  120A  118A  	fcall	_Lcd_data
   447     0770                     l699:
   448                           
   449                           ;LCD_DISLPAY.c: 37:     }
   450     0770  3001               	movlw	1
   451     0771  07F7               	addwf	_k,f
   452     0772  1803               	skipnc
   453     0773  0AF8               	incf	_k+1,f
   454     0774  3000               	movlw	0
   455     0775  07F8               	addwf	_k+1,f
   456     0776                     l701:
   457     0776  0878               	movf	_k+1,w
   458     0777  3A80               	xorlw	128
   459     0778  00FF               	movwf	btemp+1
   460     0779  3080               	movlw	128
   461     077A  027F               	subwf	btemp+1,w
   462     077B  1D03               	skipz
   463     077C  2F7F               	goto	u25
   464     077D  300A               	movlw	10
   465     077E  0277               	subwf	_k,w
   466     077F                     u25:
   467     077F  1C03               	skipc
   468     0780  2F82               	goto	u21
   469     0781  2F83               	goto	u20
   470     0782                     u21:
   471     0782  2F66               	goto	l697
   472     0783                     u20:
   473     0783                     l31:	
   474                           ;LCD_DISLPAY.c: 38:     while(1);
   475                           
   476     0783  2F83               	goto	l31
   477     0784  120A  118A  2800   	ljmp	start
   478     0787                     __end_of_main:
   479                           
   480                           	psect	text1
   481     0787                     __ptext1:	
   482 ;; *************** function _initi *****************
   483 ;; Defined at:
   484 ;;		line 40 in file "LCD_DISLPAY.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   498 ;;      Params:         0       0       0       0       0
   499 ;;      Locals:         0       0       0       0       0
   500 ;;      Temps:          3       0       0       0       0
   501 ;;      Totals:         3       0       0       0       0
   502 ;;Total ram usage:        3 bytes
   503 ;; Hardware stack levels used: 1
   504 ;; Hardware stack levels required when called: 1
   505 ;; This function calls:
   506 ;;		_Lcd_command
   507 ;; This function is called by:
   508 ;;		_main
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512     0787                     _initi:	
   513                           ;psect for function _initi
   514                           
   515     0787                     l643:	
   516                           ;incstack = 0
   517                           ; Regs used in _initi: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   518                           
   519                           
   520                           ;LCD_DISLPAY.c: 41:     TRISC=0x00;
   521     0787  1683               	bsf	3,5	;RP0=1, select bank1
   522     0788  1303               	bcf	3,6	;RP1=0, select bank1
   523     0789  0187               	clrf	7	;volatile
   524                           
   525                           ;LCD_DISLPAY.c: 42:     TRISD=0x00;
   526     078A  0188               	clrf	8	;volatile
   527     078B                     l645:
   528                           
   529                           ;LCD_DISLPAY.c: 43: Lcd_command(0x38);
   530     078B  3038               	movlw	56
   531     078C  120A  118A  26E0  120A  118A  	fcall	_Lcd_command
   532     0791                     l647:
   533                           
   534                           ;LCD_DISLPAY.c: 44: _delay((unsigned long)((1000)*(6000000/4000.0)));
   535     0791  3008               	movlw	8
   536     0792  00F6               	movwf	??_initi+2
   537     0793  309D               	movlw	157
   538     0794  00F5               	movwf	??_initi+1
   539     0795  3005               	movlw	5
   540     0796  00F4               	movwf	??_initi
   541     0797                     u37:
   542     0797  0BF4               	decfsz	??_initi,f
   543     0798  2F97               	goto	u37
   544     0799  0BF5               	decfsz	??_initi+1,f
   545     079A  2F97               	goto	u37
   546     079B  0BF6               	decfsz	??_initi+2,f
   547     079C  2F97               	goto	u37
   548     079D  2F9E               	nop2
   549     079E                     l649:
   550                           
   551                           ;LCD_DISLPAY.c: 45: Lcd_command(0x08);
   552     079E  3008               	movlw	8
   553     079F  120A  118A  26E0  120A  118A  	fcall	_Lcd_command
   554     07A4                     l651:
   555                           
   556                           ;LCD_DISLPAY.c: 46: _delay((unsigned long)((1000)*(6000000/4000.0)));
   557     07A4  3008               	movlw	8
   558     07A5  00F6               	movwf	??_initi+2
   559     07A6  309D               	movlw	157
   560     07A7  00F5               	movwf	??_initi+1
   561     07A8  3005               	movlw	5
   562     07A9  00F4               	movwf	??_initi
   563     07AA                     u47:
   564     07AA  0BF4               	decfsz	??_initi,f
   565     07AB  2FAA               	goto	u47
   566     07AC  0BF5               	decfsz	??_initi+1,f
   567     07AD  2FAA               	goto	u47
   568     07AE  0BF6               	decfsz	??_initi+2,f
   569     07AF  2FAA               	goto	u47
   570     07B0  2FB1               	nop2
   571     07B1                     l653:
   572                           
   573                           ;LCD_DISLPAY.c: 47: Lcd_command(0x01);
   574     07B1  3001               	movlw	1
   575     07B2  120A  118A  26E0  120A  118A  	fcall	_Lcd_command
   576     07B7                     l655:
   577                           
   578                           ;LCD_DISLPAY.c: 48: _delay((unsigned long)((1000)*(6000000/4000.0)));
   579     07B7  3008               	movlw	8
   580     07B8  00F6               	movwf	??_initi+2
   581     07B9  309D               	movlw	157
   582     07BA  00F5               	movwf	??_initi+1
   583     07BB  3005               	movlw	5
   584     07BC  00F4               	movwf	??_initi
   585     07BD                     u57:
   586     07BD  0BF4               	decfsz	??_initi,f
   587     07BE  2FBD               	goto	u57
   588     07BF  0BF5               	decfsz	??_initi+1,f
   589     07C0  2FBD               	goto	u57
   590     07C1  0BF6               	decfsz	??_initi+2,f
   591     07C2  2FBD               	goto	u57
   592     07C3  2FC4               	nop2
   593     07C4                     l657:
   594                           
   595                           ;LCD_DISLPAY.c: 49: Lcd_command(0x06);
   596     07C4  3006               	movlw	6
   597     07C5  120A  118A  26E0  120A  118A  	fcall	_Lcd_command
   598     07CA                     l659:
   599                           
   600                           ;LCD_DISLPAY.c: 50: _delay((unsigned long)((1000)*(6000000/4000.0)));
   601     07CA  3008               	movlw	8
   602     07CB  00F6               	movwf	??_initi+2
   603     07CC  309D               	movlw	157
   604     07CD  00F5               	movwf	??_initi+1
   605     07CE  3005               	movlw	5
   606     07CF  00F4               	movwf	??_initi
   607     07D0                     u67:
   608     07D0  0BF4               	decfsz	??_initi,f
   609     07D1  2FD0               	goto	u67
   610     07D2  0BF5               	decfsz	??_initi+1,f
   611     07D3  2FD0               	goto	u67
   612     07D4  0BF6               	decfsz	??_initi+2,f
   613     07D5  2FD0               	goto	u67
   614     07D6  2FD7               	nop2
   615     07D7                     l661:
   616                           
   617                           ;LCD_DISLPAY.c: 51: Lcd_command(0x0C);
   618     07D7  300C               	movlw	12
   619     07D8  120A  118A  26E0  120A  118A  	fcall	_Lcd_command
   620     07DD                     l663:
   621                           
   622                           ;LCD_DISLPAY.c: 52: _delay((unsigned long)((1000)*(6000000/4000.0)));
   623     07DD  3008               	movlw	8
   624     07DE  00F6               	movwf	??_initi+2
   625     07DF  309D               	movlw	157
   626     07E0  00F5               	movwf	??_initi+1
   627     07E1  3005               	movlw	5
   628     07E2  00F4               	movwf	??_initi
   629     07E3                     u77:
   630     07E3  0BF4               	decfsz	??_initi,f
   631     07E4  2FE3               	goto	u77
   632     07E5  0BF5               	decfsz	??_initi+1,f
   633     07E6  2FE3               	goto	u77
   634     07E7  0BF6               	decfsz	??_initi+2,f
   635     07E8  2FE3               	goto	u77
   636     07E9  2FEA               	nop2
   637     07EA                     l37:
   638     07EA  0008               	return
   639     07EB                     __end_of_initi:
   640                           
   641                           	psect	text2
   642     06E0                     __ptext2:	
   643 ;; *************** function _Lcd_command *****************
   644 ;; Defined at:
   645 ;;		line 55 in file "LCD_DISLPAY.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;  i               1    wreg     unsigned char 
   648 ;; Auto vars:     Size  Location     Type
   649 ;;  i               1    3[COMMON] unsigned char 
   650 ;; Return value:  Size  Location     Type
   651 ;;                  1    wreg      void 
   652 ;; Registers used:
   653 ;;		wreg, status,2, status,0, btemp+1
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   659 ;;      Params:         0       0       0       0       0
   660 ;;      Locals:         1       0       0       0       0
   661 ;;      Temps:          3       0       0       0       0
   662 ;;      Totals:         4       0       0       0       0
   663 ;;Total ram usage:        4 bytes
   664 ;; Hardware stack levels used: 1
   665 ;; This function calls:
   666 ;;		Nothing
   667 ;; This function is called by:
   668 ;;		_main
   669 ;;		_initi
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673     06E0                     _Lcd_command:	
   674                           ;psect for function _Lcd_command
   675                           
   676                           
   677                           ;incstack = 0
   678                           ; Regs used in _Lcd_command: [wreg+status,2+status,0+btemp+1]
   679                           ;Lcd_command@i stored from wreg
   680     06E0  00F3               	movwf	Lcd_command@i
   681     06E1                     l635:
   682                           
   683                           ;LCD_DISLPAY.c: 56:     PORTC &=~0x08;
   684     06E1  30F7               	movlw	247
   685     06E2  00FF               	movwf	btemp+1
   686     06E3  087F               	movf	btemp+1,w
   687     06E4  1283               	bcf	3,5	;RP0=0, select bank0
   688     06E5  1303               	bcf	3,6	;RP1=0, select bank0
   689     06E6  0587               	andwf	7,f	;volatile
   690     06E7                     l637:
   691                           
   692                           ;LCD_DISLPAY.c: 57:     PORTD=i;
   693     06E7  0873               	movf	Lcd_command@i,w
   694     06E8  0088               	movwf	8	;volatile
   695     06E9                     l639:
   696                           
   697                           ;LCD_DISLPAY.c: 58:     PORTC|=0x01;
   698     06E9  1407               	bsf	7,0	;volatile
   699     06EA                     l641:
   700                           
   701                           ;LCD_DISLPAY.c: 59:     PORTC &=~0x01;
   702     06EA  30FE               	movlw	254
   703     06EB  00FF               	movwf	btemp+1
   704     06EC  087F               	movf	btemp+1,w
   705     06ED  0587               	andwf	7,f	;volatile
   706                           
   707                           ;LCD_DISLPAY.c: 60:     _delay((unsigned long)((1000)*(6000000/4000.0)));
   708     06EE  3008               	movlw	8
   709     06EF  00F2               	movwf	??_Lcd_command+2
   710     06F0  309D               	movlw	157
   711     06F1  00F1               	movwf	??_Lcd_command+1
   712     06F2  3005               	movlw	5
   713     06F3  00F0               	movwf	??_Lcd_command
   714     06F4                     u87:
   715     06F4  0BF0               	decfsz	??_Lcd_command,f
   716     06F5  2EF4               	goto	u87
   717     06F6  0BF1               	decfsz	??_Lcd_command+1,f
   718     06F7  2EF4               	goto	u87
   719     06F8  0BF2               	decfsz	??_Lcd_command+2,f
   720     06F9  2EF4               	goto	u87
   721     06FA  2EFB               	nop2
   722     06FB                     l40:
   723     06FB  0008               	return
   724     06FC                     __end_of_Lcd_command:
   725                           
   726                           	psect	text3
   727     06C7                     __ptext3:	
   728 ;; *************** function _Lcd_data *****************
   729 ;; Defined at:
   730 ;;		line 63 in file "LCD_DISLPAY.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;  i               1    wreg     unsigned char 
   733 ;; Auto vars:     Size  Location     Type
   734 ;;  i               1    3[COMMON] unsigned char 
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg, status,2, status,0, btemp+1
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   744 ;;      Params:         0       0       0       0       0
   745 ;;      Locals:         1       0       0       0       0
   746 ;;      Temps:          3       0       0       0       0
   747 ;;      Totals:         4       0       0       0       0
   748 ;;Total ram usage:        4 bytes
   749 ;; Hardware stack levels used: 1
   750 ;; This function calls:
   751 ;;		Nothing
   752 ;; This function is called by:
   753 ;;		_main
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757     06C7                     _Lcd_data:	
   758                           ;psect for function _Lcd_data
   759                           
   760                           
   761                           ;incstack = 0
   762                           ; Regs used in _Lcd_data: [wreg+status,2+status,0+btemp+1]
   763                           ;Lcd_data@i stored from wreg
   764     06C7  00F3               	movwf	Lcd_data@i
   765     06C8                     l665:
   766                           
   767                           ;LCD_DISLPAY.c: 64:     PORTC |=0x08;
   768     06C8  1283               	bcf	3,5	;RP0=0, select bank0
   769     06C9  1303               	bcf	3,6	;RP1=0, select bank0
   770     06CA  1587               	bsf	7,3	;volatile
   771     06CB                     l667:
   772                           
   773                           ;LCD_DISLPAY.c: 65:     PORTD=i;
   774     06CB  0873               	movf	Lcd_data@i,w
   775     06CC  0088               	movwf	8	;volatile
   776     06CD                     l669:
   777                           
   778                           ;LCD_DISLPAY.c: 66:     PORTC|=0x01;
   779     06CD  1407               	bsf	7,0	;volatile
   780     06CE                     l671:
   781                           
   782                           ;LCD_DISLPAY.c: 67:     PORTC&=~0x01;
   783     06CE  30FE               	movlw	254
   784     06CF  00FF               	movwf	btemp+1
   785     06D0  087F               	movf	btemp+1,w
   786     06D1  0587               	andwf	7,f	;volatile
   787     06D2                     l673:
   788                           
   789                           ;LCD_DISLPAY.c: 68:     _delay((unsigned long)((10000)*(6000000/4000.0)));
   790     06D2  304D               	movlw	77
   791     06D3  00F2               	movwf	??_Lcd_data+2
   792     06D4  3019               	movlw	25
   793     06D5  00F1               	movwf	??_Lcd_data+1
   794     06D6  304F               	movlw	79
   795     06D7  00F0               	movwf	??_Lcd_data
   796     06D8                     u97:
   797     06D8  0BF0               	decfsz	??_Lcd_data,f
   798     06D9  2ED8               	goto	u97
   799     06DA  0BF1               	decfsz	??_Lcd_data+1,f
   800     06DB  2ED8               	goto	u97
   801     06DC  0BF2               	decfsz	??_Lcd_data+2,f
   802     06DD  2ED8               	goto	u97
   803     06DE  2EDF               	nop2
   804     06DF                     l43:
   805     06DF  0008               	return
   806     06E0                     __end_of_Lcd_data:
   807     007E                     btemp	set	126	;btemp
   808     007E                     wtemp0	set	126
   809                           
   810                           	psect	config
   811                           
   812                           ;Config register CONFIG @ 0x2007
   813                           ;	Oscillator Selection bits
   814                           ;	FOSC = EXTRC, RC oscillator
   815                           ;	Watchdog Timer Enable bit
   816                           ;	WDTE = OFF, WDT disabled
   817                           ;	Power-up Timer Enable bit
   818                           ;	PWRTE = OFF, PWRT disabled
   819                           ;	Brown-out Reset Enable bit
   820                           ;	BOREN = OFF, BOR disabled
   821                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   822                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   823                           ;	Data EEPROM Memory Code Protection bit
   824                           ;	CPD = OFF, Data EEPROM code protection off
   825                           ;	Flash Program Memory Write Enable bits
   826                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   827                           ;	In-Circuit Debugger Mode bit
   828                           ;	DEBUG = 0x1, unprogrammed default
   829                           ;	Flash Program Memory Code Protection bit
   830                           ;	CP = OFF, Code protection off
   831     2007                     	org	8199
   832     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        50
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      0      50
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_initi
    _initi->_Lcd_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      45
                        _Lcd_command
                           _Lcd_data
                              _initi
 ---------------------------------------------------------------------------------
 (1) _initi                                                3     3      0      15
                                              4 COMMON     3     3      0
                        _Lcd_command
 ---------------------------------------------------------------------------------
 (2) _Lcd_command                                          4     4      0      15
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_data                                             4     4      0      15
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_command
   _Lcd_data
   _initi
     _Lcd_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      32       5       62.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3C      12        0.0%
ABS                  0      0      3C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Sep 24 12:54:31 2023

                      _i 0079                        _k 0077                        pc 0002  
                     l31 0783                       l40 06FB                       l43 06DF  
                     l37 07EA                       u10 0758                       u11 0757  
                     u20 0783                       u21 0782                       u15 0754  
                     u25 077F                       u37 0797                       u47 07AA  
                     u57 07BD                       u67 07D0                       u77 07E3  
                     u87 06F4                       u97 06D8                       fsr 0004  
                    l701 0776                      l641 06EA                      l635 06E1  
                    l651 07A4                      l643 0787                      l637 06E7  
                    l661 07D7                      l653 07B1                      l645 078B  
                    l671 06CE                      l639 06E9                      l663 07DD  
                    l655 07B7                      l647 0791                      l673 06D2  
                    l665 06C8                      l657 07C4                      l649 079E  
                    l667 06CB                      l659 07CA                      l691 0764  
                    l683 073B                      l675 072E                      l669 06CD  
                    l685 0745                      l677 0739                      l687 074B  
                    l697 0766                      l689 0758                      l699 0770  
                    fsr0 0004                      indf 0000                     _main 072E  
                   _name 0020                     btemp 007E                     start 0000  
    __end_of_Lcd_command 06FC                    ?_main 0070                    _PORTC 0007  
                  _PORTD 0008                    _TRISC 0087                    _TRISD 0088  
                  _initi 0787                    pclath 000A                    status 0003  
                  wtemp0 007E         __end_of_Lcd_data 06E0          __initialization 07EB  
           __end_of_main 0787                   ??_main 0077                   ?_initi 0070  
            _Lcd_command 06E0  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 06FC            __end_of_initi 07EB                ?_Lcd_data 0070  
                ??_initi 0074               __pmaintext 072E               ??_Lcd_data 0070  
                __ptext1 0787                  __ptext2 06E0                  __ptext3 06C7  
   end_of_initialization 07FC             ?_Lcd_command 0070                Lcd_data@i 0073  
    start_initialization 07EB               init_fetch0 06B4              __pdataBANK0 0020  
            __pbssCOMMON 0077                ___latbits 0002                 _Lcd_data 06C7  
           Lcd_command@i 0073                 init_ram0 06B8            ??_Lcd_command 0070  
