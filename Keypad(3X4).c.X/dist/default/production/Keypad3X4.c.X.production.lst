

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Nov 15 11:23:16 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Generated 22/03/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0094                     	;# 
   101     0098                     	;# 
   102     0099                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     010E                     	;# 
   110     010F                     	;# 
   111     018C                     	;# 
   112     018D                     	;# 
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     000E                     	;# 
   128     000E                     	;# 
   129     000F                     	;# 
   130     0010                     	;# 
   131     0011                     	;# 
   132     0012                     	;# 
   133     0013                     	;# 
   134     0014                     	;# 
   135     0015                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0017                     	;# 
   139     0018                     	;# 
   140     0019                     	;# 
   141     001A                     	;# 
   142     001B                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001D                     	;# 
   146     001E                     	;# 
   147     001F                     	;# 
   148     0081                     	;# 
   149     0085                     	;# 
   150     0086                     	;# 
   151     0087                     	;# 
   152     0088                     	;# 
   153     0089                     	;# 
   154     008C                     	;# 
   155     008D                     	;# 
   156     008E                     	;# 
   157     0091                     	;# 
   158     0092                     	;# 
   159     0093                     	;# 
   160     0094                     	;# 
   161     0098                     	;# 
   162     0099                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     009F                     	;# 
   167     010C                     	;# 
   168     010D                     	;# 
   169     010E                     	;# 
   170     010F                     	;# 
   171     018C                     	;# 
   172     018D                     	;# 
   173     0000                     	;# 
   174     0001                     	;# 
   175     0002                     	;# 
   176     0003                     	;# 
   177     0004                     	;# 
   178     0005                     	;# 
   179     0006                     	;# 
   180     0007                     	;# 
   181     0008                     	;# 
   182     0009                     	;# 
   183     000A                     	;# 
   184     000B                     	;# 
   185     000C                     	;# 
   186     000D                     	;# 
   187     000E                     	;# 
   188     000E                     	;# 
   189     000F                     	;# 
   190     0010                     	;# 
   191     0011                     	;# 
   192     0012                     	;# 
   193     0013                     	;# 
   194     0014                     	;# 
   195     0015                     	;# 
   196     0015                     	;# 
   197     0016                     	;# 
   198     0017                     	;# 
   199     0018                     	;# 
   200     0019                     	;# 
   201     001A                     	;# 
   202     001B                     	;# 
   203     001B                     	;# 
   204     001C                     	;# 
   205     001D                     	;# 
   206     001E                     	;# 
   207     001F                     	;# 
   208     0081                     	;# 
   209     0085                     	;# 
   210     0086                     	;# 
   211     0087                     	;# 
   212     0088                     	;# 
   213     0089                     	;# 
   214     008C                     	;# 
   215     008D                     	;# 
   216     008E                     	;# 
   217     0091                     	;# 
   218     0092                     	;# 
   219     0093                     	;# 
   220     0094                     	;# 
   221     0098                     	;# 
   222     0099                     	;# 
   223     009C                     	;# 
   224     009D                     	;# 
   225     009E                     	;# 
   226     009F                     	;# 
   227     010C                     	;# 
   228     010D                     	;# 
   229     010E                     	;# 
   230     010F                     	;# 
   231     018C                     	;# 
   232     018D                     	;# 
   233                           
   234                           	psect	idataBANK0
   235     0656                     __pidataBANK0:
   236                           
   237                           ;initializer for _result
   238     0656  343A               	retlw	58
   239     0657  3450               	retlw	80
   240     0658  3452               	retlw	82
   241     0659  3445               	retlw	69
   242     065A  3453               	retlw	83
   243     065B  3453               	retlw	83
   244     065C  3445               	retlw	69
   245     065D  3444               	retlw	68
   246     065E  3400               	retlw	0
   247     0007                     _PORTC	set	7
   248     0006                     _PORTB	set	6
   249     0008                     _PORTD	set	8
   250     0031                     _RB1	set	49
   251     0030                     _RB0	set	48
   252     0032                     _RB2	set	50
   253     0086                     _TRISB	set	134
   254     0088                     _TRISD	set	136
   255     0087                     _TRISC	set	135
   256                           
   257                           	psect	cinit
   258     07ED                     start_initialization:	
   259                           ; #config settings
   260                           
   261     07ED                     __initialization:
   262                           
   263                           ; Initialize objects allocated to BANK0
   264     07ED  1383               	bcf	3,7	;select IRP bank0
   265     07EE  3029               	movlw	low (__pdataBANK0+9)
   266     07EF  00FD               	movwf	btemp+-1
   267     07F0  3006               	movlw	high __pidataBANK0
   268     07F1  00FE               	movwf	btemp
   269     07F2  3056               	movlw	low __pidataBANK0
   270     07F3  00FF               	movwf	btemp+1
   271     07F4  3020               	movlw	low __pdataBANK0
   272     07F5  0084               	movwf	4
   273     07F6  120A  118A  2682  120A  118A  	fcall	init_ram0
   274                           
   275                           ; Clear objects allocated to COMMON
   276     07FB  01F6               	clrf	__pbssCOMMON& (0+127)
   277     07FC                     end_of_initialization:	
   278                           ;End of C runtime variable initialization code
   279                           
   280     07FC                     __end_of__initialization:
   281     07FC  0183               	clrf	3
   282     07FD  120A  118A  2E6B   	ljmp	_main	;jump to C main() function
   283                           
   284                           	psect	bssCOMMON
   285     0076                     __pbssCOMMON:
   286     0076                     _temp:
   287     0076                     	ds	1
   288                           
   289                           	psect	dataBANK0
   290     0020                     __pdataBANK0:
   291     0020                     _result:
   292     0020                     	ds	9
   293                           
   294                           	psect	inittext
   295     067E                     init_fetch0:	
   296                           ;	Called with low address in FSR and high address in W
   297                           
   298     067E  087E               	movf	btemp,w
   299     067F  008A               	movwf	10
   300     0680  087F               	movf	btemp+1,w
   301     0681  0082               	movwf	2
   302     0682                     init_ram0:	
   303                           ;Called with:
   304                           ;	high address of idata address in btemp 
   305                           ;	low address of idata address in btemp+1 
   306                           ;	low address of data in FSR
   307                           ;	high address + 1 of data in btemp-1
   308                           
   309     0682  120A  118A  267E  120A  118A  	fcall	init_fetch0
   310     0687  0080               	movwf	0
   311     0688  0A84               	incf	4,f
   312     0689  0804               	movf	4,w
   313     068A  067D               	xorwf	btemp+-1,w
   314     068B  1903               	btfsc	3,2
   315     068C  3400               	retlw	0
   316     068D  0AFF               	incf	btemp+1,f
   317     068E  1903               	btfsc	3,2
   318     068F  0AFE               	incf	btemp,f
   319     0690  2E82               	goto	init_ram0
   320                           
   321                           	psect	cstackCOMMON
   322     0070                     __pcstackCOMMON:
   323     0070                     ?_Lcd_Configuration:
   324     0070                     ??_Lcd_Configuration:	
   325                           ; 1 bytes @ 0x0
   326                           
   327     0070                     ?_Configuration:	
   328                           ; 1 bytes @ 0x0
   329                           
   330     0070                     ?_Keypad_Scanning:	
   331                           ; 1 bytes @ 0x0
   332                           
   333     0070                     ?_Lcd_Cmd:	
   334                           ; 1 bytes @ 0x0
   335                           
   336     0070                     ??_Lcd_Cmd:	
   337                           ; 1 bytes @ 0x0
   338                           
   339     0070                     ?_Lcd_Data:	
   340                           ; 1 bytes @ 0x0
   341                           
   342     0070                     ??_Lcd_Data:	
   343                           ; 1 bytes @ 0x0
   344                           
   345     0070                     ?_main:	
   346                           ; 1 bytes @ 0x0
   347                           
   348                           
   349                           ; 1 bytes @ 0x0
   350     0070                     	ds	2
   351     0072                     Lcd_Data@data:
   352     0072                     Lcd_Cmd@cmd:	
   353                           ; 1 bytes @ 0x2
   354                           
   355                           
   356                           ; 1 bytes @ 0x2
   357     0072                     	ds	1
   358     0073                     ??_Configuration:
   359     0073                     ??_Keypad_Scanning:	
   360                           ; 1 bytes @ 0x3
   361                           
   362                           
   363                           ; 1 bytes @ 0x3
   364     0073                     	ds	2
   365     0075                     Configuration@i:
   366                           
   367                           ; 1 bytes @ 0x5
   368     0075                     	ds	1
   369     0076                     ??_main:
   370                           
   371                           	psect	maintext
   372     066B                     __pmaintext:	
   373                           ; 1 bytes @ 0x6
   374 ;;
   375 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   376 ;;
   377 ;; *************** function _main *****************
   378 ;; Defined at:
   379 ;;		line 41 in file "Keypad.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;		None
   382 ;; Auto vars:     Size  Location     Type
   383 ;;		None
   384 ;; Return value:  Size  Location     Type
   385 ;;                  1    wreg      void 
   386 ;; Registers used:
   387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   388 ;; Tracked objects:
   389 ;;		On entry : B00/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   393 ;;      Params:         0       0       0       0       0
   394 ;;      Locals:         0       0       0       0       0
   395 ;;      Temps:          0       0       0       0       0
   396 ;;      Totals:         0       0       0       0       0
   397 ;;Total ram usage:        0 bytes
   398 ;; Hardware stack levels required when called: 2
   399 ;; This function calls:
   400 ;;		_Configuration
   401 ;;		_Keypad_Scanning
   402 ;;		_Lcd_Configuration
   403 ;; This function is called by:
   404 ;;		Startup code after reset
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408     066B                     _main:	
   409                           ;psect for function _main
   410                           
   411     066B                     l989:	
   412                           ;incstack = 0
   413                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   414                           
   415                           
   416                           ;Keypad.c: 43:     Lcd_Configuration();
   417     066B  120A  118A  265F  120A  118A  	fcall	_Lcd_Configuration
   418     0670                     l991:
   419                           
   420                           ;Keypad.c: 45:     Configuration();
   421     0670  120A  118A  26BC  120A  118A  	fcall	_Configuration
   422     0675                     l993:
   423                           
   424                           ;Keypad.c: 49:         Keypad_Scanning();
   425     0675  120A  118A  2727  120A  118A  	fcall	_Keypad_Scanning
   426     067A  2E75               	goto	l993
   427     067B  120A  118A  2800   	ljmp	start
   428     067E                     __end_of_main:
   429                           
   430                           	psect	text1
   431     065F                     __ptext1:	
   432 ;; *************** function _Lcd_Configuration *****************
   433 ;; Defined at:
   434 ;;		line 4 in file "LCD.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;		None
   437 ;; Auto vars:     Size  Location     Type
   438 ;;		None
   439 ;; Return value:  Size  Location     Type
   440 ;;                  1    wreg      void 
   441 ;; Registers used:
   442 ;;		wreg, status,2
   443 ;; Tracked objects:
   444 ;;		On entry : 0/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   448 ;;      Params:         0       0       0       0       0
   449 ;;      Locals:         0       0       0       0       0
   450 ;;      Temps:          0       0       0       0       0
   451 ;;      Totals:         0       0       0       0       0
   452 ;;Total ram usage:        0 bytes
   453 ;; Hardware stack levels used: 1
   454 ;; This function calls:
   455 ;;		Nothing
   456 ;; This function is called by:
   457 ;;		_main
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461     065F                     _Lcd_Configuration:	
   462                           ;psect for function _Lcd_Configuration
   463                           
   464     065F                     l697:	
   465                           ;incstack = 0
   466                           ; Regs used in _Lcd_Configuration: [wreg+status,2]
   467                           
   468                           
   469                           ;LCD.c: 6:     TRISD=0x00;
   470     065F  1683               	bsf	3,5	;RP0=1, select bank1
   471     0660  1303               	bcf	3,6	;RP1=0, select bank1
   472     0661  0188               	clrf	8	;volatile
   473                           
   474                           ;LCD.c: 8:     PORTD=0x00;
   475     0662  1283               	bcf	3,5	;RP0=0, select bank0
   476     0663  1303               	bcf	3,6	;RP1=0, select bank0
   477     0664  0188               	clrf	8	;volatile
   478     0665                     l699:
   479                           
   480                           ;LCD.c: 10:     TRISC=(TRISC&0x3F);
   481     0665  1683               	bsf	3,5	;RP0=1, select bank1
   482     0666  1303               	bcf	3,6	;RP1=0, select bank1
   483     0667  0807               	movf	7,w	;volatile
   484     0668  393F               	andlw	63
   485     0669  0087               	movwf	7	;volatile
   486     066A                     l81:
   487     066A  0008               	return
   488     066B                     __end_of_Lcd_Configuration:
   489                           
   490                           	psect	text2
   491     0727                     __ptext2:	
   492 ;; *************** function _Keypad_Scanning *****************
   493 ;; Defined at:
   494 ;;		line 99 in file "Keypad.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;		None
   497 ;; Auto vars:     Size  Location     Type
   498 ;;		None
   499 ;; Return value:  Size  Location     Type
   500 ;;                  1    wreg      void 
   501 ;; Registers used:
   502 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   508 ;;      Params:         0       0       0       0       0
   509 ;;      Locals:         0       0       0       0       0
   510 ;;      Temps:          2       0       0       0       0
   511 ;;      Totals:         2       0       0       0       0
   512 ;;Total ram usage:        2 bytes
   513 ;; Hardware stack levels used: 1
   514 ;; Hardware stack levels required when called: 1
   515 ;; This function calls:
   516 ;;		_Lcd_Cmd
   517 ;;		_Lcd_Data
   518 ;; This function is called by:
   519 ;;		_main
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523     0727                     _Keypad_Scanning:	
   524                           ;psect for function _Keypad_Scanning
   525                           
   526     0727                     l927:	
   527                           ;incstack = 0
   528                           ; Regs used in _Keypad_Scanning: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   529                           
   530                           
   531                           ;Keypad.c: 101:     RB2 = 1, RB0 =RB1 = 0;
   532     0727  1283               	bcf	3,5	;RP0=0, select bank0
   533     0728  1303               	bcf	3,6	;RP1=0, select bank0
   534     0729  1506               	bsf	6,2	;volatile
   535     072A  1086               	bcf	6,1	;volatile
   536     072B  1006               	bcf	6,0	;volatile
   537     072C                     l929:
   538                           
   539                           ;Keypad.c: 105:     Lcd_Cmd(0x80);
   540     072C  3080               	movlw	128
   541     072D  120A  118A  26A5  120A  118A  	fcall	_Lcd_Cmd
   542     0732                     l931:
   543                           
   544                           ;Keypad.c: 107:     temp = PORTB;
   545     0732  1283               	bcf	3,5	;RP0=0, select bank0
   546     0733  1303               	bcf	3,6	;RP1=0, select bank0
   547     0734  0806               	movf	6,w	;volatile
   548     0735  00F6               	movwf	_temp
   549                           
   550                           ;Keypad.c: 109:     switch (temp & 0XF0) {
   551     0736  2F53               	goto	l943
   552     0737                     l933:
   553                           
   554                           ;Keypad.c: 112:             Lcd_Data('1');
   555     0737  3031               	movlw	49
   556     0738  120A  118A  2691  120A  118A  	fcall	_Lcd_Data
   557                           
   558                           ;Keypad.c: 113:             break;
   559     073D  2F6A               	goto	l52
   560     073E                     l935:
   561                           
   562                           ;Keypad.c: 116:             Lcd_Data('4');
   563     073E  3034               	movlw	52
   564     073F  120A  118A  2691  120A  118A  	fcall	_Lcd_Data
   565                           
   566                           ;Keypad.c: 117:             break;
   567     0744  2F6A               	goto	l52
   568     0745                     l937:
   569                           
   570                           ;Keypad.c: 120:             Lcd_Data('7');
   571     0745  3037               	movlw	55
   572     0746  120A  118A  2691  120A  118A  	fcall	_Lcd_Data
   573                           
   574                           ;Keypad.c: 121:             break;
   575     074B  2F6A               	goto	l52
   576     074C                     l939:
   577                           
   578                           ;Keypad.c: 124:             Lcd_Data('*');
   579     074C  302A               	movlw	42
   580     074D  120A  118A  2691  120A  118A  	fcall	_Lcd_Data
   581                           
   582                           ;Keypad.c: 125:             break;
   583     0752  2F6A               	goto	l52
   584     0753                     l943:
   585     0753  0876               	movf	_temp,w
   586     0754  39F0               	andlw	240
   587     0755  00F3               	movwf	??_Keypad_Scanning
   588     0756  01F4               	clrf	??_Keypad_Scanning+1
   589                           
   590                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   591                           ; Switch size 1, requested type "simple"
   592                           ; Number of cases is 1, Range of values is 0 to 0
   593                           ; switch strategies available:
   594                           ; Name         Instructions Cycles
   595                           ; simple_byte            4     3 (average)
   596                           ; direct_byte           11     8 (fixed)
   597                           ; jumptable            260     6 (fixed)
   598                           ;	Chosen strategy is simple_byte
   599     0757  0874               	movf	??_Keypad_Scanning+1,w
   600     0758  3A00               	xorlw	0	; case 0
   601     0759  1903               	skipnz
   602     075A  2F5C               	goto	l1055
   603     075B  2F6A               	goto	l52
   604     075C                     l1055:
   605                           
   606                           ; Switch size 1, requested type "simple"
   607                           ; Number of cases is 4, Range of values is 16 to 128
   608                           ; switch strategies available:
   609                           ; Name         Instructions Cycles
   610                           ; simple_byte           13     7 (average)
   611                           ; jumptable            263     9 (fixed)
   612                           ;	Chosen strategy is simple_byte
   613     075C  0873               	movf	??_Keypad_Scanning,w
   614     075D  3A10               	xorlw	16	; case 16
   615     075E  1903               	skipnz
   616     075F  2F37               	goto	l933
   617     0760  3A30               	xorlw	48	; case 32
   618     0761  1903               	skipnz
   619     0762  2F3E               	goto	l935
   620     0763  3A60               	xorlw	96	; case 64
   621     0764  1903               	skipnz
   622     0765  2F45               	goto	l937
   623     0766  3AC0               	xorlw	192	; case 128
   624     0767  1903               	skipnz
   625     0768  2F4C               	goto	l939
   626     0769  2F6A               	goto	l52
   627     076A                     l52:
   628                           
   629                           ;Keypad.c: 129:     RB1 = 1, RB0 = RB2 = 0;
   630     076A  1283               	bcf	3,5	;RP0=0, select bank0
   631     076B  1303               	bcf	3,6	;RP1=0, select bank0
   632     076C  1486               	bsf	6,1	;volatile
   633     076D  1106               	bcf	6,2	;volatile
   634     076E  1006               	bcf	6,0	;volatile
   635     076F                     l945:
   636                           
   637                           ;Keypad.c: 131:     temp = PORTB;
   638     076F  0806               	movf	6,w	;volatile
   639     0770  00F6               	movwf	_temp
   640     0771                     l947:
   641                           
   642                           ;Keypad.c: 133:     Lcd_Cmd(0x80);
   643     0771  3080               	movlw	128
   644     0772  120A  118A  26A5  120A  118A  	fcall	_Lcd_Cmd
   645                           
   646                           ;Keypad.c: 135:     switch (temp & 0XF0) {
   647     0777  2F94               	goto	l959
   648     0778                     l949:
   649                           
   650                           ;Keypad.c: 138:             Lcd_Data('2');
   651     0778  3032               	movlw	50
   652     0779  120A  118A  2691  120A  118A  	fcall	_Lcd_Data
   653                           
   654                           ;Keypad.c: 139:             break;
   655     077E  2FAB               	goto	l58
   656     077F                     l951:
   657                           
   658                           ;Keypad.c: 142:             Lcd_Data('5');
   659     077F  3035               	movlw	53
   660     0780  120A  118A  2691  120A  118A  	fcall	_Lcd_Data
   661                           
   662                           ;Keypad.c: 143:             break;
   663     0785  2FAB               	goto	l58
   664     0786                     l953:
   665                           
   666                           ;Keypad.c: 146:             Lcd_Data('8');
   667     0786  3038               	movlw	56
   668     0787  120A  118A  2691  120A  118A  	fcall	_Lcd_Data
   669                           
   670                           ;Keypad.c: 147:             break;
   671     078C  2FAB               	goto	l58
   672     078D                     l955:
   673                           
   674                           ;Keypad.c: 150:             Lcd_Data('0');
   675     078D  3030               	movlw	48
   676     078E  120A  118A  2691  120A  118A  	fcall	_Lcd_Data
   677                           
   678                           ;Keypad.c: 151:             break;
   679     0793  2FAB               	goto	l58
   680     0794                     l959:
   681     0794  0876               	movf	_temp,w
   682     0795  39F0               	andlw	240
   683     0796  00F3               	movwf	??_Keypad_Scanning
   684     0797  01F4               	clrf	??_Keypad_Scanning+1
   685                           
   686                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   687                           ; Switch size 1, requested type "simple"
   688                           ; Number of cases is 1, Range of values is 0 to 0
   689                           ; switch strategies available:
   690                           ; Name         Instructions Cycles
   691                           ; simple_byte            4     3 (average)
   692                           ; direct_byte           11     8 (fixed)
   693                           ; jumptable            260     6 (fixed)
   694                           ;	Chosen strategy is simple_byte
   695     0798  0874               	movf	??_Keypad_Scanning+1,w
   696     0799  3A00               	xorlw	0	; case 0
   697     079A  1903               	skipnz
   698     079B  2F9D               	goto	l1057
   699     079C  2FAB               	goto	l58
   700     079D                     l1057:
   701                           
   702                           ; Switch size 1, requested type "simple"
   703                           ; Number of cases is 4, Range of values is 16 to 128
   704                           ; switch strategies available:
   705                           ; Name         Instructions Cycles
   706                           ; simple_byte           13     7 (average)
   707                           ; jumptable            263     9 (fixed)
   708                           ;	Chosen strategy is simple_byte
   709     079D  0873               	movf	??_Keypad_Scanning,w
   710     079E  3A10               	xorlw	16	; case 16
   711     079F  1903               	skipnz
   712     07A0  2F78               	goto	l949
   713     07A1  3A30               	xorlw	48	; case 32
   714     07A2  1903               	skipnz
   715     07A3  2F7F               	goto	l951
   716     07A4  3A60               	xorlw	96	; case 64
   717     07A5  1903               	skipnz
   718     07A6  2F86               	goto	l953
   719     07A7  3AC0               	xorlw	192	; case 128
   720     07A8  1903               	skipnz
   721     07A9  2F8D               	goto	l955
   722     07AA  2FAB               	goto	l58
   723     07AB                     l58:
   724                           
   725                           ;Keypad.c: 154:     RB0 = 1, RB2 = RB1 = 0;
   726     07AB  1283               	bcf	3,5	;RP0=0, select bank0
   727     07AC  1303               	bcf	3,6	;RP1=0, select bank0
   728     07AD  1406               	bsf	6,0	;volatile
   729     07AE  1086               	bcf	6,1	;volatile
   730     07AF  1106               	bcf	6,2	;volatile
   731     07B0                     l961:
   732                           
   733                           ;Keypad.c: 157:     temp = PORTB;
   734     07B0  0806               	movf	6,w	;volatile
   735     07B1  00F6               	movwf	_temp
   736     07B2                     l963:
   737                           
   738                           ;Keypad.c: 159:     Lcd_Cmd(0x80);
   739     07B2  3080               	movlw	128
   740     07B3  120A  118A  26A5  120A  118A  	fcall	_Lcd_Cmd
   741                           
   742                           ;Keypad.c: 161:    switch (temp & 0XF0) {
   743     07B8  2FD5               	goto	l975
   744     07B9                     l965:
   745                           
   746                           ;Keypad.c: 164:             Lcd_Data('3');
   747     07B9  3033               	movlw	51
   748     07BA  120A  118A  2691  120A  118A  	fcall	_Lcd_Data
   749                           
   750                           ;Keypad.c: 165:             break;
   751     07BF  2FEC               	goto	l68
   752     07C0                     l967:
   753                           
   754                           ;Keypad.c: 168:             Lcd_Data('6');
   755     07C0  3036               	movlw	54
   756     07C1  120A  118A  2691  120A  118A  	fcall	_Lcd_Data
   757                           
   758                           ;Keypad.c: 169:             break;
   759     07C6  2FEC               	goto	l68
   760     07C7                     l969:
   761                           
   762                           ;Keypad.c: 172:             Lcd_Data('9');
   763     07C7  3039               	movlw	57
   764     07C8  120A  118A  2691  120A  118A  	fcall	_Lcd_Data
   765                           
   766                           ;Keypad.c: 173:             break;
   767     07CD  2FEC               	goto	l68
   768     07CE                     l971:
   769                           
   770                           ;Keypad.c: 176:             Lcd_Data('#');
   771     07CE  3023               	movlw	35
   772     07CF  120A  118A  2691  120A  118A  	fcall	_Lcd_Data
   773                           
   774                           ;Keypad.c: 177:             break;
   775     07D4  2FEC               	goto	l68
   776     07D5                     l975:
   777     07D5  0876               	movf	_temp,w
   778     07D6  39F0               	andlw	240
   779     07D7  00F3               	movwf	??_Keypad_Scanning
   780     07D8  01F4               	clrf	??_Keypad_Scanning+1
   781                           
   782                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   783                           ; Switch size 1, requested type "simple"
   784                           ; Number of cases is 1, Range of values is 0 to 0
   785                           ; switch strategies available:
   786                           ; Name         Instructions Cycles
   787                           ; simple_byte            4     3 (average)
   788                           ; direct_byte           11     8 (fixed)
   789                           ; jumptable            260     6 (fixed)
   790                           ;	Chosen strategy is simple_byte
   791     07D9  0874               	movf	??_Keypad_Scanning+1,w
   792     07DA  3A00               	xorlw	0	; case 0
   793     07DB  1903               	skipnz
   794     07DC  2FDE               	goto	l1059
   795     07DD  2FEC               	goto	l68
   796     07DE                     l1059:
   797                           
   798                           ; Switch size 1, requested type "simple"
   799                           ; Number of cases is 4, Range of values is 16 to 128
   800                           ; switch strategies available:
   801                           ; Name         Instructions Cycles
   802                           ; simple_byte           13     7 (average)
   803                           ; jumptable            263     9 (fixed)
   804                           ;	Chosen strategy is simple_byte
   805     07DE  0873               	movf	??_Keypad_Scanning,w
   806     07DF  3A10               	xorlw	16	; case 16
   807     07E0  1903               	skipnz
   808     07E1  2FB9               	goto	l965
   809     07E2  3A30               	xorlw	48	; case 32
   810     07E3  1903               	skipnz
   811     07E4  2FC0               	goto	l967
   812     07E5  3A60               	xorlw	96	; case 64
   813     07E6  1903               	skipnz
   814     07E7  2FC7               	goto	l969
   815     07E8  3AC0               	xorlw	192	; case 128
   816     07E9  1903               	skipnz
   817     07EA  2FCE               	goto	l971
   818     07EB  2FEC               	goto	l68
   819     07EC                     l68:
   820     07EC  0008               	return
   821     07ED                     __end_of_Keypad_Scanning:
   822                           
   823                           	psect	text3
   824     06BC                     __ptext3:	
   825 ;; *************** function _Configuration *****************
   826 ;; Defined at:
   827 ;;		line 54 in file "Keypad.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;		None
   830 ;; Auto vars:     Size  Location     Type
   831 ;;  i               1    5[COMMON] unsigned char 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   841 ;;      Params:         0       0       0       0       0
   842 ;;      Locals:         1       0       0       0       0
   843 ;;      Temps:          2       0       0       0       0
   844 ;;      Totals:         3       0       0       0       0
   845 ;;Total ram usage:        3 bytes
   846 ;; Hardware stack levels used: 1
   847 ;; Hardware stack levels required when called: 1
   848 ;; This function calls:
   849 ;;		_Lcd_Cmd
   850 ;;		_Lcd_Data
   851 ;; This function is called by:
   852 ;;		_main
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856     06BC                     _Configuration:	
   857                           ;psect for function _Configuration
   858                           
   859     06BC                     l887:	
   860                           ;incstack = 0
   861                           ; Regs used in _Configuration: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   862                           
   863                           
   864                           ;Keypad.c: 56:     TRISC = 0x00;
   865     06BC  1683               	bsf	3,5	;RP0=1, select bank1
   866     06BD  1303               	bcf	3,6	;RP1=0, select bank1
   867     06BE  0187               	clrf	7	;volatile
   868                           
   869                           ;Keypad.c: 58:     TRISD = 0x00;
   870     06BF  0188               	clrf	8	;volatile
   871                           
   872                           ;Keypad.c: 60:     PORTD = 0X00;
   873     06C0  1283               	bcf	3,5	;RP0=0, select bank0
   874     06C1  1303               	bcf	3,6	;RP1=0, select bank0
   875     06C2  0188               	clrf	8	;volatile
   876     06C3                     l889:
   877                           
   878                           ;Keypad.c: 62:     TRISB = 0xF0;
   879     06C3  30F0               	movlw	240
   880     06C4  1683               	bsf	3,5	;RP0=1, select bank1
   881     06C5  1303               	bcf	3,6	;RP1=0, select bank1
   882     06C6  0086               	movwf	6	;volatile
   883     06C7                     l891:
   884                           
   885                           ;Keypad.c: 64:     PORTB = 0x00;
   886     06C7  1283               	bcf	3,5	;RP0=0, select bank0
   887     06C8  1303               	bcf	3,6	;RP1=0, select bank0
   888     06C9  0186               	clrf	6	;volatile
   889     06CA                     l893:
   890                           
   891                           ;Keypad.c: 66:     PORTC = 0x00;
   892     06CA  0187               	clrf	7	;volatile
   893     06CB                     l895:
   894                           
   895                           ;Keypad.c: 69:     Lcd_Cmd(0x0C);
   896     06CB  300C               	movlw	12
   897     06CC  120A  118A  26A5  120A  118A  	fcall	_Lcd_Cmd
   898     06D1                     l897:
   899                           
   900                           ;Keypad.c: 71:     _delay((unsigned long)((10)*(12000000/4000.0)));
   901     06D1  3027               	movlw	39
   902     06D2  00F4               	movwf	??_Configuration+1
   903     06D3  30F5               	movlw	245
   904     06D4  00F3               	movwf	??_Configuration
   905     06D5                     u37:
   906     06D5  0BF3               	decfsz	??_Configuration,f
   907     06D6  2ED5               	goto	u37
   908     06D7  0BF4               	decfsz	??_Configuration+1,f
   909     06D8  2ED5               	goto	u37
   910     06D9                     l899:
   911                           
   912                           ;Keypad.c: 73:     Lcd_Cmd(0x01);
   913     06D9  3001               	movlw	1
   914     06DA  120A  118A  26A5  120A  118A  	fcall	_Lcd_Cmd
   915     06DF                     l901:
   916                           
   917                           ;Keypad.c: 75:     _delay((unsigned long)((10)*(12000000/4000.0)));
   918     06DF  3027               	movlw	39
   919     06E0  00F4               	movwf	??_Configuration+1
   920     06E1  30F5               	movlw	245
   921     06E2  00F3               	movwf	??_Configuration
   922     06E3                     u47:
   923     06E3  0BF3               	decfsz	??_Configuration,f
   924     06E4  2EE3               	goto	u47
   925     06E5  0BF4               	decfsz	??_Configuration+1,f
   926     06E6  2EE3               	goto	u47
   927     06E7                     l903:
   928                           
   929                           ;Keypad.c: 77:     Lcd_Cmd(0x38);
   930     06E7  3038               	movlw	56
   931     06E8  120A  118A  26A5  120A  118A  	fcall	_Lcd_Cmd
   932     06ED                     l905:
   933                           
   934                           ;Keypad.c: 79:     _delay((unsigned long)((10)*(12000000/4000.0)));
   935     06ED  3027               	movlw	39
   936     06EE  00F4               	movwf	??_Configuration+1
   937     06EF  30F5               	movlw	245
   938     06F0  00F3               	movwf	??_Configuration
   939     06F1                     u57:
   940     06F1  0BF3               	decfsz	??_Configuration,f
   941     06F2  2EF1               	goto	u57
   942     06F3  0BF4               	decfsz	??_Configuration+1,f
   943     06F4  2EF1               	goto	u57
   944     06F5                     l907:
   945                           
   946                           ;Keypad.c: 81:     Lcd_Cmd(0x06);
   947     06F5  3006               	movlw	6
   948     06F6  120A  118A  26A5  120A  118A  	fcall	_Lcd_Cmd
   949     06FB                     l909:
   950                           
   951                           ;Keypad.c: 83:     _delay((unsigned long)((10)*(12000000/4000.0)));
   952     06FB  3027               	movlw	39
   953     06FC  00F4               	movwf	??_Configuration+1
   954     06FD  30F5               	movlw	245
   955     06FE  00F3               	movwf	??_Configuration
   956     06FF                     u67:
   957     06FF  0BF3               	decfsz	??_Configuration,f
   958     0700  2EFF               	goto	u67
   959     0701  0BF4               	decfsz	??_Configuration+1,f
   960     0702  2EFF               	goto	u67
   961     0703                     l911:
   962                           
   963                           ;Keypad.c: 85:     Lcd_Cmd(0x81);
   964     0703  3081               	movlw	129
   965     0704  120A  118A  26A5  120A  118A  	fcall	_Lcd_Cmd
   966     0709                     l913:
   967                           
   968                           ;Keypad.c: 87:     _delay((unsigned long)((10)*(12000000/4000.0)));
   969     0709  3027               	movlw	39
   970     070A  00F4               	movwf	??_Configuration+1
   971     070B  30F5               	movlw	245
   972     070C  00F3               	movwf	??_Configuration
   973     070D                     u77:
   974     070D  0BF3               	decfsz	??_Configuration,f
   975     070E  2F0D               	goto	u77
   976     070F  0BF4               	decfsz	??_Configuration+1,f
   977     0710  2F0D               	goto	u77
   978     0711                     l915:
   979                           
   980                           ;Keypad.c: 89:     for (char i = 0; i < 9; i++) {
   981     0711  01F5               	clrf	Configuration@i
   982     0712                     l921:
   983                           
   984                           ;Keypad.c: 92:         Lcd_Data(result[i]);
   985     0712  0875               	movf	Configuration@i,w
   986     0713  3E20               	addlw	(low (_result| 0))& (0+255)
   987     0714  0084               	movwf	4
   988     0715  1383               	bcf	3,7	;select IRP bank0
   989     0716  0800               	movf	0,w
   990     0717  120A  118A  2691  120A  118A  	fcall	_Lcd_Data
   991     071C                     l923:
   992                           
   993                           ;Keypad.c: 94:     }
   994     071C  3001               	movlw	1
   995     071D  00FF               	movwf	btemp+1
   996     071E  087F               	movf	btemp+1,w
   997     071F  07F5               	addwf	Configuration@i,f
   998     0720                     l925:
   999     0720  3009               	movlw	9
  1000     0721  0275               	subwf	Configuration@i,w
  1001     0722  1C03               	skipc
  1002     0723  2F25               	goto	u21
  1003     0724  2F26               	goto	u20
  1004     0725                     u21:
  1005     0725  2F12               	goto	l921
  1006     0726                     u20:
  1007     0726                     l47:
  1008     0726  0008               	return
  1009     0727                     __end_of_Configuration:
  1010                           
  1011                           	psect	text4
  1012     0691                     __ptext4:	
  1013 ;; *************** function _Lcd_Data *****************
  1014 ;; Defined at:
  1015 ;;		line 15 in file "LCD.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;  data            1    wreg     unsigned char 
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;  data            1    2[COMMON] unsigned char 
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, status,2, status,0, btemp+1
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1029 ;;      Params:         0       0       0       0       0
  1030 ;;      Locals:         1       0       0       0       0
  1031 ;;      Temps:          2       0       0       0       0
  1032 ;;      Totals:         3       0       0       0       0
  1033 ;;Total ram usage:        3 bytes
  1034 ;; Hardware stack levels used: 1
  1035 ;; This function calls:
  1036 ;;		Nothing
  1037 ;; This function is called by:
  1038 ;;		_Configuration
  1039 ;;		_Keypad_Scanning
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043     0691                     _Lcd_Data:	
  1044                           ;psect for function _Lcd_Data
  1045                           
  1046                           
  1047                           ;incstack = 0
  1048                           ; Regs used in _Lcd_Data: [wreg+status,2+status,0+btemp+1]
  1049                           ;Lcd_Data@data stored from wreg
  1050     0691  00F2               	movwf	Lcd_Data@data
  1051     0692                     l877:
  1052                           
  1053                           ;LCD.c: 19:     PORTD = data;
  1054     0692  0872               	movf	Lcd_Data@data,w
  1055     0693  1283               	bcf	3,5	;RP0=0, select bank0
  1056     0694  1303               	bcf	3,6	;RP1=0, select bank0
  1057     0695  0088               	movwf	8	;volatile
  1058     0696                     l879:
  1059                           
  1060                           ;LCD.c: 21:     PORTC |= 0x40;
  1061     0696  1707               	bsf	7,6	;volatile
  1062     0697                     l881:
  1063                           
  1064                           ;LCD.c: 23:     PORTC |= 0x80;
  1065     0697  1787               	bsf	7,7	;volatile
  1066     0698                     l883:
  1067                           
  1068                           ;LCD.c: 25:     PORTC &= ~0x80;
  1069     0698  307F               	movlw	127
  1070     0699  00FF               	movwf	btemp+1
  1071     069A  087F               	movf	btemp+1,w
  1072     069B  0587               	andwf	7,f	;volatile
  1073     069C                     l885:
  1074                           
  1075                           ;LCD.c: 27:     _delay((unsigned long)((10)*(12000000/4000.0)));
  1076     069C  3027               	movlw	39
  1077     069D  00F1               	movwf	??_Lcd_Data+1
  1078     069E  30F5               	movlw	245
  1079     069F  00F0               	movwf	??_Lcd_Data
  1080     06A0                     u87:
  1081     06A0  0BF0               	decfsz	??_Lcd_Data,f
  1082     06A1  2EA0               	goto	u87
  1083     06A2  0BF1               	decfsz	??_Lcd_Data+1,f
  1084     06A3  2EA0               	goto	u87
  1085     06A4                     l84:
  1086     06A4  0008               	return
  1087     06A5                     __end_of_Lcd_Data:
  1088                           
  1089                           	psect	text5
  1090     06A5                     __ptext5:	
  1091 ;; *************** function _Lcd_Cmd *****************
  1092 ;; Defined at:
  1093 ;;		line 32 in file "LCD.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;  cmd             1    wreg     unsigned char 
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;  cmd             1    2[COMMON] unsigned char 
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, status,2, status,0, btemp+1
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1107 ;;      Params:         0       0       0       0       0
  1108 ;;      Locals:         1       0       0       0       0
  1109 ;;      Temps:          2       0       0       0       0
  1110 ;;      Totals:         3       0       0       0       0
  1111 ;;Total ram usage:        3 bytes
  1112 ;; Hardware stack levels used: 1
  1113 ;; This function calls:
  1114 ;;		Nothing
  1115 ;; This function is called by:
  1116 ;;		_Configuration
  1117 ;;		_Keypad_Scanning
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121     06A5                     _Lcd_Cmd:	
  1122                           ;psect for function _Lcd_Cmd
  1123                           
  1124                           
  1125                           ;incstack = 0
  1126                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+btemp+1]
  1127                           ;Lcd_Cmd@cmd stored from wreg
  1128     06A5  00F2               	movwf	Lcd_Cmd@cmd
  1129     06A6                     l869:
  1130                           
  1131                           ;LCD.c: 34:     PORTD = cmd;
  1132     06A6  0872               	movf	Lcd_Cmd@cmd,w
  1133     06A7  1283               	bcf	3,5	;RP0=0, select bank0
  1134     06A8  1303               	bcf	3,6	;RP1=0, select bank0
  1135     06A9  0088               	movwf	8	;volatile
  1136     06AA                     l871:
  1137                           
  1138                           ;LCD.c: 36:     PORTC &= ~0x40;
  1139     06AA  30BF               	movlw	191
  1140     06AB  00FF               	movwf	btemp+1
  1141     06AC  087F               	movf	btemp+1,w
  1142     06AD  0587               	andwf	7,f	;volatile
  1143     06AE                     l873:
  1144                           
  1145                           ;LCD.c: 39:     PORTC |= 0x80;
  1146     06AE  1787               	bsf	7,7	;volatile
  1147     06AF                     l875:
  1148                           
  1149                           ;LCD.c: 41:     PORTC &= ~0x80;
  1150     06AF  307F               	movlw	127
  1151     06B0  00FF               	movwf	btemp+1
  1152     06B1  087F               	movf	btemp+1,w
  1153     06B2  0587               	andwf	7,f	;volatile
  1154                           
  1155                           ;LCD.c: 43:     _delay((unsigned long)((10)*(12000000/4000.0)));
  1156     06B3  3027               	movlw	39
  1157     06B4  00F1               	movwf	??_Lcd_Cmd+1
  1158     06B5  30F5               	movlw	245
  1159     06B6  00F0               	movwf	??_Lcd_Cmd
  1160     06B7                     u97:
  1161     06B7  0BF0               	decfsz	??_Lcd_Cmd,f
  1162     06B8  2EB7               	goto	u97
  1163     06B9  0BF1               	decfsz	??_Lcd_Cmd+1,f
  1164     06BA  2EB7               	goto	u97
  1165     06BB                     l87:
  1166     06BB  0008               	return
  1167     06BC                     __end_of_Lcd_Cmd:
  1168     007E                     btemp	set	126	;btemp
  1169     007E                     wtemp0	set	126
  1170                           
  1171                           	psect	config
  1172                           
  1173                           ;Config register CONFIG @ 0x2007
  1174                           ;	Oscillator Selection bits
  1175                           ;	FOSC = EXTRC, RC oscillator
  1176                           ;	Watchdog Timer Enable bit
  1177                           ;	WDTE = OFF, WDT disabled
  1178                           ;	Power-up Timer Enable bit
  1179                           ;	PWRTE = OFF, PWRT disabled
  1180                           ;	Brown-out Reset Enable bit
  1181                           ;	BOREN = OFF, BOR disabled
  1182                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1183                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1184                           ;	Data EEPROM Memory Code Protection bit
  1185                           ;	CPD = OFF, Data EEPROM code protection off
  1186                           ;	Flash Program Memory Write Enable bits
  1187                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1188                           ;	In-Circuit Debugger Mode bit
  1189                           ;	DEBUG = 0x1, unprogrammed default
  1190                           ;	Flash Program Memory Code Protection bit
  1191                           ;	CP = OFF, Code protection off
  1192     2007                     	org	8199
  1193     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       7
    BANK0            80      0       9
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Configuration
    _Keypad_Scanning->_Lcd_Cmd
    _Keypad_Scanning->_Lcd_Data
    _Configuration->_Lcd_Cmd
    _Configuration->_Lcd_Data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     156
                      _Configuration
                    _Keypad_Scanning
                  _Lcd_Configuration
 ---------------------------------------------------------------------------------
 (1) _Lcd_Configuration                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Keypad_Scanning                                      2     2      0      44
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Data
 ---------------------------------------------------------------------------------
 (1) _Configuration                                        3     3      0     112
                                              3 COMMON     3     3      0
                            _Lcd_Cmd
                           _Lcd_Data
 ---------------------------------------------------------------------------------
 (2) _Lcd_Data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuration
     _Lcd_Cmd
     _Lcd_Data
   _Keypad_Scanning
     _Lcd_Cmd
     _Lcd_Data
   _Lcd_Configuration

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       9       5       11.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       7       1       50.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      10      12        0.0%
ABS                  0      0      10       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Nov 15 11:23:16 2023

                        pc 0002                         l52 076A                         l47 0726  
                       l81 066A                         l58 07AB                         l84 06A4  
                       l68 07EC                         l87 06BB                         u20 0726  
                       u21 0725                         u37 06D5                         u47 06E3  
                       u57 06F1                         u67 06FF                         u77 070D  
                       u87 06A0                         u97 06B7                         fsr 0004  
                      l901 06DF                        l911 0703                        l903 06E7  
                      l921 0712                        l913 0709                        l905 06ED  
                      l923 071C                        l915 0711                        l907 06F5  
                      l931 0732                        l925 0720                        l909 06FB  
                      l933 0737                        l871 06AA                        l951 077F  
                      l935 073E                        l943 0753                        l927 0727  
                      l873 06AE                        l881 0697                        l961 07B0  
                      l953 0786                        l945 076F                        l937 0745  
                      l929 072C                        l697 065F                        l875 06AF  
                      l883 0698                        l891 06C7                        l971 07CE  
                      l963 07B2                        l955 078D                        l947 0771  
                      l939 074C                        l699 0665                        l869 06A6  
                      l885 069C                        l877 0692                        l893 06CA  
                      l965 07B9                        l949 0778                        l879 0696  
                      l895 06CB                        l887 06BC                        l967 07C0  
                      l975 07D5                        l959 0794                        l991 0670  
                      l897 06D1                        l889 06C3                        l969 07C7  
                      l993 0675                        l899 06D9                        l989 066B  
                      _RB0 0030                        _RB1 0031                        _RB2 0032  
                      fsr0 0004                        indf 0000                       l1055 075C  
                     l1057 079D                       l1059 07DE                       _main 066B  
                     _temp 0076                       btemp 007E                       start 0000  
          __end_of_Lcd_Cmd 06BC                      ?_main 0070                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Data 06A5  
          __initialization 07ED               __end_of_main 067E                     ??_main 0076  
                ??_Lcd_Cmd 0070                     _result 0020    __end_of__initialization 07FC  
           __pcstackCOMMON 0070               __pidataBANK0 0656                  ?_Lcd_Data 0070  
    __end_of_Configuration 0727                 __pmaintext 066B                 ??_Lcd_Data 0070  
                  _Lcd_Cmd 06A5                    __ptext1 065F                    __ptext2 0727  
                  __ptext3 06BC                    __ptext4 0691                    __ptext5 06A5  
     end_of_initialization 07FC          ??_Keypad_Scanning 0073        start_initialization 07ED  
               init_fetch0 067E                __pdataBANK0 0020                __pbssCOMMON 0076  
                ___latbits 0002                   ?_Lcd_Cmd 0070          _Lcd_Configuration 065F  
       ?_Lcd_Configuration 0070             Configuration@i 0075        ??_Lcd_Configuration 0070  
             Lcd_Data@data 0072            _Keypad_Scanning 0727  __end_of_Lcd_Configuration 066B  
                 _Lcd_Data 0691              _Configuration 06BC    __end_of_Keypad_Scanning 07ED  
           ?_Configuration 0070                   init_ram0 0682                 Lcd_Cmd@cmd 0072  
         ?_Keypad_Scanning 0070            ??_Configuration 0073  
