

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Oct 22 09:42:40 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18     0000                     
    19                           ; Generated 22/03/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0094                     	;# 
   101     0098                     	;# 
   102     0099                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     010E                     	;# 
   110     010F                     	;# 
   111     018C                     	;# 
   112     018D                     	;# 
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     0008                     	;# 
   122     0009                     	;# 
   123     000A                     	;# 
   124     000B                     	;# 
   125     000C                     	;# 
   126     000D                     	;# 
   127     000E                     	;# 
   128     000E                     	;# 
   129     000F                     	;# 
   130     0010                     	;# 
   131     0011                     	;# 
   132     0012                     	;# 
   133     0013                     	;# 
   134     0014                     	;# 
   135     0015                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0017                     	;# 
   139     0018                     	;# 
   140     0019                     	;# 
   141     001A                     	;# 
   142     001B                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001D                     	;# 
   146     001E                     	;# 
   147     001F                     	;# 
   148     0081                     	;# 
   149     0085                     	;# 
   150     0086                     	;# 
   151     0087                     	;# 
   152     0088                     	;# 
   153     0089                     	;# 
   154     008C                     	;# 
   155     008D                     	;# 
   156     008E                     	;# 
   157     0091                     	;# 
   158     0092                     	;# 
   159     0093                     	;# 
   160     0094                     	;# 
   161     0098                     	;# 
   162     0099                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     009F                     	;# 
   167     010C                     	;# 
   168     010D                     	;# 
   169     010E                     	;# 
   170     010F                     	;# 
   171     018C                     	;# 
   172     018D                     	;# 
   173                           
   174                           	psect	idataBANK0
   175     0656                     __pidataBANK0:
   176                           
   177                           ;initializer for _result
   178     0656  343A               	retlw	58
   179     0657  3450               	retlw	80
   180     0658  3452               	retlw	82
   181     0659  3445               	retlw	69
   182     065A  3453               	retlw	83
   183     065B  3453               	retlw	83
   184     065C  3445               	retlw	69
   185     065D  3444               	retlw	68
   186     065E  3400               	retlw	0
   187     0006                     _PORTB	set	6
   188     0007                     _PORTC	set	7
   189     0008                     _PORTD	set	8
   190     0031                     _RB1	set	49
   191     0030                     _RB0	set	48
   192     0032                     _RB2	set	50
   193     0086                     _TRISB	set	134
   194     0087                     _TRISC	set	135
   195     0088                     _TRISD	set	136
   196                           
   197                           	psect	cinit
   198     07ED                     start_initialization:	
   199                           ; #config settings
   200                           
   201     07ED                     __initialization:
   202                           
   203                           ; Initialize objects allocated to BANK0
   204     07ED  1383               	bcf	3,7	;select IRP bank0
   205     07EE  3029               	movlw	low (__pdataBANK0+9)
   206     07EF  00FD               	movwf	btemp+-1
   207     07F0  3006               	movlw	high __pidataBANK0
   208     07F1  00FE               	movwf	btemp
   209     07F2  3056               	movlw	low __pidataBANK0
   210     07F3  00FF               	movwf	btemp+1
   211     07F4  3020               	movlw	low __pdataBANK0
   212     07F5  0084               	movwf	4
   213     07F6  120A  118A  2682  120A  118A  	fcall	init_ram0
   214                           
   215                           ; Clear objects allocated to COMMON
   216     07FB  01F6               	clrf	__pbssCOMMON& (0+127)
   217     07FC                     end_of_initialization:	
   218                           ;End of C runtime variable initialization code
   219                           
   220     07FC                     __end_of__initialization:
   221     07FC  0183               	clrf	3
   222     07FD  120A  118A  2E6B   	ljmp	_main	;jump to C main() function
   223                           
   224                           	psect	bssCOMMON
   225     0076                     __pbssCOMMON:
   226     0076                     _temp:
   227     0076                     	ds	1
   228                           
   229                           	psect	dataBANK0
   230     0020                     __pdataBANK0:
   231     0020                     _result:
   232     0020                     	ds	9
   233                           
   234                           	psect	inittext
   235     067E                     init_fetch0:	
   236                           ;	Called with low address in FSR and high address in W
   237                           
   238     067E  087E               	movf	btemp,w
   239     067F  008A               	movwf	10
   240     0680  087F               	movf	btemp+1,w
   241     0681  0082               	movwf	2
   242     0682                     init_ram0:	
   243                           ;Called with:
   244                           ;	high address of idata address in btemp 
   245                           ;	low address of idata address in btemp+1 
   246                           ;	low address of data in FSR
   247                           ;	high address + 1 of data in btemp-1
   248                           
   249     0682  120A  118A  267E  120A  118A  	fcall	init_fetch0
   250     0687  0080               	movwf	0
   251     0688  0A84               	incf	4,f
   252     0689  0804               	movf	4,w
   253     068A  067D               	xorwf	btemp+-1,w
   254     068B  1903               	btfsc	3,2
   255     068C  3400               	retlw	0
   256     068D  0AFF               	incf	btemp+1,f
   257     068E  1903               	btfsc	3,2
   258     068F  0AFE               	incf	btemp,f
   259     0690  2E82               	goto	init_ram0
   260                           
   261                           	psect	cstackCOMMON
   262     0070                     __pcstackCOMMON:
   263     0070                     ?_Configuration:
   264     0070                     ?_Keypad_Scanning:	
   265                           ; 1 bytes @ 0x0
   266                           
   267     0070                     ?_Lcd_Configuration:	
   268                           ; 1 bytes @ 0x0
   269                           
   270     0070                     ??_Lcd_Configuration:	
   271                           ; 1 bytes @ 0x0
   272                           
   273     0070                     ?_Lcd_Data:	
   274                           ; 1 bytes @ 0x0
   275                           
   276     0070                     ??_Lcd_Data:	
   277                           ; 1 bytes @ 0x0
   278                           
   279     0070                     ?_Lcd_Cmd:	
   280                           ; 1 bytes @ 0x0
   281                           
   282     0070                     ??_Lcd_Cmd:	
   283                           ; 1 bytes @ 0x0
   284                           
   285     0070                     ?_main:	
   286                           ; 1 bytes @ 0x0
   287                           
   288                           
   289                           ; 1 bytes @ 0x0
   290     0070                     	ds	2
   291     0072                     Lcd_Data@data:
   292     0072                     Lcd_Cmd@cmd:	
   293                           ; 1 bytes @ 0x2
   294                           
   295                           
   296                           ; 1 bytes @ 0x2
   297     0072                     	ds	1
   298     0073                     ??_Configuration:
   299     0073                     ??_Keypad_Scanning:	
   300                           ; 1 bytes @ 0x3
   301                           
   302                           
   303                           ; 1 bytes @ 0x3
   304     0073                     	ds	2
   305     0075                     Configuration@i:
   306                           
   307                           ; 1 bytes @ 0x5
   308     0075                     	ds	1
   309     0076                     ??_main:
   310                           
   311                           	psect	maintext
   312     066B                     __pmaintext:	
   313                           ; 1 bytes @ 0x6
   314 ;;
   315 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   316 ;;
   317 ;; *************** function _main *****************
   318 ;; Defined at:
   319 ;;		line 39 in file "Keypad.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;		None
   322 ;; Auto vars:     Size  Location     Type
   323 ;;		None
   324 ;; Return value:  Size  Location     Type
   325 ;;                  1    wreg      void 
   326 ;; Registers used:
   327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   328 ;; Tracked objects:
   329 ;;		On entry : B00/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   333 ;;      Params:         0       0       0       0       0
   334 ;;      Locals:         0       0       0       0       0
   335 ;;      Temps:          0       0       0       0       0
   336 ;;      Totals:         0       0       0       0       0
   337 ;;Total ram usage:        0 bytes
   338 ;; Hardware stack levels required when called: 2
   339 ;; This function calls:
   340 ;;		_Configuration
   341 ;;		_Keypad_Scanning
   342 ;;		_Lcd_Configuration
   343 ;; This function is called by:
   344 ;;		Startup code after reset
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348     066B                     _main:	
   349                           ;psect for function _main
   350                           
   351     066B                     l973:	
   352                           ;incstack = 0
   353                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   354                           
   355                           
   356                           ;Keypad.c: 41:     Lcd_Configuration();
   357     066B  120A  118A  265F  120A  118A  	fcall	_Lcd_Configuration
   358     0670                     l975:
   359                           
   360                           ;Keypad.c: 43:     Configuration();
   361     0670  120A  118A  26BC  120A  118A  	fcall	_Configuration
   362     0675                     l977:
   363                           
   364                           ;Keypad.c: 47:         Keypad_Scanning();
   365     0675  120A  118A  2727  120A  118A  	fcall	_Keypad_Scanning
   366     067A  2E75               	goto	l977
   367     067B  120A  118A  2800   	ljmp	start
   368     067E                     __end_of_main:
   369                           
   370                           	psect	text1
   371     065F                     __ptext1:	
   372 ;; *************** function _Lcd_Configuration *****************
   373 ;; Defined at:
   374 ;;		line 44 in file "./LCD.h"
   375 ;; Parameters:    Size  Location     Type
   376 ;;		None
   377 ;; Auto vars:     Size  Location     Type
   378 ;;		None
   379 ;; Return value:  Size  Location     Type
   380 ;;                  1    wreg      void 
   381 ;; Registers used:
   382 ;;		wreg, status,2
   383 ;; Tracked objects:
   384 ;;		On entry : 0/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   388 ;;      Params:         0       0       0       0       0
   389 ;;      Locals:         0       0       0       0       0
   390 ;;      Temps:          0       0       0       0       0
   391 ;;      Totals:         0       0       0       0       0
   392 ;;Total ram usage:        0 bytes
   393 ;; Hardware stack levels used: 1
   394 ;; This function calls:
   395 ;;		Nothing
   396 ;; This function is called by:
   397 ;;		_main
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401     065F                     _Lcd_Configuration:	
   402                           ;psect for function _Lcd_Configuration
   403                           
   404     065F                     l681:	
   405                           ;incstack = 0
   406                           ; Regs used in _Lcd_Configuration: [wreg+status,2]
   407                           
   408                           
   409                           ;./LCD.h: 46:     TRISD=0x00;
   410     065F  1683               	bsf	3,5	;RP0=1, select bank1
   411     0660  1303               	bcf	3,6	;RP1=0, select bank1
   412     0661  0188               	clrf	8	;volatile
   413                           
   414                           ;./LCD.h: 48:     PORTD=0x00;
   415     0662  1283               	bcf	3,5	;RP0=0, select bank0
   416     0663  1303               	bcf	3,6	;RP1=0, select bank0
   417     0664  0188               	clrf	8	;volatile
   418     0665                     l683:
   419                           
   420                           ;./LCD.h: 50:     TRISC=(TRISC&0x3F);
   421     0665  1683               	bsf	3,5	;RP0=1, select bank1
   422     0666  1303               	bcf	3,6	;RP1=0, select bank1
   423     0667  0807               	movf	7,w	;volatile
   424     0668  393F               	andlw	63
   425     0669  0087               	movwf	7	;volatile
   426     066A                     l27:
   427     066A  0008               	return
   428     066B                     __end_of_Lcd_Configuration:
   429                           
   430                           	psect	text2
   431     0727                     __ptext2:	
   432 ;; *************** function _Keypad_Scanning *****************
   433 ;; Defined at:
   434 ;;		line 96 in file "Keypad.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;		None
   437 ;; Auto vars:     Size  Location     Type
   438 ;;		None
   439 ;; Return value:  Size  Location     Type
   440 ;;                  1    wreg      void 
   441 ;; Registers used:
   442 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   443 ;; Tracked objects:
   444 ;;		On entry : 0/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   448 ;;      Params:         0       0       0       0       0
   449 ;;      Locals:         0       0       0       0       0
   450 ;;      Temps:          2       0       0       0       0
   451 ;;      Totals:         2       0       0       0       0
   452 ;;Total ram usage:        2 bytes
   453 ;; Hardware stack levels used: 1
   454 ;; Hardware stack levels required when called: 1
   455 ;; This function calls:
   456 ;;		_Lcd_Cmd
   457 ;;		_Lcd_Data
   458 ;; This function is called by:
   459 ;;		_main
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463     0727                     _Keypad_Scanning:	
   464                           ;psect for function _Keypad_Scanning
   465                           
   466     0727                     l911:	
   467                           ;incstack = 0
   468                           ; Regs used in _Keypad_Scanning: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   469                           
   470                           
   471                           ;Keypad.c: 98:     RB2 = 1, RB0 =RB1 = 0;
   472     0727  1283               	bcf	3,5	;RP0=0, select bank0
   473     0728  1303               	bcf	3,6	;RP1=0, select bank0
   474     0729  1506               	bsf	6,2	;volatile
   475     072A  1086               	bcf	6,1	;volatile
   476     072B  1006               	bcf	6,0	;volatile
   477     072C                     l913:
   478                           
   479                           ;Keypad.c: 100:     Lcd_Cmd(0x80);
   480     072C  3080               	movlw	128
   481     072D  120A  118A  26A5  120A  118A  	fcall	_Lcd_Cmd
   482     0732                     l915:
   483                           
   484                           ;Keypad.c: 102:     temp = PORTB;
   485     0732  1283               	bcf	3,5	;RP0=0, select bank0
   486     0733  1303               	bcf	3,6	;RP1=0, select bank0
   487     0734  0806               	movf	6,w	;volatile
   488     0735  00F6               	movwf	_temp
   489                           
   490                           ;Keypad.c: 104:     switch (temp & 0XF0) {
   491     0736  2F53               	goto	l927
   492     0737                     l917:
   493                           
   494                           ;Keypad.c: 107:             Lcd_Data('1');
   495     0737  3031               	movlw	49
   496     0738  120A  118A  2691  120A  118A  	fcall	_Lcd_Data
   497                           
   498                           ;Keypad.c: 108:             break;
   499     073D  2F6A               	goto	l55
   500     073E                     l919:
   501                           
   502                           ;Keypad.c: 111:             Lcd_Data('4');
   503     073E  3034               	movlw	52
   504     073F  120A  118A  2691  120A  118A  	fcall	_Lcd_Data
   505                           
   506                           ;Keypad.c: 112:             break;
   507     0744  2F6A               	goto	l55
   508     0745                     l921:
   509                           
   510                           ;Keypad.c: 115:             Lcd_Data('7');
   511     0745  3037               	movlw	55
   512     0746  120A  118A  2691  120A  118A  	fcall	_Lcd_Data
   513                           
   514                           ;Keypad.c: 116:             break;
   515     074B  2F6A               	goto	l55
   516     074C                     l923:
   517                           
   518                           ;Keypad.c: 119:             Lcd_Data('*');
   519     074C  302A               	movlw	42
   520     074D  120A  118A  2691  120A  118A  	fcall	_Lcd_Data
   521                           
   522                           ;Keypad.c: 120:             break;
   523     0752  2F6A               	goto	l55
   524     0753                     l927:
   525     0753  0876               	movf	_temp,w
   526     0754  39F0               	andlw	240
   527     0755  00F3               	movwf	??_Keypad_Scanning
   528     0756  01F4               	clrf	??_Keypad_Scanning+1
   529                           
   530                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   531                           ; Switch size 1, requested type "simple"
   532                           ; Number of cases is 1, Range of values is 0 to 0
   533                           ; switch strategies available:
   534                           ; Name         Instructions Cycles
   535                           ; simple_byte            4     3 (average)
   536                           ; direct_byte           11     8 (fixed)
   537                           ; jumptable            260     6 (fixed)
   538                           ;	Chosen strategy is simple_byte
   539     0757  0874               	movf	??_Keypad_Scanning+1,w
   540     0758  3A00               	xorlw	0	; case 0
   541     0759  1903               	skipnz
   542     075A  2F5C               	goto	l1039
   543     075B  2F6A               	goto	l55
   544     075C                     l1039:
   545                           
   546                           ; Switch size 1, requested type "simple"
   547                           ; Number of cases is 4, Range of values is 16 to 128
   548                           ; switch strategies available:
   549                           ; Name         Instructions Cycles
   550                           ; simple_byte           13     7 (average)
   551                           ; jumptable            263     9 (fixed)
   552                           ;	Chosen strategy is simple_byte
   553     075C  0873               	movf	??_Keypad_Scanning,w
   554     075D  3A10               	xorlw	16	; case 16
   555     075E  1903               	skipnz
   556     075F  2F37               	goto	l917
   557     0760  3A30               	xorlw	48	; case 32
   558     0761  1903               	skipnz
   559     0762  2F3E               	goto	l919
   560     0763  3A60               	xorlw	96	; case 64
   561     0764  1903               	skipnz
   562     0765  2F45               	goto	l921
   563     0766  3AC0               	xorlw	192	; case 128
   564     0767  1903               	skipnz
   565     0768  2F4C               	goto	l923
   566     0769  2F6A               	goto	l55
   567     076A                     l55:
   568                           
   569                           ;Keypad.c: 124:     RB1 = 1, RB0 = RB2 = 0;
   570     076A  1283               	bcf	3,5	;RP0=0, select bank0
   571     076B  1303               	bcf	3,6	;RP1=0, select bank0
   572     076C  1486               	bsf	6,1	;volatile
   573     076D  1106               	bcf	6,2	;volatile
   574     076E  1006               	bcf	6,0	;volatile
   575     076F                     l929:
   576                           
   577                           ;Keypad.c: 126:     temp = PORTB;
   578     076F  0806               	movf	6,w	;volatile
   579     0770  00F6               	movwf	_temp
   580     0771                     l931:
   581                           
   582                           ;Keypad.c: 128:     Lcd_Cmd(0x80);
   583     0771  3080               	movlw	128
   584     0772  120A  118A  26A5  120A  118A  	fcall	_Lcd_Cmd
   585                           
   586                           ;Keypad.c: 130:     switch (temp & 0XF0) {
   587     0777  2F94               	goto	l943
   588     0778                     l933:
   589                           
   590                           ;Keypad.c: 133:             Lcd_Data('2');
   591     0778  3032               	movlw	50
   592     0779  120A  118A  2691  120A  118A  	fcall	_Lcd_Data
   593                           
   594                           ;Keypad.c: 134:             break;
   595     077E  2FAB               	goto	l61
   596     077F                     l935:
   597                           
   598                           ;Keypad.c: 137:             Lcd_Data('5');
   599     077F  3035               	movlw	53
   600     0780  120A  118A  2691  120A  118A  	fcall	_Lcd_Data
   601                           
   602                           ;Keypad.c: 138:             break;
   603     0785  2FAB               	goto	l61
   604     0786                     l937:
   605                           
   606                           ;Keypad.c: 141:             Lcd_Data('8');
   607     0786  3038               	movlw	56
   608     0787  120A  118A  2691  120A  118A  	fcall	_Lcd_Data
   609                           
   610                           ;Keypad.c: 142:             break;
   611     078C  2FAB               	goto	l61
   612     078D                     l939:
   613                           
   614                           ;Keypad.c: 145:             Lcd_Data('0');
   615     078D  3030               	movlw	48
   616     078E  120A  118A  2691  120A  118A  	fcall	_Lcd_Data
   617                           
   618                           ;Keypad.c: 146:             break;
   619     0793  2FAB               	goto	l61
   620     0794                     l943:
   621     0794  0876               	movf	_temp,w
   622     0795  39F0               	andlw	240
   623     0796  00F3               	movwf	??_Keypad_Scanning
   624     0797  01F4               	clrf	??_Keypad_Scanning+1
   625                           
   626                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   627                           ; Switch size 1, requested type "simple"
   628                           ; Number of cases is 1, Range of values is 0 to 0
   629                           ; switch strategies available:
   630                           ; Name         Instructions Cycles
   631                           ; simple_byte            4     3 (average)
   632                           ; direct_byte           11     8 (fixed)
   633                           ; jumptable            260     6 (fixed)
   634                           ;	Chosen strategy is simple_byte
   635     0798  0874               	movf	??_Keypad_Scanning+1,w
   636     0799  3A00               	xorlw	0	; case 0
   637     079A  1903               	skipnz
   638     079B  2F9D               	goto	l1041
   639     079C  2FAB               	goto	l61
   640     079D                     l1041:
   641                           
   642                           ; Switch size 1, requested type "simple"
   643                           ; Number of cases is 4, Range of values is 16 to 128
   644                           ; switch strategies available:
   645                           ; Name         Instructions Cycles
   646                           ; simple_byte           13     7 (average)
   647                           ; jumptable            263     9 (fixed)
   648                           ;	Chosen strategy is simple_byte
   649     079D  0873               	movf	??_Keypad_Scanning,w
   650     079E  3A10               	xorlw	16	; case 16
   651     079F  1903               	skipnz
   652     07A0  2F78               	goto	l933
   653     07A1  3A30               	xorlw	48	; case 32
   654     07A2  1903               	skipnz
   655     07A3  2F7F               	goto	l935
   656     07A4  3A60               	xorlw	96	; case 64
   657     07A5  1903               	skipnz
   658     07A6  2F86               	goto	l937
   659     07A7  3AC0               	xorlw	192	; case 128
   660     07A8  1903               	skipnz
   661     07A9  2F8D               	goto	l939
   662     07AA  2FAB               	goto	l61
   663     07AB                     l61:
   664                           
   665                           ;Keypad.c: 149:     RB0 = 1, RB2 = RB1 = 0;
   666     07AB  1283               	bcf	3,5	;RP0=0, select bank0
   667     07AC  1303               	bcf	3,6	;RP1=0, select bank0
   668     07AD  1406               	bsf	6,0	;volatile
   669     07AE  1086               	bcf	6,1	;volatile
   670     07AF  1106               	bcf	6,2	;volatile
   671     07B0                     l945:
   672                           
   673                           ;Keypad.c: 151:     temp = PORTB;
   674     07B0  0806               	movf	6,w	;volatile
   675     07B1  00F6               	movwf	_temp
   676     07B2                     l947:
   677                           
   678                           ;Keypad.c: 153:     Lcd_Cmd(0x80);
   679     07B2  3080               	movlw	128
   680     07B3  120A  118A  26A5  120A  118A  	fcall	_Lcd_Cmd
   681                           
   682                           ;Keypad.c: 155:    switch (temp & 0XF0) {
   683     07B8  2FD5               	goto	l959
   684     07B9                     l949:
   685                           
   686                           ;Keypad.c: 158:             Lcd_Data('3');
   687     07B9  3033               	movlw	51
   688     07BA  120A  118A  2691  120A  118A  	fcall	_Lcd_Data
   689                           
   690                           ;Keypad.c: 159:             break;
   691     07BF  2FEC               	goto	l71
   692     07C0                     l951:
   693                           
   694                           ;Keypad.c: 162:             Lcd_Data('6');
   695     07C0  3036               	movlw	54
   696     07C1  120A  118A  2691  120A  118A  	fcall	_Lcd_Data
   697                           
   698                           ;Keypad.c: 163:             break;
   699     07C6  2FEC               	goto	l71
   700     07C7                     l953:
   701                           
   702                           ;Keypad.c: 166:             Lcd_Data('9');
   703     07C7  3039               	movlw	57
   704     07C8  120A  118A  2691  120A  118A  	fcall	_Lcd_Data
   705                           
   706                           ;Keypad.c: 167:             break;
   707     07CD  2FEC               	goto	l71
   708     07CE                     l955:
   709                           
   710                           ;Keypad.c: 170:             Lcd_Data('#');
   711     07CE  3023               	movlw	35
   712     07CF  120A  118A  2691  120A  118A  	fcall	_Lcd_Data
   713                           
   714                           ;Keypad.c: 171:             break;
   715     07D4  2FEC               	goto	l71
   716     07D5                     l959:
   717     07D5  0876               	movf	_temp,w
   718     07D6  39F0               	andlw	240
   719     07D7  00F3               	movwf	??_Keypad_Scanning
   720     07D8  01F4               	clrf	??_Keypad_Scanning+1
   721                           
   722                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   723                           ; Switch size 1, requested type "simple"
   724                           ; Number of cases is 1, Range of values is 0 to 0
   725                           ; switch strategies available:
   726                           ; Name         Instructions Cycles
   727                           ; simple_byte            4     3 (average)
   728                           ; direct_byte           11     8 (fixed)
   729                           ; jumptable            260     6 (fixed)
   730                           ;	Chosen strategy is simple_byte
   731     07D9  0874               	movf	??_Keypad_Scanning+1,w
   732     07DA  3A00               	xorlw	0	; case 0
   733     07DB  1903               	skipnz
   734     07DC  2FDE               	goto	l1043
   735     07DD  2FEC               	goto	l71
   736     07DE                     l1043:
   737                           
   738                           ; Switch size 1, requested type "simple"
   739                           ; Number of cases is 4, Range of values is 16 to 128
   740                           ; switch strategies available:
   741                           ; Name         Instructions Cycles
   742                           ; simple_byte           13     7 (average)
   743                           ; jumptable            263     9 (fixed)
   744                           ;	Chosen strategy is simple_byte
   745     07DE  0873               	movf	??_Keypad_Scanning,w
   746     07DF  3A10               	xorlw	16	; case 16
   747     07E0  1903               	skipnz
   748     07E1  2FB9               	goto	l949
   749     07E2  3A30               	xorlw	48	; case 32
   750     07E3  1903               	skipnz
   751     07E4  2FC0               	goto	l951
   752     07E5  3A60               	xorlw	96	; case 64
   753     07E6  1903               	skipnz
   754     07E7  2FC7               	goto	l953
   755     07E8  3AC0               	xorlw	192	; case 128
   756     07E9  1903               	skipnz
   757     07EA  2FCE               	goto	l955
   758     07EB  2FEC               	goto	l71
   759     07EC                     l71:
   760     07EC  0008               	return
   761     07ED                     __end_of_Keypad_Scanning:
   762                           
   763                           	psect	text3
   764     06BC                     __ptext3:	
   765 ;; *************** function _Configuration *****************
   766 ;; Defined at:
   767 ;;		line 52 in file "Keypad.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;  i               1    5[COMMON] unsigned char 
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   781 ;;      Params:         0       0       0       0       0
   782 ;;      Locals:         1       0       0       0       0
   783 ;;      Temps:          2       0       0       0       0
   784 ;;      Totals:         3       0       0       0       0
   785 ;;Total ram usage:        3 bytes
   786 ;; Hardware stack levels used: 1
   787 ;; Hardware stack levels required when called: 1
   788 ;; This function calls:
   789 ;;		_Lcd_Cmd
   790 ;;		_Lcd_Data
   791 ;; This function is called by:
   792 ;;		_main
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796     06BC                     _Configuration:	
   797                           ;psect for function _Configuration
   798                           
   799     06BC                     l871:	
   800                           ;incstack = 0
   801                           ; Regs used in _Configuration: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   802                           
   803                           
   804                           ;Keypad.c: 54:     TRISC = 0x00;
   805     06BC  1683               	bsf	3,5	;RP0=1, select bank1
   806     06BD  1303               	bcf	3,6	;RP1=0, select bank1
   807     06BE  0187               	clrf	7	;volatile
   808                           
   809                           ;Keypad.c: 56:     TRISD = 0x00;
   810     06BF  0188               	clrf	8	;volatile
   811                           
   812                           ;Keypad.c: 58:     PORTD = 0X00;
   813     06C0  1283               	bcf	3,5	;RP0=0, select bank0
   814     06C1  1303               	bcf	3,6	;RP1=0, select bank0
   815     06C2  0188               	clrf	8	;volatile
   816     06C3                     l873:
   817                           
   818                           ;Keypad.c: 60:     TRISB = 0xF0;
   819     06C3  30F0               	movlw	240
   820     06C4  1683               	bsf	3,5	;RP0=1, select bank1
   821     06C5  1303               	bcf	3,6	;RP1=0, select bank1
   822     06C6  0086               	movwf	6	;volatile
   823     06C7                     l875:
   824                           
   825                           ;Keypad.c: 62:     PORTB = 0x00;
   826     06C7  1283               	bcf	3,5	;RP0=0, select bank0
   827     06C8  1303               	bcf	3,6	;RP1=0, select bank0
   828     06C9  0186               	clrf	6	;volatile
   829     06CA                     l877:
   830                           
   831                           ;Keypad.c: 64:     PORTC = 0x00;
   832     06CA  0187               	clrf	7	;volatile
   833     06CB                     l879:
   834                           
   835                           ;Keypad.c: 67:     Lcd_Cmd(0x0C);
   836     06CB  300C               	movlw	12
   837     06CC  120A  118A  26A5  120A  118A  	fcall	_Lcd_Cmd
   838     06D1                     l881:
   839                           
   840                           ;Keypad.c: 69:     _delay((unsigned long)((10)*(12000000/4000.0)));
   841     06D1  3027               	movlw	39
   842     06D2  00F4               	movwf	??_Configuration+1
   843     06D3  30F5               	movlw	245
   844     06D4  00F3               	movwf	??_Configuration
   845     06D5                     u37:
   846     06D5  0BF3               	decfsz	??_Configuration,f
   847     06D6  2ED5               	goto	u37
   848     06D7  0BF4               	decfsz	??_Configuration+1,f
   849     06D8  2ED5               	goto	u37
   850     06D9                     l883:
   851                           
   852                           ;Keypad.c: 71:     Lcd_Cmd(0x01);
   853     06D9  3001               	movlw	1
   854     06DA  120A  118A  26A5  120A  118A  	fcall	_Lcd_Cmd
   855     06DF                     l885:
   856                           
   857                           ;Keypad.c: 73:     _delay((unsigned long)((10)*(12000000/4000.0)));
   858     06DF  3027               	movlw	39
   859     06E0  00F4               	movwf	??_Configuration+1
   860     06E1  30F5               	movlw	245
   861     06E2  00F3               	movwf	??_Configuration
   862     06E3                     u47:
   863     06E3  0BF3               	decfsz	??_Configuration,f
   864     06E4  2EE3               	goto	u47
   865     06E5  0BF4               	decfsz	??_Configuration+1,f
   866     06E6  2EE3               	goto	u47
   867     06E7                     l887:
   868                           
   869                           ;Keypad.c: 75:     Lcd_Cmd(0x38);
   870     06E7  3038               	movlw	56
   871     06E8  120A  118A  26A5  120A  118A  	fcall	_Lcd_Cmd
   872     06ED                     l889:
   873                           
   874                           ;Keypad.c: 77:     _delay((unsigned long)((10)*(12000000/4000.0)));
   875     06ED  3027               	movlw	39
   876     06EE  00F4               	movwf	??_Configuration+1
   877     06EF  30F5               	movlw	245
   878     06F0  00F3               	movwf	??_Configuration
   879     06F1                     u57:
   880     06F1  0BF3               	decfsz	??_Configuration,f
   881     06F2  2EF1               	goto	u57
   882     06F3  0BF4               	decfsz	??_Configuration+1,f
   883     06F4  2EF1               	goto	u57
   884     06F5                     l891:
   885                           
   886                           ;Keypad.c: 79:     Lcd_Cmd(0x06);
   887     06F5  3006               	movlw	6
   888     06F6  120A  118A  26A5  120A  118A  	fcall	_Lcd_Cmd
   889     06FB                     l893:
   890                           
   891                           ;Keypad.c: 81:     _delay((unsigned long)((10)*(12000000/4000.0)));
   892     06FB  3027               	movlw	39
   893     06FC  00F4               	movwf	??_Configuration+1
   894     06FD  30F5               	movlw	245
   895     06FE  00F3               	movwf	??_Configuration
   896     06FF                     u67:
   897     06FF  0BF3               	decfsz	??_Configuration,f
   898     0700  2EFF               	goto	u67
   899     0701  0BF4               	decfsz	??_Configuration+1,f
   900     0702  2EFF               	goto	u67
   901     0703                     l895:
   902                           
   903                           ;Keypad.c: 83:     Lcd_Cmd(0x81);
   904     0703  3081               	movlw	129
   905     0704  120A  118A  26A5  120A  118A  	fcall	_Lcd_Cmd
   906     0709                     l897:
   907                           
   908                           ;Keypad.c: 85:     _delay((unsigned long)((10)*(12000000/4000.0)));
   909     0709  3027               	movlw	39
   910     070A  00F4               	movwf	??_Configuration+1
   911     070B  30F5               	movlw	245
   912     070C  00F3               	movwf	??_Configuration
   913     070D                     u77:
   914     070D  0BF3               	decfsz	??_Configuration,f
   915     070E  2F0D               	goto	u77
   916     070F  0BF4               	decfsz	??_Configuration+1,f
   917     0710  2F0D               	goto	u77
   918     0711                     l899:
   919                           
   920                           ;Keypad.c: 87:     for (char i = 0; i < 9; i++) {
   921     0711  01F5               	clrf	Configuration@i
   922     0712                     l905:
   923                           
   924                           ;Keypad.c: 89:         Lcd_Data(result[i]);
   925     0712  0875               	movf	Configuration@i,w
   926     0713  3E20               	addlw	(low (_result| 0))& (0+255)
   927     0714  0084               	movwf	4
   928     0715  1383               	bcf	3,7	;select IRP bank0
   929     0716  0800               	movf	0,w
   930     0717  120A  118A  2691  120A  118A  	fcall	_Lcd_Data
   931     071C                     l907:
   932                           
   933                           ;Keypad.c: 91:     }
   934     071C  3001               	movlw	1
   935     071D  00FF               	movwf	btemp+1
   936     071E  087F               	movf	btemp+1,w
   937     071F  07F5               	addwf	Configuration@i,f
   938     0720                     l909:
   939     0720  3009               	movlw	9
   940     0721  0275               	subwf	Configuration@i,w
   941     0722  1C03               	skipc
   942     0723  2F25               	goto	u21
   943     0724  2F26               	goto	u20
   944     0725                     u21:
   945     0725  2F12               	goto	l905
   946     0726                     u20:
   947     0726                     l50:
   948     0726  0008               	return
   949     0727                     __end_of_Configuration:
   950                           
   951                           	psect	text4
   952     0691                     __ptext4:	
   953 ;; *************** function _Lcd_Data *****************
   954 ;; Defined at:
   955 ;;		line 55 in file "./LCD.h"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  data            1    wreg     unsigned char 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  data            1    2[COMMON] unsigned char 
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      void 
   962 ;; Registers used:
   963 ;;		wreg, status,2, status,0, btemp+1
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   969 ;;      Params:         0       0       0       0       0
   970 ;;      Locals:         1       0       0       0       0
   971 ;;      Temps:          2       0       0       0       0
   972 ;;      Totals:         3       0       0       0       0
   973 ;;Total ram usage:        3 bytes
   974 ;; Hardware stack levels used: 1
   975 ;; This function calls:
   976 ;;		Nothing
   977 ;; This function is called by:
   978 ;;		_Configuration
   979 ;;		_Keypad_Scanning
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983     0691                     _Lcd_Data:	
   984                           ;psect for function _Lcd_Data
   985                           
   986                           
   987                           ;incstack = 0
   988                           ; Regs used in _Lcd_Data: [wreg+status,2+status,0+btemp+1]
   989                           ;Lcd_Data@data stored from wreg
   990     0691  00F2               	movwf	Lcd_Data@data
   991     0692                     l853:
   992                           
   993                           ;./LCD.h: 59:     PORTD = data;
   994     0692  0872               	movf	Lcd_Data@data,w
   995     0693  1283               	bcf	3,5	;RP0=0, select bank0
   996     0694  1303               	bcf	3,6	;RP1=0, select bank0
   997     0695  0088               	movwf	8	;volatile
   998     0696                     l855:
   999                           
  1000                           ;./LCD.h: 61:     PORTC |= 0x40;
  1001     0696  1707               	bsf	7,6	;volatile
  1002     0697                     l857:
  1003                           
  1004                           ;./LCD.h: 63:     PORTC |= 0x80;
  1005     0697  1787               	bsf	7,7	;volatile
  1006     0698                     l859:
  1007                           
  1008                           ;./LCD.h: 65:     PORTC &= ~0x80;
  1009     0698  307F               	movlw	127
  1010     0699  00FF               	movwf	btemp+1
  1011     069A  087F               	movf	btemp+1,w
  1012     069B  0587               	andwf	7,f	;volatile
  1013     069C                     l861:
  1014                           
  1015                           ;./LCD.h: 67:     _delay((unsigned long)((10)*(12000000/4000.0)));
  1016     069C  3027               	movlw	39
  1017     069D  00F1               	movwf	??_Lcd_Data+1
  1018     069E  30F5               	movlw	245
  1019     069F  00F0               	movwf	??_Lcd_Data
  1020     06A0                     u87:
  1021     06A0  0BF0               	decfsz	??_Lcd_Data,f
  1022     06A1  2EA0               	goto	u87
  1023     06A2  0BF1               	decfsz	??_Lcd_Data+1,f
  1024     06A3  2EA0               	goto	u87
  1025     06A4                     l30:
  1026     06A4  0008               	return
  1027     06A5                     __end_of_Lcd_Data:
  1028                           
  1029                           	psect	text5
  1030     06A5                     __ptext5:	
  1031 ;; *************** function _Lcd_Cmd *****************
  1032 ;; Defined at:
  1033 ;;		line 72 in file "./LCD.h"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;  cmd             1    wreg     unsigned char 
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;  cmd             1    2[COMMON] unsigned char 
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      void 
  1040 ;; Registers used:
  1041 ;;		wreg, status,2, status,0, btemp+1
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1047 ;;      Params:         0       0       0       0       0
  1048 ;;      Locals:         1       0       0       0       0
  1049 ;;      Temps:          2       0       0       0       0
  1050 ;;      Totals:         3       0       0       0       0
  1051 ;;Total ram usage:        3 bytes
  1052 ;; Hardware stack levels used: 1
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_Configuration
  1057 ;;		_Keypad_Scanning
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061     06A5                     _Lcd_Cmd:	
  1062                           ;psect for function _Lcd_Cmd
  1063                           
  1064                           
  1065                           ;incstack = 0
  1066                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+btemp+1]
  1067                           ;Lcd_Cmd@cmd stored from wreg
  1068     06A5  00F2               	movwf	Lcd_Cmd@cmd
  1069     06A6                     l863:
  1070                           
  1071                           ;./LCD.h: 74:     PORTD = cmd;
  1072     06A6  0872               	movf	Lcd_Cmd@cmd,w
  1073     06A7  1283               	bcf	3,5	;RP0=0, select bank0
  1074     06A8  1303               	bcf	3,6	;RP1=0, select bank0
  1075     06A9  0088               	movwf	8	;volatile
  1076     06AA                     l865:
  1077                           
  1078                           ;./LCD.h: 76:     PORTC &= ~0x40;
  1079     06AA  30BF               	movlw	191
  1080     06AB  00FF               	movwf	btemp+1
  1081     06AC  087F               	movf	btemp+1,w
  1082     06AD  0587               	andwf	7,f	;volatile
  1083     06AE                     l867:
  1084                           
  1085                           ;./LCD.h: 79:     PORTC |= 0x80;
  1086     06AE  1787               	bsf	7,7	;volatile
  1087     06AF                     l869:
  1088                           
  1089                           ;./LCD.h: 81:     PORTC &= ~0x80;
  1090     06AF  307F               	movlw	127
  1091     06B0  00FF               	movwf	btemp+1
  1092     06B1  087F               	movf	btemp+1,w
  1093     06B2  0587               	andwf	7,f	;volatile
  1094                           
  1095                           ;./LCD.h: 83:     _delay((unsigned long)((10)*(12000000/4000.0)));
  1096     06B3  3027               	movlw	39
  1097     06B4  00F1               	movwf	??_Lcd_Cmd+1
  1098     06B5  30F5               	movlw	245
  1099     06B6  00F0               	movwf	??_Lcd_Cmd
  1100     06B7                     u97:
  1101     06B7  0BF0               	decfsz	??_Lcd_Cmd,f
  1102     06B8  2EB7               	goto	u97
  1103     06B9  0BF1               	decfsz	??_Lcd_Cmd+1,f
  1104     06BA  2EB7               	goto	u97
  1105     06BB                     l33:
  1106     06BB  0008               	return
  1107     06BC                     __end_of_Lcd_Cmd:
  1108     007E                     btemp	set	126	;btemp
  1109     007E                     wtemp0	set	126
  1110                           
  1111                           	psect	config
  1112                           
  1113                           ;Config register CONFIG @ 0x2007
  1114                           ;	Oscillator Selection bits
  1115                           ;	FOSC = EXTRC, RC oscillator
  1116                           ;	Watchdog Timer Enable bit
  1117                           ;	WDTE = OFF, WDT disabled
  1118                           ;	Power-up Timer Enable bit
  1119                           ;	PWRTE = OFF, PWRT disabled
  1120                           ;	Brown-out Reset Enable bit
  1121                           ;	BOREN = OFF, BOR disabled
  1122                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1123                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1124                           ;	Data EEPROM Memory Code Protection bit
  1125                           ;	CPD = OFF, Data EEPROM code protection off
  1126                           ;	Flash Program Memory Write Enable bits
  1127                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1128                           ;	In-Circuit Debugger Mode bit
  1129                           ;	DEBUG = 0x1, unprogrammed default
  1130                           ;	Flash Program Memory Code Protection bit
  1131                           ;	CP = OFF, Code protection off
  1132     2007                     	org	8199
  1133     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       7
    BANK0            80      0       9
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Configuration
    _Keypad_Scanning->_Lcd_Cmd
    _Keypad_Scanning->_Lcd_Data
    _Configuration->_Lcd_Cmd
    _Configuration->_Lcd_Data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     156
                      _Configuration
                    _Keypad_Scanning
                  _Lcd_Configuration
 ---------------------------------------------------------------------------------
 (1) _Lcd_Configuration                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Keypad_Scanning                                      2     2      0      44
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Data
 ---------------------------------------------------------------------------------
 (1) _Configuration                                        3     3      0     112
                                              3 COMMON     3     3      0
                            _Lcd_Cmd
                           _Lcd_Data
 ---------------------------------------------------------------------------------
 (2) _Lcd_Data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuration
     _Lcd_Cmd
     _Lcd_Data
   _Keypad_Scanning
     _Lcd_Cmd
     _Lcd_Data
   _Lcd_Configuration

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       9       5       11.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       7       1       50.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      10      12        0.0%
ABS                  0      0      10       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Oct 22 09:42:40 2023

                        pc 0002                         l30 06A4                         l33 06BB  
                       l50 0726                         l27 066A                         l61 07AB  
                       l71 07EC                         l55 076A                         u20 0726  
                       u21 0725                         u37 06D5                         u47 06E3  
                       u57 06F1                         u67 06FF                         u77 070D  
                       u87 06A0                         u97 06B7                         fsr 0004  
                      l911 0727                        l905 0712                        l921 0745  
                      l913 072C                        l681 065F                        l907 071C  
                      l931 0771                        l923 074C                        l915 0732  
                      l683 0665                        l861 069C                        l853 0692  
                      l909 0720                        l933 0778                        l917 0737  
                      l863 06A6                        l855 0696                        l871 06BC  
                      l951 07C0                        l935 077F                        l943 0794  
                      l919 073E                        l927 0753                        l865 06AA  
                      l857 0697                        l881 06D1                        l873 06C3  
                      l953 07C7                        l945 07B0                        l937 0786  
                      l929 076F                        l867 06AE                        l859 0698  
                      l891 06F5                        l883 06D9                        l875 06C7  
                      l955 07CE                        l947 07B2                        l939 078D  
                      l869 06AF                        l893 06FB                        l885 06DF  
                      l877 06CA                        l949 07B9                        l973 066B  
                      l895 0703                        l887 06E7                        l879 06CB  
                      l959 07D5                        l975 0670                        l897 0709  
                      l889 06ED                        l977 0675                        l899 0711  
                      _RB0 0030                        _RB1 0031                        _RB2 0032  
                      fsr0 0004                        indf 0000                       l1041 079D  
                     l1043 07DE                       l1039 075C                       _main 066B  
                     _temp 0076                       btemp 007E                       start 0000  
          __end_of_Lcd_Cmd 06BC                      ?_main 0070                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Data 06A5  
          __initialization 07ED               __end_of_main 067E                     ??_main 0076  
                ??_Lcd_Cmd 0070                     _result 0020    __end_of__initialization 07FC  
           __pcstackCOMMON 0070               __pidataBANK0 0656                  ?_Lcd_Data 0070  
    __end_of_Configuration 0727                 __pmaintext 066B                 ??_Lcd_Data 0070  
                  _Lcd_Cmd 06A5                    __ptext1 065F                    __ptext2 0727  
                  __ptext3 06BC                    __ptext4 0691                    __ptext5 06A5  
     end_of_initialization 07FC          ??_Keypad_Scanning 0073        start_initialization 07ED  
               init_fetch0 067E                __pdataBANK0 0020                __pbssCOMMON 0076  
                ___latbits 0002                   ?_Lcd_Cmd 0070          _Lcd_Configuration 065F  
       ?_Lcd_Configuration 0070             Configuration@i 0075        ??_Lcd_Configuration 0070  
             Lcd_Data@data 0072            _Keypad_Scanning 0727  __end_of_Lcd_Configuration 066B  
                 _Lcd_Data 0691              _Configuration 06BC    __end_of_Keypad_Scanning 07ED  
           ?_Configuration 0070                   init_ram0 0682                 Lcd_Cmd@cmd 0072  
         ?_Keypad_Scanning 0070            ??_Configuration 0073  
