

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Oct 24 19:23:24 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29     0000                     
    30                           ; Generated 22/03/2023 GMT
    31                           ; 
    32                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F877A Definitions
    62                           ; 
    63                           ; SFR Addresses
    64     0000                     	;# 
    65     0001                     	;# 
    66     0002                     	;# 
    67     0003                     	;# 
    68     0004                     	;# 
    69     0005                     	;# 
    70     0006                     	;# 
    71     0007                     	;# 
    72     0008                     	;# 
    73     0009                     	;# 
    74     000A                     	;# 
    75     000B                     	;# 
    76     000C                     	;# 
    77     000D                     	;# 
    78     000E                     	;# 
    79     000E                     	;# 
    80     000F                     	;# 
    81     0010                     	;# 
    82     0011                     	;# 
    83     0012                     	;# 
    84     0013                     	;# 
    85     0014                     	;# 
    86     0015                     	;# 
    87     0015                     	;# 
    88     0016                     	;# 
    89     0017                     	;# 
    90     0018                     	;# 
    91     0019                     	;# 
    92     001A                     	;# 
    93     001B                     	;# 
    94     001B                     	;# 
    95     001C                     	;# 
    96     001D                     	;# 
    97     001E                     	;# 
    98     001F                     	;# 
    99     0081                     	;# 
   100     0085                     	;# 
   101     0086                     	;# 
   102     0087                     	;# 
   103     0088                     	;# 
   104     0089                     	;# 
   105     008C                     	;# 
   106     008D                     	;# 
   107     008E                     	;# 
   108     0091                     	;# 
   109     0092                     	;# 
   110     0093                     	;# 
   111     0094                     	;# 
   112     0098                     	;# 
   113     0099                     	;# 
   114     009C                     	;# 
   115     009D                     	;# 
   116     009E                     	;# 
   117     009F                     	;# 
   118     010C                     	;# 
   119     010D                     	;# 
   120     010E                     	;# 
   121     010F                     	;# 
   122     018C                     	;# 
   123     018D                     	;# 
   124     0000                     	;# 
   125     0001                     	;# 
   126     0002                     	;# 
   127     0003                     	;# 
   128     0004                     	;# 
   129     0005                     	;# 
   130     0006                     	;# 
   131     0007                     	;# 
   132     0008                     	;# 
   133     0009                     	;# 
   134     000A                     	;# 
   135     000B                     	;# 
   136     000C                     	;# 
   137     000D                     	;# 
   138     000E                     	;# 
   139     000E                     	;# 
   140     000F                     	;# 
   141     0010                     	;# 
   142     0011                     	;# 
   143     0012                     	;# 
   144     0013                     	;# 
   145     0014                     	;# 
   146     0015                     	;# 
   147     0015                     	;# 
   148     0016                     	;# 
   149     0017                     	;# 
   150     0018                     	;# 
   151     0019                     	;# 
   152     001A                     	;# 
   153     001B                     	;# 
   154     001B                     	;# 
   155     001C                     	;# 
   156     001D                     	;# 
   157     001E                     	;# 
   158     001F                     	;# 
   159     0081                     	;# 
   160     0085                     	;# 
   161     0086                     	;# 
   162     0087                     	;# 
   163     0088                     	;# 
   164     0089                     	;# 
   165     008C                     	;# 
   166     008D                     	;# 
   167     008E                     	;# 
   168     0091                     	;# 
   169     0092                     	;# 
   170     0093                     	;# 
   171     0094                     	;# 
   172     0098                     	;# 
   173     0099                     	;# 
   174     009C                     	;# 
   175     009D                     	;# 
   176     009E                     	;# 
   177     009F                     	;# 
   178     010C                     	;# 
   179     010D                     	;# 
   180     010E                     	;# 
   181     010F                     	;# 
   182     018C                     	;# 
   183     018D                     	;# 
   184                           
   185                           	psect	idataBANK0
   186     05C6                     __pidataBANK0:
   187                           
   188                           ;initializer for _Write
   189     05C6  3457               	retlw	87
   190     05C7  3472               	retlw	114
   191     05C8  3469               	retlw	105
   192     05C9  3474               	retlw	116
   193     05CA  3465               	retlw	101
   194     05CB  343A               	retlw	58
   195     05CC  3400               	retlw	0
   196                           
   197                           ;initializer for _Read
   198     05CD  3452               	retlw	82
   199     05CE  3445               	retlw	69
   200     05CF  3441               	retlw	65
   201     05D0  3444               	retlw	68
   202     05D1  343A               	retlw	58
   203     05D2  3400               	retlw	0
   204                           
   205                           ;initializer for _Word
   206     05D3  3449               	retlw	73
   207     05D4  3432               	retlw	50
   208     05D5  3443               	retlw	67
   209     05D6  3400               	retlw	0
   210     0007                     _PORTC	set	7
   211     0008                     _PORTD	set	8
   212     0013                     _SSPBUF	set	19
   213     0014                     _SSPCON	set	20
   214     0063                     _SSPIF	set	99
   215     00A5                     _SSPEN	set	165
   216     0087                     _TRISC	set	135
   217     0088                     _TRISD	set	136
   218     0093                     _SSPADD	set	147
   219     0091                     _SSPCON2	set	145
   220     048B                     _RCEN	set	1163
   221     048E                     _ACKSTAT	set	1166
   222     048C                     _ACKEN	set	1164
   223     048D                     _ACKDT	set	1165
   224     04A6                     _CKE	set	1190
   225     04A7                     _SMP	set	1191
   226     043C                     _TRISC4	set	1084
   227     043B                     _TRISC3	set	1083
   228     0489                     _RSEN	set	1161
   229     048A                     _PEN	set	1162
   230     0488                     _SEN	set	1160
   231     04A2                     _READ_WRITE	set	1186
   232                           
   233                           	psect	cinit
   234     07EA                     start_initialization:	
   235                           ; #config settings
   236                           
   237     07EA                     __initialization:
   238                           
   239                           ; Initialize objects allocated to BANK0
   240     07EA  1383               	bcf	3,7	;select IRP bank0
   241     07EB  3031               	movlw	low (__pdataBANK0+17)
   242     07EC  00FD               	movwf	btemp+-1
   243     07ED  3005               	movlw	high __pidataBANK0
   244     07EE  00FE               	movwf	btemp
   245     07EF  30C6               	movlw	low __pidataBANK0
   246     07F0  00FF               	movwf	btemp+1
   247     07F1  3020               	movlw	low __pdataBANK0
   248     07F2  0084               	movwf	4
   249     07F3  120A  118A  25DB  120A  118A  	fcall	init_ram0
   250                           
   251                           ; Clear objects allocated to BANK0
   252     07F8  01B1               	clrf	__pbssBANK0& (0+127)
   253     07F9  01B2               	clrf	(__pbssBANK0+1)& (0+127)
   254     07FA  01B3               	clrf	(__pbssBANK0+2)& (0+127)
   255     07FB  01B4               	clrf	(__pbssBANK0+3)& (0+127)
   256     07FC                     end_of_initialization:	
   257                           ;End of C runtime variable initialization code
   258                           
   259     07FC                     __end_of__initialization:
   260     07FC  0183               	clrf	3
   261     07FD  120A  118A  2F71   	ljmp	_main	;jump to C main() function
   262                           
   263                           	psect	bssBANK0
   264     0031                     __pbssBANK0:
   265     0031                     _buff:
   266     0031                     	ds	1
   267     0032                     _result:
   268     0032                     	ds	3
   269                           
   270                           	psect	dataBANK0
   271     0020                     __pdataBANK0:
   272     0020                     _Write:
   273     0020                     	ds	7
   274     0027                     _Read:
   275     0027                     	ds	6
   276     002D                     _Word:
   277     002D                     	ds	4
   278                           
   279                           	psect	inittext
   280     05D7                     init_fetch0:	
   281                           ;	Called with low address in FSR and high address in W
   282                           
   283     05D7  087E               	movf	btemp,w
   284     05D8  008A               	movwf	10
   285     05D9  087F               	movf	btemp+1,w
   286     05DA  0082               	movwf	2
   287     05DB                     init_ram0:	
   288                           ;Called with:
   289                           ;	high address of idata address in btemp 
   290                           ;	low address of idata address in btemp+1 
   291                           ;	low address of data in FSR
   292                           ;	high address + 1 of data in btemp-1
   293                           
   294     05DB  120A  118A  25D7  120A  118A  	fcall	init_fetch0
   295     05E0  0080               	movwf	0
   296     05E1  0A84               	incf	4,f
   297     05E2  0804               	movf	4,w
   298     05E3  067D               	xorwf	btemp+-1,w
   299     05E4  1903               	btfsc	3,2
   300     05E5  3400               	retlw	0
   301     05E6  0AFF               	incf	btemp+1,f
   302     05E7  1903               	btfsc	3,2
   303     05E8  0AFE               	incf	btemp,f
   304     05E9  2DDB               	goto	init_ram0
   305                           
   306                           	psect	cstackCOMMON
   307     0070                     __pcstackCOMMON:
   308     0070                     ?_I2C_Repeat_Start:
   309     0070                     ??_I2C_Repeat_Start:	
   310                           ; 1 bytes @ 0x0
   311                           
   312     0070                     ?_I2C_Read_Data:	
   313                           ; 1 bytes @ 0x0
   314                           
   315     0070                     ?_Lcd_Data:	
   316                           ; 1 bytes @ 0x0
   317                           
   318     0070                     ??_Lcd_Data:	
   319                           ; 1 bytes @ 0x0
   320                           
   321     0070                     ?_Lcd_Cmd:	
   322                           ; 1 bytes @ 0x0
   323                           
   324     0070                     ??_Lcd_Cmd:	
   325                           ; 1 bytes @ 0x0
   326                           
   327     0070                     ?_I2C_Master_Init:	
   328                           ; 1 bytes @ 0x0
   329                           
   330     0070                     ??_I2C_Master_Init:	
   331                           ; 1 bytes @ 0x0
   332                           
   333     0070                     ?_I2C_Start:	
   334                           ; 1 bytes @ 0x0
   335                           
   336     0070                     ??_I2C_Start:	
   337                           ; 1 bytes @ 0x0
   338                           
   339     0070                     ?_I2C_Stop:	
   340                           ; 1 bytes @ 0x0
   341                           
   342     0070                     ??_I2C_Stop:	
   343                           ; 1 bytes @ 0x0
   344                           
   345     0070                     ?_I2C_Wait:	
   346                           ; 1 bytes @ 0x0
   347                           
   348     0070                     ??_I2C_Wait:	
   349                           ; 1 bytes @ 0x0
   350                           
   351     0070                     ?_I2C_ACK:	
   352                           ; 1 bytes @ 0x0
   353                           
   354     0070                     ??_I2C_ACK:	
   355                           ; 1 bytes @ 0x0
   356                           
   357     0070                     ?_I2C_NACK:	
   358                           ; 1 bytes @ 0x0
   359                           
   360     0070                     ??_I2C_NACK:	
   361                           ; 1 bytes @ 0x0
   362                           
   363     0070                     ?_Lcd_Print:	
   364                           ; 1 bytes @ 0x0
   365                           
   366     0070                     ?_Lcd_Configuration:	
   367                           ; 1 bytes @ 0x0
   368                           
   369     0070                     ?_main:	
   370                           ; 1 bytes @ 0x0
   371                           
   372     0070                     ?_I2C_Write_Data:	
   373                           ; 1 bytes @ 0x0
   374                           
   375     0070                     I2C_Read_Data@flag:	
   376                           ; 2 bytes @ 0x0
   377                           
   378                           
   379                           ; 2 bytes @ 0x0
   380     0070                     	ds	2
   381     0072                     ??_I2C_Write_Data:
   382     0072                     ??_I2C_Read_Data:	
   383                           ; 1 bytes @ 0x2
   384                           
   385     0072                     Lcd_Data@data:	
   386                           ; 1 bytes @ 0x2
   387                           
   388     0072                     Lcd_Cmd@cmd:	
   389                           ; 1 bytes @ 0x2
   390                           
   391                           
   392                           ; 1 bytes @ 0x2
   393     0072                     	ds	1
   394     0073                     ??_Lcd_Print:
   395     0073                     ??_Lcd_Configuration:	
   396                           ; 1 bytes @ 0x3
   397                           
   398     0073                     Lcd_Print@x:	
   399                           ; 1 bytes @ 0x3
   400                           
   401                           
   402                           ; 1 bytes @ 0x3
   403     0073                     	ds	1
   404     0074                     I2C_Write_Data@data:
   405                           
   406                           ; 1 bytes @ 0x4
   407     0074                     	ds	1
   408     0075                     ?_I2C_Page_Write:
   409     0075                     ?_I2C_Page_Read:	
   410                           ; 1 bytes @ 0x5
   411                           
   412     0075                     I2C_Page_Write@Device_add:	
   413                           ; 1 bytes @ 0x5
   414                           
   415     0075                     I2C_Page_Read@Size:	
   416                           ; 1 bytes @ 0x5
   417                           
   418                           
   419                           ; 2 bytes @ 0x5
   420     0075                     	ds	1
   421     0076                     I2C_Page_Write@Reg_add:
   422                           
   423                           ; 1 bytes @ 0x6
   424     0076                     	ds	1
   425     0077                     ??_I2C_Page_Write:
   426     0077                     I2C_Page_Read@Device_add:	
   427                           ; 1 bytes @ 0x7
   428                           
   429                           
   430                           ; 1 bytes @ 0x7
   431     0077                     	ds	1
   432     0078                     I2C_Page_Read@Reg_add:
   433                           
   434                           ; 1 bytes @ 0x8
   435     0078                     	ds	1
   436     0079                     ??_I2C_Page_Read:
   437     0079                     I2C_Page_Write@data:	
   438                           ; 1 bytes @ 0x9
   439                           
   440                           
   441                           ; 1 bytes @ 0x9
   442     0079                     	ds	2
   443     007B                     I2C_Page_Read@result:
   444                           
   445                           ; 1 bytes @ 0xB
   446     007B                     	ds	1
   447     007C                     I2C_Page_Read@i:
   448                           
   449                           ; 2 bytes @ 0xC
   450     007C                     	ds	2
   451                           
   452                           	psect	cstackBANK0
   453     0035                     __pcstackBANK0:
   454     0035                     ??_main:
   455                           
   456                           ; 1 bytes @ 0x0
   457     0035                     	ds	3
   458                           
   459                           	psect	maintext
   460     0771                     __pmaintext:	
   461 ;;
   462 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   463 ;;
   464 ;; *************** function _main *****************
   465 ;; Defined at:
   466 ;;		line 25 in file "I2C_MASTER.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;		None
   469 ;; Auto vars:     Size  Location     Type
   470 ;;		None
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   475 ;; Tracked objects:
   476 ;;		On entry : B00/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   480 ;;      Params:         0       0       0       0       0
   481 ;;      Locals:         0       0       0       0       0
   482 ;;      Temps:          0       3       0       0       0
   483 ;;      Totals:         0       3       0       0       0
   484 ;;Total ram usage:        3 bytes
   485 ;; Hardware stack levels required when called: 4
   486 ;; This function calls:
   487 ;;		_I2C_Master_Init
   488 ;;		_I2C_Page_Read
   489 ;;		_I2C_Page_Write
   490 ;;		_I2C_Start
   491 ;;		_I2C_Stop
   492 ;;		_Lcd_Cmd
   493 ;;		_Lcd_Configuration
   494 ;;		_Lcd_Print
   495 ;; This function is called by:
   496 ;;		Startup code after reset
   497 ;; This function uses a non-reentrant model
   498 ;;
   499                           
   500     0771                     _main:	
   501                           ;psect for function _main
   502                           
   503     0771                     l1058:	
   504                           ;incstack = 0
   505                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   506                           
   507                           
   508                           ;I2C_MASTER.c: 29:     Lcd_Configuration();
   509     0771  120A  118A  26B6  120A  118A  	fcall	_Lcd_Configuration
   510                           
   511                           ;I2C_MASTER.c: 31:     Lcd_Cmd(0x80);
   512     0776  3080               	movlw	128
   513     0777  120A  118A  2616  120A  118A  	fcall	_Lcd_Cmd
   514     077C                     l1060:
   515                           
   516                           ;I2C_MASTER.c: 33:     Lcd_Print(Read);
   517     077C  3027               	movlw	(low (_Read| 0))& (0+255)
   518     077D  120A  118A  25FF  120A  118A  	fcall	_Lcd_Print
   519     0782                     l1062:
   520                           
   521                           ;I2C_MASTER.c: 35:     Lcd_Cmd(0xC0);
   522     0782  30C0               	movlw	192
   523     0783  120A  118A  2616  120A  118A  	fcall	_Lcd_Cmd
   524                           
   525                           ;I2C_MASTER.c: 37:     Lcd_Print(Write);
   526     0788  3020               	movlw	(low (_Write| 0))& (0+255)
   527     0789  120A  118A  25FF  120A  118A  	fcall	_Lcd_Print
   528     078E                     l1064:
   529                           
   530                           ;I2C_MASTER.c: 41:     I2C_Master_Init();
   531     078E  120A  118A  25B7  120A  118A  	fcall	_I2C_Master_Init
   532     0793                     l1066:
   533                           
   534                           ;I2C_MASTER.c: 45:     Lcd_Cmd(0x80+6);
   535     0793  3086               	movlw	134
   536     0794  120A  118A  2616  120A  118A  	fcall	_Lcd_Cmd
   537     0799                     l1068:
   538                           
   539                           ;I2C_MASTER.c: 47:     Lcd_Print(Word);
   540     0799  302D               	movlw	(low (_Word| 0))& (0+255)
   541     079A  120A  118A  25FF  120A  118A  	fcall	_Lcd_Print
   542     079F                     l1070:
   543                           
   544                           ;I2C_MASTER.c: 49:     I2C_Start();
   545     079F  120A  118A  2580  120A  118A  	fcall	_I2C_Start
   546     07A4                     l1072:
   547                           
   548                           ;I2C_MASTER.c: 51:     I2C_Page_Write(Word,0xA0,0x0020);
   549     07A4  30A0               	movlw	160
   550     07A5  00F5               	movwf	I2C_Page_Write@Device_add
   551     07A6  3020               	movlw	32
   552     07A7  00F6               	movwf	I2C_Page_Write@Reg_add
   553     07A8  302D               	movlw	(low (_Word| 0))& (0+255)
   554     07A9  120A  118A  2677  120A  118A  	fcall	_I2C_Page_Write
   555     07AE                     l1074:
   556                           
   557                           ;I2C_MASTER.c: 53:     I2C_Stop();
   558     07AE  120A  118A  2589  120A  118A  	fcall	_I2C_Stop
   559     07B3                     l1076:
   560                           
   561                           ;I2C_MASTER.c: 55:     _delay((unsigned long)((100)*(16000000/4000.0)));
   562     07B3  3003               	movlw	3
   563     07B4  1283               	bcf	3,5	;RP0=0, select bank0
   564     07B5  1303               	bcf	3,6	;RP1=0, select bank0
   565     07B6  00B7               	movwf	??_main+2
   566     07B7  3008               	movlw	8
   567     07B8  00B6               	movwf	??_main+1
   568     07B9  3076               	movlw	118
   569     07BA  00B5               	movwf	??_main
   570     07BB                     u217:
   571     07BB  0BB5               	decfsz	??_main,f
   572     07BC  2FBB               	goto	u217
   573     07BD  0BB6               	decfsz	??_main+1,f
   574     07BE  2FBB               	goto	u217
   575     07BF  0BB7               	decfsz	??_main+2,f
   576     07C0  2FBB               	goto	u217
   577     07C1  0000               	nop
   578     07C2                     l1078:
   579                           
   580                           ;I2C_MASTER.c: 59:     I2C_Start();
   581     07C2  120A  118A  2580  120A  118A  	fcall	_I2C_Start
   582     07C7                     l1080:
   583                           
   584                           ;I2C_MASTER.c: 61:     I2C_Page_Read(result,3 -1,0xA0,0x0020);
   585     07C7  3002               	movlw	2
   586     07C8  00F5               	movwf	I2C_Page_Read@Size
   587     07C9  3000               	movlw	0
   588     07CA  00F6               	movwf	I2C_Page_Read@Size+1
   589     07CB  30A0               	movlw	160
   590     07CC  00F7               	movwf	I2C_Page_Read@Device_add
   591     07CD  3020               	movlw	32
   592     07CE  00F8               	movwf	I2C_Page_Read@Reg_add
   593     07CF  3032               	movlw	(low (_result| 0))& (0+255)
   594     07D0  120A  118A  270D  120A  118A  	fcall	_I2C_Page_Read
   595     07D5                     l1082:
   596                           
   597                           ;I2C_MASTER.c: 63:     I2C_Stop();
   598     07D5  120A  118A  2589  120A  118A  	fcall	_I2C_Stop
   599     07DA                     l1084:
   600                           
   601                           ;I2C_MASTER.c: 65:     Lcd_Cmd(0xC6);
   602     07DA  30C6               	movlw	198
   603     07DB  120A  118A  2616  120A  118A  	fcall	_Lcd_Cmd
   604     07E0                     l1086:
   605                           
   606                           ;I2C_MASTER.c: 69:     Lcd_Print(result);
   607     07E0  3032               	movlw	(low (_result| 0))& (0+255)
   608     07E1  120A  118A  25FF  120A  118A  	fcall	_Lcd_Print
   609     07E6                     l153:	
   610                           ;I2C_MASTER.c: 71:     while(1);
   611                           
   612     07E6                     l154:
   613     07E6  2FE6               	goto	l153
   614     07E7  120A  118A  2800   	ljmp	start
   615     07EA                     __end_of_main:
   616                           
   617                           	psect	text1
   618     05FF                     __ptext1:	
   619 ;; *************** function _Lcd_Print *****************
   620 ;; Defined at:
   621 ;;		line 43 in file "./LCD.h"
   622 ;; Parameters:    Size  Location     Type
   623 ;;  x               1    wreg     PTR unsigned char 
   624 ;;		 -> result(3), Word(4), Write(7), Read(6), 
   625 ;; Auto vars:     Size  Location     Type
   626 ;;  x               1    3[COMMON] PTR unsigned char 
   627 ;;		 -> result(3), Word(4), Write(7), Read(6), 
   628 ;; Return value:  Size  Location     Type
   629 ;;                  1    wreg      void 
   630 ;; Registers used:
   631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   637 ;;      Params:         0       0       0       0       0
   638 ;;      Locals:         1       0       0       0       0
   639 ;;      Temps:          0       0       0       0       0
   640 ;;      Totals:         1       0       0       0       0
   641 ;;Total ram usage:        1 bytes
   642 ;; Hardware stack levels used: 1
   643 ;; Hardware stack levels required when called: 1
   644 ;; This function calls:
   645 ;;		_Lcd_Data
   646 ;; This function is called by:
   647 ;;		_main
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651     05FF                     _Lcd_Print:	
   652                           ;psect for function _Lcd_Print
   653                           
   654                           
   655                           ;incstack = 0
   656                           ; Regs used in _Lcd_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   657                           ;Lcd_Print@x stored from wreg
   658     05FF  00F3               	movwf	Lcd_Print@x
   659     0600                     l1032:
   660                           
   661                           ;./LCD.h: 45:     while(*x){
   662     0600  2E0D               	goto	l1038
   663     0601                     l1034:
   664                           
   665                           ;./LCD.h: 46:         Lcd_Data(*x);
   666     0601  0873               	movf	Lcd_Print@x,w
   667     0602  0084               	movwf	4
   668     0603  0800               	movf	0,w
   669     0604  120A  118A  25EA  120A  118A  	fcall	_Lcd_Data
   670     0609                     l1036:
   671                           
   672                           ;./LCD.h: 47:         x++;
   673     0609  3001               	movlw	1
   674     060A  00FF               	movwf	btemp+1
   675     060B  087F               	movf	btemp+1,w
   676     060C  07F3               	addwf	Lcd_Print@x,f
   677     060D                     l1038:
   678                           
   679                           ;./LCD.h: 45:     while(*x){
   680     060D  0873               	movf	Lcd_Print@x,w
   681     060E  0084               	movwf	4
   682     060F  1383               	bcf	3,7	;select IRP bank0
   683     0610  0800               	movf	0,w
   684     0611  1D03               	btfss	3,2
   685     0612  2E14               	goto	u201
   686     0613  2E15               	goto	u200
   687     0614                     u201:
   688     0614  2E01               	goto	l1034
   689     0615                     u200:
   690     0615                     l131:
   691     0615  0008               	return
   692     0616                     __end_of_Lcd_Print:
   693                           
   694                           	psect	text2
   695     05EA                     __ptext2:	
   696 ;; *************** function _Lcd_Data *****************
   697 ;; Defined at:
   698 ;;		line 84 in file "./LCD.h"
   699 ;; Parameters:    Size  Location     Type
   700 ;;  data            1    wreg     unsigned char 
   701 ;; Auto vars:     Size  Location     Type
   702 ;;  data            1    2[COMMON] unsigned char 
   703 ;; Return value:  Size  Location     Type
   704 ;;                  1    wreg      void 
   705 ;; Registers used:
   706 ;;		wreg, status,2, status,0, btemp+1
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   712 ;;      Params:         0       0       0       0       0
   713 ;;      Locals:         1       0       0       0       0
   714 ;;      Temps:          2       0       0       0       0
   715 ;;      Totals:         3       0       0       0       0
   716 ;;Total ram usage:        3 bytes
   717 ;; Hardware stack levels used: 1
   718 ;; This function calls:
   719 ;;		Nothing
   720 ;; This function is called by:
   721 ;;		_Lcd_Print
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725     05EA                     _Lcd_Data:	
   726                           ;psect for function _Lcd_Data
   727                           
   728                           
   729                           ;incstack = 0
   730                           ; Regs used in _Lcd_Data: [wreg+status,2+status,0+btemp+1]
   731                           ;Lcd_Data@data stored from wreg
   732     05EA  00F2               	movwf	Lcd_Data@data
   733     05EB                     l966:
   734                           
   735                           ;./LCD.h: 88:     PORTD = data;
   736     05EB  0872               	movf	Lcd_Data@data,w
   737     05EC  1283               	bcf	3,5	;RP0=0, select bank0
   738     05ED  1303               	bcf	3,6	;RP1=0, select bank0
   739     05EE  0088               	movwf	8	;volatile
   740     05EF                     l968:
   741                           
   742                           ;./LCD.h: 90:     PORTC |= 0x40;
   743     05EF  1707               	bsf	7,6	;volatile
   744     05F0                     l970:
   745                           
   746                           ;./LCD.h: 92:     PORTC |= 0x80;
   747     05F0  1787               	bsf	7,7	;volatile
   748     05F1                     l972:
   749                           
   750                           ;./LCD.h: 94:     PORTC &= ~0x80;
   751     05F1  307F               	movlw	127
   752     05F2  00FF               	movwf	btemp+1
   753     05F3  087F               	movf	btemp+1,w
   754     05F4  0587               	andwf	7,f	;volatile
   755     05F5                     l974:
   756                           
   757                           ;./LCD.h: 96:     _delay((unsigned long)((10)*(16000000/4000.0)));
   758     05F5  3034               	movlw	52
   759     05F6  00F1               	movwf	??_Lcd_Data+1
   760     05F7  30F1               	movlw	241
   761     05F8  00F0               	movwf	??_Lcd_Data
   762     05F9                     u227:
   763     05F9  0BF0               	decfsz	??_Lcd_Data,f
   764     05FA  2DF9               	goto	u227
   765     05FB  0BF1               	decfsz	??_Lcd_Data+1,f
   766     05FC  2DF9               	goto	u227
   767     05FD  2DFE               	nop2
   768     05FE                     l137:
   769     05FE  0008               	return
   770     05FF                     __end_of_Lcd_Data:
   771                           
   772                           	psect	text3
   773     06B6                     __ptext3:	
   774 ;; *************** function _Lcd_Configuration *****************
   775 ;; Defined at:
   776 ;;		line 52 in file "./LCD.h"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;		None
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   790 ;;      Params:         0       0       0       0       0
   791 ;;      Locals:         0       0       0       0       0
   792 ;;      Temps:          2       0       0       0       0
   793 ;;      Totals:         2       0       0       0       0
   794 ;;Total ram usage:        2 bytes
   795 ;; Hardware stack levels used: 1
   796 ;; Hardware stack levels required when called: 1
   797 ;; This function calls:
   798 ;;		_Lcd_Cmd
   799 ;; This function is called by:
   800 ;;		_main
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804     06B6                     _Lcd_Configuration:	
   805                           ;psect for function _Lcd_Configuration
   806                           
   807     06B6                     l1040:	
   808                           ;incstack = 0
   809                           ; Regs used in _Lcd_Configuration: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   810                           
   811                           
   812                           ;./LCD.h: 54:     TRISD=0x00;
   813     06B6  1683               	bsf	3,5	;RP0=1, select bank1
   814     06B7  1303               	bcf	3,6	;RP1=0, select bank1
   815     06B8  0188               	clrf	8	;volatile
   816                           
   817                           ;./LCD.h: 56:     PORTD=0x00;
   818     06B9  1283               	bcf	3,5	;RP0=0, select bank0
   819     06BA  1303               	bcf	3,6	;RP1=0, select bank0
   820     06BB  0188               	clrf	8	;volatile
   821     06BC                     l1042:
   822                           
   823                           ;./LCD.h: 58:     TRISC=(TRISC&0x3F);
   824     06BC  1683               	bsf	3,5	;RP0=1, select bank1
   825     06BD  1303               	bcf	3,6	;RP1=0, select bank1
   826     06BE  0807               	movf	7,w	;volatile
   827     06BF  393F               	andlw	63
   828     06C0  0087               	movwf	7	;volatile
   829     06C1                     l1044:
   830                           
   831                           ;./LCD.h: 61:     Lcd_Cmd(0x0C);
   832     06C1  300C               	movlw	12
   833     06C2  120A  118A  2616  120A  118A  	fcall	_Lcd_Cmd
   834     06C7                     l1046:
   835                           
   836                           ;./LCD.h: 63:     _delay((unsigned long)((10)*(16000000/4000.0)));
   837     06C7  3034               	movlw	52
   838     06C8  00F4               	movwf	??_Lcd_Configuration+1
   839     06C9  30F1               	movlw	241
   840     06CA  00F3               	movwf	??_Lcd_Configuration
   841     06CB                     u237:
   842     06CB  0BF3               	decfsz	??_Lcd_Configuration,f
   843     06CC  2ECB               	goto	u237
   844     06CD  0BF4               	decfsz	??_Lcd_Configuration+1,f
   845     06CE  2ECB               	goto	u237
   846     06CF  2ED0               	nop2
   847                           
   848                           ;./LCD.h: 65:     Lcd_Cmd(0x01);
   849     06D0  3001               	movlw	1
   850     06D1  120A  118A  2616  120A  118A  	fcall	_Lcd_Cmd
   851     06D6                     l1048:
   852                           
   853                           ;./LCD.h: 67:     _delay((unsigned long)((10)*(16000000/4000.0)));
   854     06D6  3034               	movlw	52
   855     06D7  00F4               	movwf	??_Lcd_Configuration+1
   856     06D8  30F1               	movlw	241
   857     06D9  00F3               	movwf	??_Lcd_Configuration
   858     06DA                     u247:
   859     06DA  0BF3               	decfsz	??_Lcd_Configuration,f
   860     06DB  2EDA               	goto	u247
   861     06DC  0BF4               	decfsz	??_Lcd_Configuration+1,f
   862     06DD  2EDA               	goto	u247
   863     06DE  2EDF               	nop2
   864     06DF                     l1050:
   865                           
   866                           ;./LCD.h: 69:     Lcd_Cmd(0x38);
   867     06DF  3038               	movlw	56
   868     06E0  120A  118A  2616  120A  118A  	fcall	_Lcd_Cmd
   869                           
   870                           ;./LCD.h: 71:     _delay((unsigned long)((10)*(16000000/4000.0)));
   871     06E5  3034               	movlw	52
   872     06E6  00F4               	movwf	??_Lcd_Configuration+1
   873     06E7  30F1               	movlw	241
   874     06E8  00F3               	movwf	??_Lcd_Configuration
   875     06E9                     u257:
   876     06E9  0BF3               	decfsz	??_Lcd_Configuration,f
   877     06EA  2EE9               	goto	u257
   878     06EB  0BF4               	decfsz	??_Lcd_Configuration+1,f
   879     06EC  2EE9               	goto	u257
   880     06ED  2EEE               	nop2
   881     06EE                     l1052:
   882                           
   883                           ;./LCD.h: 73:     Lcd_Cmd(0x06);
   884     06EE  3006               	movlw	6
   885     06EF  120A  118A  2616  120A  118A  	fcall	_Lcd_Cmd
   886     06F4                     l1054:
   887                           
   888                           ;./LCD.h: 75:     _delay((unsigned long)((10)*(16000000/4000.0)));
   889     06F4  3034               	movlw	52
   890     06F5  00F4               	movwf	??_Lcd_Configuration+1
   891     06F6  30F1               	movlw	241
   892     06F7  00F3               	movwf	??_Lcd_Configuration
   893     06F8                     u267:
   894     06F8  0BF3               	decfsz	??_Lcd_Configuration,f
   895     06F9  2EF8               	goto	u267
   896     06FA  0BF4               	decfsz	??_Lcd_Configuration+1,f
   897     06FB  2EF8               	goto	u267
   898     06FC  2EFD               	nop2
   899                           
   900                           ;./LCD.h: 77:     Lcd_Cmd(0x81);
   901     06FD  3081               	movlw	129
   902     06FE  120A  118A  2616  120A  118A  	fcall	_Lcd_Cmd
   903     0703                     l1056:
   904                           
   905                           ;./LCD.h: 79:     _delay((unsigned long)((10)*(16000000/4000.0)));
   906     0703  3034               	movlw	52
   907     0704  00F4               	movwf	??_Lcd_Configuration+1
   908     0705  30F1               	movlw	241
   909     0706  00F3               	movwf	??_Lcd_Configuration
   910     0707                     u277:
   911     0707  0BF3               	decfsz	??_Lcd_Configuration,f
   912     0708  2F07               	goto	u277
   913     0709  0BF4               	decfsz	??_Lcd_Configuration+1,f
   914     070A  2F07               	goto	u277
   915     070B  2F0C               	nop2
   916     070C                     l134:
   917     070C  0008               	return
   918     070D                     __end_of_Lcd_Configuration:
   919                           
   920                           	psect	text4
   921     0616                     __ptext4:	
   922 ;; *************** function _Lcd_Cmd *****************
   923 ;; Defined at:
   924 ;;		line 101 in file "./LCD.h"
   925 ;; Parameters:    Size  Location     Type
   926 ;;  cmd             1    wreg     unsigned char 
   927 ;; Auto vars:     Size  Location     Type
   928 ;;  cmd             1    2[COMMON] unsigned char 
   929 ;; Return value:  Size  Location     Type
   930 ;;                  1    wreg      void 
   931 ;; Registers used:
   932 ;;		wreg, status,2, status,0, btemp+1
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   938 ;;      Params:         0       0       0       0       0
   939 ;;      Locals:         1       0       0       0       0
   940 ;;      Temps:          2       0       0       0       0
   941 ;;      Totals:         3       0       0       0       0
   942 ;;Total ram usage:        3 bytes
   943 ;; Hardware stack levels used: 1
   944 ;; This function calls:
   945 ;;		Nothing
   946 ;; This function is called by:
   947 ;;		_Lcd_Configuration
   948 ;;		_main
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952     0616                     _Lcd_Cmd:	
   953                           ;psect for function _Lcd_Cmd
   954                           
   955                           
   956                           ;incstack = 0
   957                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+btemp+1]
   958                           ;Lcd_Cmd@cmd stored from wreg
   959     0616  00F2               	movwf	Lcd_Cmd@cmd
   960     0617                     l976:
   961                           
   962                           ;./LCD.h: 103:     PORTD = cmd;
   963     0617  0872               	movf	Lcd_Cmd@cmd,w
   964     0618  1283               	bcf	3,5	;RP0=0, select bank0
   965     0619  1303               	bcf	3,6	;RP1=0, select bank0
   966     061A  0088               	movwf	8	;volatile
   967     061B                     l978:
   968                           
   969                           ;./LCD.h: 105:     PORTC &= ~0x40;
   970     061B  30BF               	movlw	191
   971     061C  00FF               	movwf	btemp+1
   972     061D  087F               	movf	btemp+1,w
   973     061E  0587               	andwf	7,f	;volatile
   974     061F                     l980:
   975                           
   976                           ;./LCD.h: 108:     PORTC |= 0x80;
   977     061F  1787               	bsf	7,7	;volatile
   978     0620                     l982:
   979                           
   980                           ;./LCD.h: 110:     PORTC &= ~0x80;
   981     0620  307F               	movlw	127
   982     0621  00FF               	movwf	btemp+1
   983     0622  087F               	movf	btemp+1,w
   984     0623  0587               	andwf	7,f	;volatile
   985                           
   986                           ;./LCD.h: 112:     _delay((unsigned long)((10)*(16000000/4000.0)));
   987     0624  3034               	movlw	52
   988     0625  00F1               	movwf	??_Lcd_Cmd+1
   989     0626  30F1               	movlw	241
   990     0627  00F0               	movwf	??_Lcd_Cmd
   991     0628                     u287:
   992     0628  0BF0               	decfsz	??_Lcd_Cmd,f
   993     0629  2E28               	goto	u287
   994     062A  0BF1               	decfsz	??_Lcd_Cmd+1,f
   995     062B  2E28               	goto	u287
   996     062C  2E2D               	nop2
   997     062D                     l140:
   998     062D  0008               	return
   999     062E                     __end_of_Lcd_Cmd:
  1000                           
  1001                           	psect	text5
  1002     0589                     __ptext5:	
  1003 ;; *************** function _I2C_Stop *****************
  1004 ;; Defined at:
  1005 ;;		line 146 in file "./I2C.h"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;		None
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;		None
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		wreg, status,2, status,0, pclath, cstack
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1019 ;;      Params:         0       0       0       0       0
  1020 ;;      Locals:         0       0       0       0       0
  1021 ;;      Temps:          0       0       0       0       0
  1022 ;;      Totals:         0       0       0       0       0
  1023 ;;Total ram usage:        0 bytes
  1024 ;; Hardware stack levels used: 1
  1025 ;; Hardware stack levels required when called: 1
  1026 ;; This function calls:
  1027 ;;		_I2C_Wait
  1028 ;; This function is called by:
  1029 ;;		_main
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033     0589                     _I2C_Stop:	
  1034                           ;psect for function _I2C_Stop
  1035                           
  1036     0589                     l1024:	
  1037                           ;incstack = 0
  1038                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  1039                           
  1040                           
  1041                           ;./I2C.h: 148: I2C_Wait();
  1042     0589  120A  118A  25AA  120A  118A  	fcall	_I2C_Wait
  1043     058E                     l1026:
  1044                           
  1045                           ;./I2C.h: 150: PEN=1;
  1046     058E  1683               	bsf	3,5	;RP0=1, select bank1
  1047     058F  1303               	bcf	3,6	;RP1=0, select bank1
  1048     0590  1511               	bsf	17,2	;volatile
  1049     0591                     l100:
  1050     0591  0008               	return
  1051     0592                     __end_of_I2C_Stop:
  1052                           
  1053                           	psect	text6
  1054     0580                     __ptext6:	
  1055 ;; *************** function _I2C_Start *****************
  1056 ;; Defined at:
  1057 ;;		line 136 in file "./I2C.h"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;		None
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;		None
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  1    wreg      void 
  1064 ;; Registers used:
  1065 ;;		wreg, status,2, status,0, pclath, cstack
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1071 ;;      Params:         0       0       0       0       0
  1072 ;;      Locals:         0       0       0       0       0
  1073 ;;      Temps:          0       0       0       0       0
  1074 ;;      Totals:         0       0       0       0       0
  1075 ;;Total ram usage:        0 bytes
  1076 ;; Hardware stack levels used: 1
  1077 ;; Hardware stack levels required when called: 1
  1078 ;; This function calls:
  1079 ;;		_I2C_Wait
  1080 ;; This function is called by:
  1081 ;;		_main
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085     0580                     _I2C_Start:	
  1086                           ;psect for function _I2C_Start
  1087                           
  1088     0580                     l1020:	
  1089                           ;incstack = 0
  1090                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  1091                           
  1092                           
  1093                           ;./I2C.h: 138: I2C_Wait();
  1094     0580  120A  118A  25AA  120A  118A  	fcall	_I2C_Wait
  1095     0585                     l1022:
  1096                           
  1097                           ;./I2C.h: 140: SEN=1;
  1098     0585  1683               	bsf	3,5	;RP0=1, select bank1
  1099     0586  1303               	bcf	3,6	;RP1=0, select bank1
  1100     0587  1411               	bsf	17,0	;volatile
  1101     0588                     l97:
  1102     0588  0008               	return
  1103     0589                     __end_of_I2C_Start:
  1104                           
  1105                           	psect	text7
  1106     0677                     __ptext7:	
  1107 ;; *************** function _I2C_Page_Write *****************
  1108 ;; Defined at:
  1109 ;;		line 68 in file "./I2C.h"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;  data            1    wreg     PTR unsigned char 
  1112 ;;		 -> Word(4), 
  1113 ;;  Device_add      1    5[COMMON] unsigned char 
  1114 ;;  Reg_add         1    6[COMMON] unsigned char 
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  data            1    9[COMMON] PTR unsigned char 
  1117 ;;		 -> Word(4), 
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      void 
  1120 ;; Registers used:
  1121 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1127 ;;      Params:         2       0       0       0       0
  1128 ;;      Locals:         1       0       0       0       0
  1129 ;;      Temps:          2       0       0       0       0
  1130 ;;      Totals:         5       0       0       0       0
  1131 ;;Total ram usage:        5 bytes
  1132 ;; Hardware stack levels used: 1
  1133 ;; Hardware stack levels required when called: 2
  1134 ;; This function calls:
  1135 ;;		_I2C_Repeat_Start
  1136 ;;		_I2C_Write_Data
  1137 ;; This function is called by:
  1138 ;;		_main
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142     0677                     _I2C_Page_Write:	
  1143                           ;psect for function _I2C_Page_Write
  1144                           
  1145                           
  1146                           ;incstack = 0
  1147                           ; Regs used in _I2C_Page_Write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1148                           ;I2C_Page_Write@data stored from wreg
  1149     0677  00F9               	movwf	I2C_Page_Write@data
  1150     0678                     l984:
  1151                           
  1152                           ;./I2C.h: 70:   while(I2C_Write_Data((Device_add & 0xFE))){
  1153     0678  2E7E               	goto	l71
  1154     0679                     l986:
  1155                           
  1156                           ;./I2C.h: 72:       I2C_Repeat_Start();
  1157     0679  120A  118A  2577  120A  118A  	fcall	_I2C_Repeat_Start
  1158     067E                     l71:	
  1159                           ;./I2C.h: 74:   }
  1160                           
  1161                           
  1162                           ;./I2C.h: 70:   while(I2C_Write_Data((Device_add & 0xFE))){
  1163     067E  0875               	movf	I2C_Page_Write@Device_add,w
  1164     067F  39FE               	andlw	254
  1165     0680  120A  118A  262E  120A  118A  	fcall	_I2C_Write_Data
  1166     0685  0870               	movf	?_I2C_Write_Data,w
  1167     0686  0471               	iorwf	?_I2C_Write_Data+1,w
  1168     0687  1D03               	btfss	3,2
  1169     0688  2E8A               	goto	u151
  1170     0689  2E8B               	goto	u150
  1171     068A                     u151:
  1172     068A  2E79               	goto	l986
  1173     068B                     u150:
  1174     068B                     l988:
  1175                           
  1176                           ;./I2C.h: 76:   I2C_Write_Data(Reg_add>>8);
  1177     068B  3000               	movlw	0
  1178     068C  120A  118A  262E  120A  118A  	fcall	_I2C_Write_Data
  1179                           
  1180                           ;./I2C.h: 78:   I2C_Write_Data((unsigned char)Reg_add);
  1181     0691  0876               	movf	I2C_Page_Write@Reg_add,w
  1182     0692  120A  118A  262E  120A  118A  	fcall	_I2C_Write_Data
  1183                           
  1184                           ;./I2C.h: 80:   while(*data){
  1185     0697  2EA4               	goto	l994
  1186     0698                     l990:
  1187                           
  1188                           ;./I2C.h: 82:       I2C_Write_Data(*data);
  1189     0698  0879               	movf	I2C_Page_Write@data,w
  1190     0699  0084               	movwf	4
  1191     069A  0800               	movf	0,w
  1192     069B  120A  118A  262E  120A  118A  	fcall	_I2C_Write_Data
  1193     06A0                     l992:
  1194                           
  1195                           ;./I2C.h: 84:        data++;
  1196     06A0  3001               	movlw	1
  1197     06A1  00FF               	movwf	btemp+1
  1198     06A2  087F               	movf	btemp+1,w
  1199     06A3  07F9               	addwf	I2C_Page_Write@data,f
  1200     06A4                     l994:
  1201                           
  1202                           ;./I2C.h: 80:   while(*data){
  1203     06A4  0879               	movf	I2C_Page_Write@data,w
  1204     06A5  0084               	movwf	4
  1205     06A6  1383               	bcf	3,7	;select IRP bank0
  1206     06A7  0800               	movf	0,w
  1207     06A8  1D03               	btfss	3,2
  1208     06A9  2EAB               	goto	u161
  1209     06AA  2EAC               	goto	u160
  1210     06AB                     u161:
  1211     06AB  2E98               	goto	l990
  1212     06AC                     u160:
  1213     06AC                     l996:
  1214                           
  1215                           ;./I2C.h: 87:   _delay((unsigned long)((10)*(16000000/4000.0)));
  1216     06AC  3034               	movlw	52
  1217     06AD  00F8               	movwf	??_I2C_Page_Write+1
  1218     06AE  30F1               	movlw	241
  1219     06AF  00F7               	movwf	??_I2C_Page_Write
  1220     06B0                     u297:
  1221     06B0  0BF7               	decfsz	??_I2C_Page_Write,f
  1222     06B1  2EB0               	goto	u297
  1223     06B2  0BF8               	decfsz	??_I2C_Page_Write+1,f
  1224     06B3  2EB0               	goto	u297
  1225     06B4  2EB5               	nop2
  1226     06B5                     l77:
  1227     06B5  0008               	return
  1228     06B6                     __end_of_I2C_Page_Write:
  1229                           
  1230                           	psect	text8
  1231     070D                     __ptext8:	
  1232 ;; *************** function _I2C_Page_Read *****************
  1233 ;; Defined at:
  1234 ;;		line 93 in file "./I2C.h"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  result          1    wreg     PTR unsigned char 
  1237 ;;		 -> result(3), 
  1238 ;;  Size            2    5[COMMON] int 
  1239 ;;  Device_add      1    7[COMMON] unsigned char 
  1240 ;;  Reg_add         1    8[COMMON] unsigned char 
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;  result          1   11[COMMON] PTR unsigned char 
  1243 ;;		 -> result(3), 
  1244 ;;  i               2   12[COMMON] int 
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      void 
  1247 ;; Registers used:
  1248 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1254 ;;      Params:         4       0       0       0       0
  1255 ;;      Locals:         3       0       0       0       0
  1256 ;;      Temps:          2       0       0       0       0
  1257 ;;      Totals:         9       0       0       0       0
  1258 ;;Total ram usage:        9 bytes
  1259 ;; Hardware stack levels used: 1
  1260 ;; Hardware stack levels required when called: 3
  1261 ;; This function calls:
  1262 ;;		_I2C_Read_Data
  1263 ;;		_I2C_Repeat_Start
  1264 ;;		_I2C_Write_Data
  1265 ;; This function is called by:
  1266 ;;		_main
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270     070D                     _I2C_Page_Read:	
  1271                           ;psect for function _I2C_Page_Read
  1272                           
  1273                           
  1274                           ;incstack = 0
  1275                           ; Regs used in _I2C_Page_Read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1276                           ;I2C_Page_Read@result stored from wreg
  1277     070D  00FB               	movwf	I2C_Page_Read@result
  1278     070E                     l998:
  1279                           
  1280                           ;./I2C.h: 96:   while(I2C_Write_Data(Device_add & 0xFE)){
  1281     070E  2F14               	goto	l80
  1282     070F                     l1000:
  1283                           
  1284                           ;./I2C.h: 97:       I2C_Repeat_Start();
  1285     070F  120A  118A  2577  120A  118A  	fcall	_I2C_Repeat_Start
  1286     0714                     l80:	
  1287                           ;./I2C.h: 99:   }
  1288                           
  1289                           
  1290                           ;./I2C.h: 96:   while(I2C_Write_Data(Device_add & 0xFE)){
  1291     0714  0877               	movf	I2C_Page_Read@Device_add,w
  1292     0715  39FE               	andlw	254
  1293     0716  120A  118A  262E  120A  118A  	fcall	_I2C_Write_Data
  1294     071B  0870               	movf	?_I2C_Write_Data,w
  1295     071C  0471               	iorwf	?_I2C_Write_Data+1,w
  1296     071D  1D03               	btfss	3,2
  1297     071E  2F20               	goto	u171
  1298     071F  2F21               	goto	u170
  1299     0720                     u171:
  1300     0720  2F0F               	goto	l1000
  1301     0721                     u170:
  1302     0721                     l1002:
  1303                           
  1304                           ;./I2C.h: 101:   I2C_Write_Data(Reg_add>>8);
  1305     0721  3000               	movlw	0
  1306     0722  120A  118A  262E  120A  118A  	fcall	_I2C_Write_Data
  1307                           
  1308                           ;./I2C.h: 103:   I2C_Write_Data((unsigned char)Reg_add);
  1309     0727  0878               	movf	I2C_Page_Read@Reg_add,w
  1310     0728  120A  118A  262E  120A  118A  	fcall	_I2C_Write_Data
  1311                           
  1312                           ;./I2C.h: 106:   I2C_Repeat_Start();
  1313     072D  120A  118A  2577  120A  118A  	fcall	_I2C_Repeat_Start
  1314                           
  1315                           ;./I2C.h: 108:   while(I2C_Write_Data(Device_add | 0x01))
  1316     0732  2F38               	goto	l83
  1317     0733                     l1004:
  1318                           
  1319                           ;./I2C.h: 109:       I2C_Repeat_Start();
  1320     0733  120A  118A  2577  120A  118A  	fcall	_I2C_Repeat_Start
  1321     0738                     l83:
  1322                           
  1323                           ;./I2C.h: 108:   while(I2C_Write_Data(Device_add | 0x01))
  1324     0738  0877               	movf	I2C_Page_Read@Device_add,w
  1325     0739  3801               	iorlw	1
  1326     073A  120A  118A  262E  120A  118A  	fcall	_I2C_Write_Data
  1327     073F  0870               	movf	?_I2C_Write_Data,w
  1328     0740  0471               	iorwf	?_I2C_Write_Data+1,w
  1329     0741  1D03               	btfss	3,2
  1330     0742  2F44               	goto	u181
  1331     0743  2F45               	goto	u180
  1332     0744                     u181:
  1333     0744  2F33               	goto	l1004
  1334     0745                     u180:
  1335     0745                     l1006:
  1336                           
  1337                           ;./I2C.h: 112:   for(int i=Size;i>=0;i--)
  1338     0745  0876               	movf	I2C_Page_Read@Size+1,w
  1339     0746  00FD               	movwf	I2C_Page_Read@i+1
  1340     0747  0875               	movf	I2C_Page_Read@Size,w
  1341     0748  00FC               	movwf	I2C_Page_Read@i
  1342     0749                     l1008:
  1343     0749  1FFD               	btfss	I2C_Page_Read@i+1,7
  1344     074A  2F4C               	goto	u191
  1345     074B  2F4D               	goto	u190
  1346     074C                     u191:
  1347     074C  2F4E               	goto	l1012
  1348     074D                     u190:
  1349     074D  2F69               	goto	l1018
  1350     074E                     l1012:
  1351                           
  1352                           ;./I2C.h: 113:   {;./I2C.h: 115:       result[Size-i]=(unsigned char)I2C_Read_Data(i);
  1353     074E  087B               	movf	I2C_Page_Read@result,w
  1354     074F  00F9               	movwf	??_I2C_Page_Read
  1355     0750  087C               	movf	I2C_Page_Read@i,w
  1356     0751  02F9               	subwf	??_I2C_Page_Read,f
  1357     0752  0875               	movf	I2C_Page_Read@Size,w
  1358     0753  0779               	addwf	??_I2C_Page_Read,w
  1359     0754  00FA               	movwf	??_I2C_Page_Read+1
  1360     0755  087A               	movf	??_I2C_Page_Read+1,w
  1361     0756  0084               	movwf	4
  1362     0757  087D               	movf	I2C_Page_Read@i+1,w
  1363     0758  00F1               	movwf	I2C_Read_Data@flag+1
  1364     0759  087C               	movf	I2C_Page_Read@i,w
  1365     075A  00F0               	movwf	I2C_Read_Data@flag
  1366     075B  120A  118A  264C  120A  118A  	fcall	_I2C_Read_Data
  1367     0760  1383               	bcf	3,7	;select IRP bank0
  1368     0761  0080               	movwf	0
  1369     0762                     l1014:
  1370                           
  1371                           ;./I2C.h: 116:   }
  1372     0762  30FF               	movlw	255
  1373     0763  07FC               	addwf	I2C_Page_Read@i,f
  1374     0764  1803               	skipnc
  1375     0765  0AFD               	incf	I2C_Page_Read@i+1,f
  1376     0766  30FF               	movlw	255
  1377     0767  07FD               	addwf	I2C_Page_Read@i+1,f
  1378     0768  2F49               	goto	l1008
  1379     0769                     l1018:
  1380                           
  1381                           ;./I2C.h: 118:   result[Size+1]=0;
  1382     0769  0875               	movf	I2C_Page_Read@Size,w
  1383     076A  077B               	addwf	I2C_Page_Read@result,w
  1384     076B  00F9               	movwf	??_I2C_Page_Read
  1385     076C  0A79               	incf	??_I2C_Page_Read,w
  1386     076D  0084               	movwf	4
  1387     076E  1383               	bcf	3,7	;select IRP bank0
  1388     076F  0180               	clrf	0
  1389     0770                     l88:
  1390     0770  0008               	return
  1391     0771                     __end_of_I2C_Page_Read:
  1392                           
  1393                           	psect	text9
  1394     062E                     __ptext9:	
  1395 ;; *************** function _I2C_Write_Data *****************
  1396 ;; Defined at:
  1397 ;;		line 214 in file "./I2C.h"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;  data            1    wreg     unsigned char 
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  data            1    4[COMMON] unsigned char 
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  2    0[COMMON] int 
  1404 ;; Registers used:
  1405 ;;		wreg, status,2, status,0, pclath, cstack
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1411 ;;      Params:         2       0       0       0       0
  1412 ;;      Locals:         1       0       0       0       0
  1413 ;;      Temps:          2       0       0       0       0
  1414 ;;      Totals:         5       0       0       0       0
  1415 ;;Total ram usage:        5 bytes
  1416 ;; Hardware stack levels used: 1
  1417 ;; Hardware stack levels required when called: 1
  1418 ;; This function calls:
  1419 ;;		_I2C_Wait
  1420 ;; This function is called by:
  1421 ;;		_I2C_Page_Write
  1422 ;;		_I2C_Page_Read
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426     062E                     _I2C_Write_Data:	
  1427                           ;psect for function _I2C_Write_Data
  1428                           
  1429                           
  1430                           ;incstack = 0
  1431                           ; Regs used in _I2C_Write_Data: [wreg+status,2+status,0+pclath+cstack]
  1432                           ;I2C_Write_Data@data stored from wreg
  1433     062E  00F4               	movwf	I2C_Write_Data@data
  1434     062F                     l938:
  1435                           
  1436                           ;./I2C.h: 216:  I2C_Wait();
  1437     062F  120A  118A  25AA  120A  118A  	fcall	_I2C_Wait
  1438     0634                     l940:
  1439                           
  1440                           ;./I2C.h: 218:  SSPBUF=data;
  1441     0634  0874               	movf	I2C_Write_Data@data,w
  1442     0635  1283               	bcf	3,5	;RP0=0, select bank0
  1443     0636  1303               	bcf	3,6	;RP1=0, select bank0
  1444     0637  0093               	movwf	19	;volatile
  1445     0638                     l942:
  1446                           
  1447                           ;./I2C.h: 220:  I2C_Wait();
  1448     0638  120A  118A  25AA  120A  118A  	fcall	_I2C_Wait
  1449     063D                     l944:
  1450                           
  1451                           ;./I2C.h: 222:   return (int)ACKSTAT;
  1452     063D  1003               	clrc
  1453     063E  1683               	bsf	3,5	;RP0=1, select bank1
  1454     063F  1303               	bcf	3,6	;RP1=0, select bank1
  1455     0640  1B11               	btfsc	17,6	;volatile
  1456     0641  1403               	setc
  1457     0642  3000               	movlw	0
  1458     0643  1803               	skipnc
  1459     0644  3001               	movlw	1
  1460     0645  00F2               	movwf	??_I2C_Write_Data
  1461     0646  01F3               	clrf	??_I2C_Write_Data+1
  1462     0647  0872               	movf	??_I2C_Write_Data,w
  1463     0648  00F0               	movwf	?_I2C_Write_Data
  1464     0649  0873               	movf	??_I2C_Write_Data+1,w
  1465     064A  00F1               	movwf	?_I2C_Write_Data+1
  1466     064B                     l115:
  1467     064B  0008               	return
  1468     064C                     __end_of_I2C_Write_Data:
  1469                           
  1470                           	psect	text10
  1471     0577                     __ptext10:	
  1472 ;; *************** function _I2C_Repeat_Start *****************
  1473 ;; Defined at:
  1474 ;;		line 156 in file "./I2C.h"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;		None
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2, status,0, pclath, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1488 ;;      Params:         0       0       0       0       0
  1489 ;;      Locals:         0       0       0       0       0
  1490 ;;      Temps:          0       0       0       0       0
  1491 ;;      Totals:         0       0       0       0       0
  1492 ;;Total ram usage:        0 bytes
  1493 ;; Hardware stack levels used: 1
  1494 ;; Hardware stack levels required when called: 1
  1495 ;; This function calls:
  1496 ;;		_I2C_Wait
  1497 ;; This function is called by:
  1498 ;;		_I2C_Page_Write
  1499 ;;		_I2C_Page_Read
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503     0577                     _I2C_Repeat_Start:	
  1504                           ;psect for function _I2C_Repeat_Start
  1505                           
  1506     0577                     l934:	
  1507                           ;incstack = 0
  1508                           ; Regs used in _I2C_Repeat_Start: [wreg+status,2+status,0+pclath+cstack]
  1509                           
  1510                           
  1511                           ;./I2C.h: 158: I2C_Wait();
  1512     0577  120A  118A  25AA  120A  118A  	fcall	_I2C_Wait
  1513     057C                     l936:
  1514                           
  1515                           ;./I2C.h: 160: RSEN=1;
  1516     057C  1683               	bsf	3,5	;RP0=1, select bank1
  1517     057D  1303               	bcf	3,6	;RP1=0, select bank1
  1518     057E  1491               	bsf	17,1	;volatile
  1519     057F                     l103:
  1520     057F  0008               	return
  1521     0580                     __end_of_I2C_Repeat_Start:
  1522                           
  1523                           	psect	text11
  1524     064C                     __ptext11:	
  1525 ;; *************** function _I2C_Read_Data *****************
  1526 ;; Defined at:
  1527 ;;		line 227 in file "./I2C.h"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;  flag            2    0[COMMON] int 
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;		None
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  1    wreg      unsigned char 
  1534 ;; Registers used:
  1535 ;;		wreg, status,2, status,0, pclath, cstack
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1541 ;;      Params:         2       0       0       0       0
  1542 ;;      Locals:         0       0       0       0       0
  1543 ;;      Temps:          0       0       0       0       0
  1544 ;;      Totals:         2       0       0       0       0
  1545 ;;Total ram usage:        2 bytes
  1546 ;; Hardware stack levels used: 1
  1547 ;; Hardware stack levels required when called: 2
  1548 ;; This function calls:
  1549 ;;		_I2C_ACK
  1550 ;;		_I2C_NACK
  1551 ;;		_I2C_Wait
  1552 ;; This function is called by:
  1553 ;;		_I2C_Page_Read
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557     064C                     _I2C_Read_Data:	
  1558                           ;psect for function _I2C_Read_Data
  1559                           
  1560     064C                     l948:	
  1561                           ;incstack = 0
  1562                           ; Regs used in _I2C_Read_Data: [wreg+status,2+status,0+pclath+cstack]
  1563                           
  1564                           
  1565                           ;./I2C.h: 229:   I2C_Wait();
  1566     064C  120A  118A  25AA  120A  118A  	fcall	_I2C_Wait
  1567     0651                     l950:
  1568                           
  1569                           ;./I2C.h: 231:   RCEN=1;
  1570     0651  1683               	bsf	3,5	;RP0=1, select bank1
  1571     0652  1303               	bcf	3,6	;RP1=0, select bank1
  1572     0653  1591               	bsf	17,3	;volatile
  1573                           
  1574                           ;./I2C.h: 233:   I2C_Wait();
  1575     0654  120A  118A  25AA  120A  118A  	fcall	_I2C_Wait
  1576     0659                     l118:	
  1577                           ;./I2C.h: 235:    while(!SSPIF);
  1578                           
  1579     0659  1283               	bcf	3,5	;RP0=0, select bank0
  1580     065A  1303               	bcf	3,6	;RP1=0, select bank0
  1581     065B  1D8C               	btfss	12,3	;volatile
  1582     065C  2E5E               	goto	u131
  1583     065D  2E5F               	goto	u130
  1584     065E                     u131:
  1585     065E  2E59               	goto	l118
  1586     065F                     u130:
  1587     065F                     l952:
  1588                           
  1589                           ;./I2C.h: 237:   buff=SSPBUF;
  1590     065F  0813               	movf	19,w	;volatile
  1591     0660  00B1               	movwf	_buff
  1592     0661                     l954:
  1593                           
  1594                           ;./I2C.h: 239:   SSPIF=0;
  1595     0661  118C               	bcf	12,3	;volatile
  1596     0662                     l956:
  1597                           
  1598                           ;./I2C.h: 241:   (flag!=0)?I2C_ACK():I2C_NACK();
  1599     0662  0870               	movf	I2C_Read_Data@flag,w
  1600     0663  0471               	iorwf	I2C_Read_Data@flag+1,w
  1601     0664  1903               	btfsc	3,2
  1602     0665  2E67               	goto	u141
  1603     0666  2E68               	goto	u140
  1604     0667                     u141:
  1605     0667  2E6E               	goto	l960
  1606     0668                     u140:
  1607     0668                     l958:
  1608     0668  120A  118A  2592  120A  118A  	fcall	_I2C_ACK
  1609     066D  2E73               	goto	l962
  1610     066E                     l960:
  1611     066E  120A  118A  259E  120A  118A  	fcall	_I2C_NACK
  1612     0673                     l962:
  1613                           
  1614                           ;./I2C.h: 243:   return buff;
  1615     0673  1283               	bcf	3,5	;RP0=0, select bank0
  1616     0674  1303               	bcf	3,6	;RP1=0, select bank0
  1617     0675  0831               	movf	_buff,w
  1618     0676                     l125:
  1619     0676  0008               	return
  1620     0677                     __end_of_I2C_Read_Data:
  1621                           
  1622                           	psect	text12
  1623     059E                     __ptext12:	
  1624 ;; *************** function _I2C_NACK *****************
  1625 ;; Defined at:
  1626 ;;		line 201 in file "./I2C.h"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;		None
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;		None
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		wreg, status,2, status,0, pclath, cstack
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1640 ;;      Params:         0       0       0       0       0
  1641 ;;      Locals:         0       0       0       0       0
  1642 ;;      Temps:          0       0       0       0       0
  1643 ;;      Totals:         0       0       0       0       0
  1644 ;;Total ram usage:        0 bytes
  1645 ;; Hardware stack levels used: 1
  1646 ;; Hardware stack levels required when called: 1
  1647 ;; This function calls:
  1648 ;;		_I2C_Wait
  1649 ;; This function is called by:
  1650 ;;		_I2C_Read_Data
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654     059E                     _I2C_NACK:	
  1655                           ;psect for function _I2C_NACK
  1656                           
  1657     059E                     l928:	
  1658                           ;incstack = 0
  1659                           ; Regs used in _I2C_NACK: [wreg+status,2+status,0+pclath+cstack]
  1660                           
  1661                           
  1662                           ;./I2C.h: 203:  ACKDT=1;
  1663     059E  1683               	bsf	3,5	;RP0=1, select bank1
  1664     059F  1303               	bcf	3,6	;RP1=0, select bank1
  1665     05A0  1691               	bsf	17,5	;volatile
  1666     05A1                     l930:
  1667                           
  1668                           ;./I2C.h: 205:  I2C_Wait();
  1669     05A1  120A  118A  25AA  120A  118A  	fcall	_I2C_Wait
  1670     05A6                     l932:
  1671                           
  1672                           ;./I2C.h: 207:  ACKEN=1;
  1673     05A6  1683               	bsf	3,5	;RP0=1, select bank1
  1674     05A7  1303               	bcf	3,6	;RP1=0, select bank1
  1675     05A8  1611               	bsf	17,4	;volatile
  1676     05A9                     l112:
  1677     05A9  0008               	return
  1678     05AA                     __end_of_I2C_NACK:
  1679                           
  1680                           	psect	text13
  1681     0592                     __ptext13:	
  1682 ;; *************** function _I2C_ACK *****************
  1683 ;; Defined at:
  1684 ;;		line 188 in file "./I2C.h"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;		None
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;		None
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      void 
  1691 ;; Registers used:
  1692 ;;		wreg, status,2, status,0, pclath, cstack
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1698 ;;      Params:         0       0       0       0       0
  1699 ;;      Locals:         0       0       0       0       0
  1700 ;;      Temps:          0       0       0       0       0
  1701 ;;      Totals:         0       0       0       0       0
  1702 ;;Total ram usage:        0 bytes
  1703 ;; Hardware stack levels used: 1
  1704 ;; Hardware stack levels required when called: 1
  1705 ;; This function calls:
  1706 ;;		_I2C_Wait
  1707 ;; This function is called by:
  1708 ;;		_I2C_Read_Data
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712     0592                     _I2C_ACK:	
  1713                           ;psect for function _I2C_ACK
  1714                           
  1715     0592                     l922:	
  1716                           ;incstack = 0
  1717                           ; Regs used in _I2C_ACK: [wreg+status,2+status,0+pclath+cstack]
  1718                           
  1719                           
  1720                           ;./I2C.h: 190:  ACKDT=0;
  1721     0592  1683               	bsf	3,5	;RP0=1, select bank1
  1722     0593  1303               	bcf	3,6	;RP1=0, select bank1
  1723     0594  1291               	bcf	17,5	;volatile
  1724     0595                     l924:
  1725                           
  1726                           ;./I2C.h: 192:  I2C_Wait();
  1727     0595  120A  118A  25AA  120A  118A  	fcall	_I2C_Wait
  1728     059A                     l926:
  1729                           
  1730                           ;./I2C.h: 194:     ACKEN=1;
  1731     059A  1683               	bsf	3,5	;RP0=1, select bank1
  1732     059B  1303               	bcf	3,6	;RP1=0, select bank1
  1733     059C  1611               	bsf	17,4	;volatile
  1734     059D                     l109:
  1735     059D  0008               	return
  1736     059E                     __end_of_I2C_ACK:
  1737                           
  1738                           	psect	text14
  1739     05AA                     __ptext14:	
  1740 ;; *************** function _I2C_Wait *****************
  1741 ;; Defined at:
  1742 ;;		line 127 in file "./I2C.h"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;		None
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;		None
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  1    wreg      void 
  1749 ;; Registers used:
  1750 ;;		wreg, status,2
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1756 ;;      Params:         0       0       0       0       0
  1757 ;;      Locals:         0       0       0       0       0
  1758 ;;      Temps:          0       0       0       0       0
  1759 ;;      Totals:         0       0       0       0       0
  1760 ;;Total ram usage:        0 bytes
  1761 ;; Hardware stack levels used: 1
  1762 ;; This function calls:
  1763 ;;		Nothing
  1764 ;; This function is called by:
  1765 ;;		_I2C_Start
  1766 ;;		_I2C_Stop
  1767 ;;		_I2C_Repeat_Start
  1768 ;;		_I2C_ACK
  1769 ;;		_I2C_NACK
  1770 ;;		_I2C_Write_Data
  1771 ;;		_I2C_Read_Data
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775     05AA                     _I2C_Wait:	
  1776                           ;psect for function _I2C_Wait
  1777                           
  1778     05AA                     l918:	
  1779                           ;incstack = 0
  1780                           ; Regs used in _I2C_Wait: [wreg+status,2]
  1781                           
  1782     05AA                     l91:	
  1783                           ;./I2C.h: 129: while(READ_WRITE || SSPCON2&0X1F);
  1784                           
  1785     05AA  1683               	bsf	3,5	;RP0=1, select bank1
  1786     05AB  1303               	bcf	3,6	;RP1=0, select bank1
  1787     05AC  1914               	btfsc	20,2	;volatile
  1788     05AD  2DAF               	goto	u111
  1789     05AE  2DB0               	goto	u110
  1790     05AF                     u111:
  1791     05AF  2DAA               	goto	l91
  1792     05B0                     u110:
  1793     05B0                     l920:
  1794     05B0  0811               	movf	17,w	;volatile
  1795     05B1  391F               	andlw	31
  1796     05B2  1D03               	btfss	3,2
  1797     05B3  2DB5               	goto	u121
  1798     05B4  2DB6               	goto	u120
  1799     05B5                     u121:
  1800     05B5  2DAA               	goto	l91
  1801     05B6                     u120:
  1802     05B6                     l94:
  1803     05B6  0008               	return
  1804     05B7                     __end_of_I2C_Wait:
  1805                           
  1806                           	psect	text15
  1807     05B7                     __ptext15:	
  1808 ;; *************** function _I2C_Master_Init *****************
  1809 ;; Defined at:
  1810 ;;		line 166 in file "./I2C.h"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;		None
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;		None
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      void 
  1817 ;; Registers used:
  1818 ;;		wreg
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1824 ;;      Params:         0       0       0       0       0
  1825 ;;      Locals:         0       0       0       0       0
  1826 ;;      Temps:          0       0       0       0       0
  1827 ;;      Totals:         0       0       0       0       0
  1828 ;;Total ram usage:        0 bytes
  1829 ;; Hardware stack levels used: 1
  1830 ;; This function calls:
  1831 ;;		Nothing
  1832 ;; This function is called by:
  1833 ;;		_main
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837     05B7                     _I2C_Master_Init:	
  1838                           ;psect for function _I2C_Master_Init
  1839                           
  1840     05B7                     l1028:	
  1841                           ;incstack = 0
  1842                           ; Regs used in _I2C_Master_Init: [wreg]
  1843                           
  1844                           
  1845                           ;./I2C.h: 168: TRISC3=1;
  1846     05B7  1683               	bsf	3,5	;RP0=1, select bank1
  1847     05B8  1303               	bcf	3,6	;RP1=0, select bank1
  1848     05B9  1587               	bsf	7,3	;volatile
  1849                           
  1850                           ;./I2C.h: 170: TRISC4=1;
  1851     05BA  1607               	bsf	7,4	;volatile
  1852                           
  1853                           ;./I2C.h: 172: SMP=1;
  1854     05BB  1794               	bsf	20,7	;volatile
  1855                           
  1856                           ;./I2C.h: 174: CKE=0;
  1857     05BC  1314               	bcf	20,6	;volatile
  1858                           
  1859                           ;./I2C.h: 176: SSPEN=1;
  1860     05BD  1283               	bcf	3,5	;RP0=0, select bank0
  1861     05BE  1303               	bcf	3,6	;RP1=0, select bank0
  1862     05BF  1694               	bsf	20,5	;volatile
  1863                           
  1864                           ;./I2C.h: 178: SSPCON|=0X08;
  1865     05C0  1594               	bsf	20,3	;volatile
  1866     05C1                     l1030:
  1867                           
  1868                           ;./I2C.h: 180: SSPADD=((16000000)/(4*100000))-1;
  1869     05C1  3027               	movlw	39
  1870     05C2  1683               	bsf	3,5	;RP0=1, select bank1
  1871     05C3  1303               	bcf	3,6	;RP1=0, select bank1
  1872     05C4  0093               	movwf	19	;volatile
  1873     05C5                     l106:
  1874     05C5  0008               	return
  1875     05C6                     __end_of_I2C_Master_Init:
  1876     007E                     btemp	set	126	;btemp
  1877     007E                     wtemp0	set	126
  1878                           
  1879                           	psect	config
  1880                           
  1881                           ;Config register CONFIG @ 0x2007
  1882                           ;	Oscillator Selection bits
  1883                           ;	FOSC = EXTRC, RC oscillator
  1884                           ;	Watchdog Timer Enable bit
  1885                           ;	WDTE = OFF, WDT disabled
  1886                           ;	Power-up Timer Enable bit
  1887                           ;	PWRTE = OFF, PWRT disabled
  1888                           ;	Brown-out Reset Enable bit
  1889                           ;	BOREN = OFF, BOR disabled
  1890                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1891                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1892                           ;	Data EEPROM Memory Code Protection bit
  1893                           ;	CPD = OFF, Data EEPROM code protection off
  1894                           ;	Flash Program Memory Write Enable bits
  1895                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1896                           ;	In-Circuit Debugger Mode bit
  1897                           ;	DEBUG = 0x1, unprogrammed default
  1898                           ;	Flash Program Memory Code Protection bit
  1899                           ;	CP = OFF, Code protection off
  1900     2007                     	org	8199
  1901     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      3      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Print@x	PTR unsigned char  size(1) Largest target is 7
		 -> result(BANK0[3]), Word(BANK0[4]), Write(BANK0[7]), Read(BANK0[6]), 

    I2C_Page_Read@result	PTR unsigned char  size(1) Largest target is 3
		 -> result(BANK0[3]), 

    I2C_Page_Write@data	PTR unsigned char  size(1) Largest target is 4
		 -> Word(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_I2C_Page_Read
    _Lcd_Print->_Lcd_Data
    _Lcd_Configuration->_Lcd_Cmd
    _I2C_Page_Write->_I2C_Write_Data
    _I2C_Page_Read->_I2C_Write_Data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1186
                                              0 BANK0      3     3      0
                    _I2C_Master_Init
                      _I2C_Page_Read
                     _I2C_Page_Write
                          _I2C_Start
                           _I2C_Stop
                            _Lcd_Cmd
                  _Lcd_Configuration
                          _Lcd_Print
 ---------------------------------------------------------------------------------
 (1) _Lcd_Print                                            1     1      0     199
                                              3 COMMON     1     1      0
                           _Lcd_Data
 ---------------------------------------------------------------------------------
 (2) _Lcd_Data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Configuration                                    2     2      0      22
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Page_Write                                       5     3      2     296
                                              5 COMMON     5     3      2
                   _I2C_Repeat_Start
                     _I2C_Write_Data
 ---------------------------------------------------------------------------------
 (1) _I2C_Page_Read                                        9     5      4     647
                                              5 COMMON     9     5      4
                      _I2C_Read_Data
                   _I2C_Repeat_Start
                     _I2C_Write_Data
 ---------------------------------------------------------------------------------
 (2) _I2C_Write_Data                                       5     3      2      22
                                              0 COMMON     5     3      2
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Repeat_Start                                     0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Read_Data                                        2     0      2      98
                                              0 COMMON     2     0      2
                            _I2C_ACK
                           _I2C_NACK
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
   _I2C_Page_Read
     _I2C_Read_Data
       _I2C_ACK
         _I2C_Wait
       _I2C_NACK
         _I2C_Wait
       _I2C_Wait
     _I2C_Repeat_Start
       _I2C_Wait
     _I2C_Write_Data
       _I2C_Wait
   _I2C_Page_Write
     _I2C_Repeat_Start
     _I2C_Write_Data
   _I2C_Start
     _I2C_Wait
   _I2C_Stop
     _I2C_Wait
   _Lcd_Cmd
   _Lcd_Configuration
     _Lcd_Cmd
   _Lcd_Print
     _Lcd_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3      18       5       30.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      26      12        0.0%
ABS                  0      0      26       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Oct 24 19:23:24 2023

                        pc 0002                         l71 067E                         l80 0714  
                       l91 05AA                         l83 0738                         l77 06B5  
                       l94 05B6                         l88 0770                         l97 0588  
                       fsr 0004                        l100 0591                        l103 057F  
                      l112 05A9                        l106 05C5                        l115 064B  
                      l131 0615                        l140 062D                        l109 059D  
                      l125 0676                        l118 0659                        l134 070C  
                      l137 05FE                        l153 07E6                        l154 07E6  
                      l920 05B0                        l922 0592                        l930 05A1  
                      l924 0595                        l932 05A6                        l940 0634  
                      l918 05AA                        l926 059A                        l950 0651  
                      l934 0577                        l942 0638                        _CKE 04A6  
                      l928 059E                        l960 066E                        l952 065F  
                      l936 057C                        l944 063D                        l962 0673  
                      l954 0661                        l938 062F                        l970 05F0  
                      l956 0662                        l948 064C                        l980 061F  
                      l972 05F1                        l958 0668                        l990 0698  
                      l982 0620                        l974 05F5                        l966 05EB  
                      l992 06A0                        l984 0678                        l976 0617  
                      l968 05EF                        l994 06A4                        l986 0679  
                      l978 061B                        l996 06AC                        l988 068B  
                      l998 070E                        u110 05B0                        u111 05AF  
                      u120 05B6                        u200 0615                        u121 05B5  
                      u201 0614                        u130 065F                        u131 065E  
                      u140 0668                        u141 0667                        u150 068B  
                      u151 068A                        u160 06AC                        u161 06AB  
                      u217 07BB                        u170 0721                        u171 0720  
                      u227 05F9                        u180 0745                        u181 0744  
                      u237 06CB                        u190 074D                        u191 074C  
                      u247 06DA                        _PEN 048A                        u257 06E9  
                      u267 06F8                        u277 0707                        u287 0628  
                      u297 06B0                        _SEN 0488                        _SMP 04A7  
          __end_of_I2C_ACK 059E                        fsr0 0004                        indf 0000  
 __end_of_I2C_Repeat_Start 0580                       l1000 070F                       l1002 0721  
                     l1012 074E                       l1004 0733                       l1020 0580  
                     l1030 05C1                       l1014 0762                       l1006 0745  
                     l1022 0585                       l1008 0749                       l1024 0589  
                     l1040 06B6                       l1032 0600                       l1018 0769  
                     l1026 058E                       l1050 06DF                       l1042 06BC  
                     l1034 0601                       l1028 05B7                       l1052 06EE  
                     l1044 06C1                       l1036 0609                       l1060 077C  
                     l1054 06F4                       l1046 06C7                       l1038 060D  
                     l1070 079F                       l1062 0782                       l1056 0703  
                     l1048 06D6                       l1080 07C7                       l1072 07A4  
                     l1064 078E                       l1082 07D5                       l1074 07AE  
                     l1066 0793                       l1058 0771                       l1084 07DA  
                     l1076 07B3                       l1068 0799                       l1086 07E0  
                     l1078 07C2                       _RCEN 048B                       _RSEN 0489  
                     _Read 0027           __end_of_I2C_NACK 05AA                       _Word 002D  
                     _buff 0031                       _main 0771                       btemp 007E  
         __end_of_I2C_Wait 05B7           __end_of_I2C_Stop 0592                       start 0000  
          __end_of_Lcd_Cmd 062E           ?_I2C_Master_Init 0070                      ?_main 0070  
                    _ACKEN 048C                      _ACKDT 048D                      _PORTC 0007  
                    _PORTD 0008                      _TRISC 0087                      _TRISD 0088  
                    _SSPEN 00A5                      _SSPIF 0063                      _Write 0020  
      I2C_Page_Read@result 007B          __end_of_I2C_Start 0589                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Data 05FF  
          __initialization 07EA               __end_of_main 07EA                  ??_I2C_ACK 0070  
                   ??_main 0035       I2C_Page_Read@Reg_add 0078                  ??_Lcd_Cmd 0070  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013         I2C_Page_Write@data 0079  
            _I2C_Page_Read 070D              _I2C_Read_Data 064C                     _result 0032  
                ?_I2C_NACK 0070                  ?_I2C_Wait 0070                  ?_I2C_Stop 0070  
  __end_of__initialization 07FC             ?_I2C_Page_Read 0075          __end_of_Lcd_Print 0616  
           ?_I2C_Read_Data 0070             __pcstackCOMMON 0070               __pidataBANK0 05C6  
               ??_I2C_NACK 0070                 ??_I2C_Wait 0070                 ??_I2C_Stop 0070  
                ?_Lcd_Data 0070          ?_I2C_Repeat_Start 0070                 __pbssBANK0 0031  
       ??_I2C_Repeat_Start 0070             I2C_Page_Read@i 007C    I2C_Page_Read@Device_add 0077  
               __pmaintext 0771                    _I2C_ACK 0592                    _ACKSTAT 048E  
               ??_Lcd_Data 0070                    _SSPCON2 0091            ??_I2C_Page_Read 0079  
                  _Lcd_Cmd 0616                  _I2C_Start 0580            ??_I2C_Read_Data 0072  
           _I2C_Page_Write 0677                    __ptext1 05FF                    __ptext2 05EA  
                  __ptext3 06B6                    __ptext4 0616                    __ptext5 0589  
                  __ptext6 0580                    __ptext7 0677                    __ptext8 070D  
                  __ptext9 062E       end_of_initialization 07FC     __end_of_I2C_Page_Write 06B6  
               ?_I2C_Start 0070      I2C_Page_Write@Reg_add 0076            ?_I2C_Page_Write 0075  
        I2C_Page_Read@Size 0075                  _Lcd_Print 05FF             _I2C_Write_Data 062E  
      start_initialization 07EA          ??_I2C_Master_Init 0070                ??_I2C_Start 0070  
   __end_of_I2C_Write_Data 064C                 init_fetch0 05D7                 ?_Lcd_Print 0070  
              __pdataBANK0 0020                   ?_I2C_ACK 0070                  ___latbits 0002  
            __pcstackBANK0 0035                   ?_Lcd_Cmd 0070            ?_I2C_Write_Data 0070  
        _Lcd_Configuration 06B6         ?_Lcd_Configuration 0070                   _I2C_NACK 059E  
                 _I2C_Wait 05AA                   _I2C_Stop 0589        ??_Lcd_Configuration 0073  
             Lcd_Data@data 0072      __end_of_I2C_Page_Read 0771  __end_of_Lcd_Configuration 070D  
    __end_of_I2C_Read_Data 0677                ??_Lcd_Print 0073                   _Lcd_Data 05EA  
         ??_I2C_Page_Write 0077          I2C_Read_Data@flag 0070           _I2C_Repeat_Start 0577  
          _I2C_Master_Init 05B7                   __ptext10 0577                   __ptext11 064C  
                 __ptext12 059E                   __ptext13 0592                   __ptext14 05AA  
                 __ptext15 05B7                 _READ_WRITE 04A2                   init_ram0 05DB  
 I2C_Page_Write@Device_add 0075           ??_I2C_Write_Data 0072                 Lcd_Cmd@cmd 0072  
  __end_of_I2C_Master_Init 05C6                 Lcd_Print@x 0073         I2C_Write_Data@data 0074  
