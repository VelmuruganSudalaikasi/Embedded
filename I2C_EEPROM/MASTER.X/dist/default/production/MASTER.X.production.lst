

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Nov 15 11:48:23 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29     0000                     
    30                           ; Generated 22/03/2023 GMT
    31                           ; 
    32                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F877A Definitions
    62                           ; 
    63                           ; SFR Addresses
    64     0000                     	;# 
    65     0001                     	;# 
    66     0002                     	;# 
    67     0003                     	;# 
    68     0004                     	;# 
    69     0005                     	;# 
    70     0006                     	;# 
    71     0007                     	;# 
    72     0008                     	;# 
    73     0009                     	;# 
    74     000A                     	;# 
    75     000B                     	;# 
    76     000C                     	;# 
    77     000D                     	;# 
    78     000E                     	;# 
    79     000E                     	;# 
    80     000F                     	;# 
    81     0010                     	;# 
    82     0011                     	;# 
    83     0012                     	;# 
    84     0013                     	;# 
    85     0014                     	;# 
    86     0015                     	;# 
    87     0015                     	;# 
    88     0016                     	;# 
    89     0017                     	;# 
    90     0018                     	;# 
    91     0019                     	;# 
    92     001A                     	;# 
    93     001B                     	;# 
    94     001B                     	;# 
    95     001C                     	;# 
    96     001D                     	;# 
    97     001E                     	;# 
    98     001F                     	;# 
    99     0081                     	;# 
   100     0085                     	;# 
   101     0086                     	;# 
   102     0087                     	;# 
   103     0088                     	;# 
   104     0089                     	;# 
   105     008C                     	;# 
   106     008D                     	;# 
   107     008E                     	;# 
   108     0091                     	;# 
   109     0092                     	;# 
   110     0093                     	;# 
   111     0094                     	;# 
   112     0098                     	;# 
   113     0099                     	;# 
   114     009C                     	;# 
   115     009D                     	;# 
   116     009E                     	;# 
   117     009F                     	;# 
   118     010C                     	;# 
   119     010D                     	;# 
   120     010E                     	;# 
   121     010F                     	;# 
   122     018C                     	;# 
   123     018D                     	;# 
   124     0000                     	;# 
   125     0001                     	;# 
   126     0002                     	;# 
   127     0003                     	;# 
   128     0004                     	;# 
   129     0005                     	;# 
   130     0006                     	;# 
   131     0007                     	;# 
   132     0008                     	;# 
   133     0009                     	;# 
   134     000A                     	;# 
   135     000B                     	;# 
   136     000C                     	;# 
   137     000D                     	;# 
   138     000E                     	;# 
   139     000E                     	;# 
   140     000F                     	;# 
   141     0010                     	;# 
   142     0011                     	;# 
   143     0012                     	;# 
   144     0013                     	;# 
   145     0014                     	;# 
   146     0015                     	;# 
   147     0015                     	;# 
   148     0016                     	;# 
   149     0017                     	;# 
   150     0018                     	;# 
   151     0019                     	;# 
   152     001A                     	;# 
   153     001B                     	;# 
   154     001B                     	;# 
   155     001C                     	;# 
   156     001D                     	;# 
   157     001E                     	;# 
   158     001F                     	;# 
   159     0081                     	;# 
   160     0085                     	;# 
   161     0086                     	;# 
   162     0087                     	;# 
   163     0088                     	;# 
   164     0089                     	;# 
   165     008C                     	;# 
   166     008D                     	;# 
   167     008E                     	;# 
   168     0091                     	;# 
   169     0092                     	;# 
   170     0093                     	;# 
   171     0094                     	;# 
   172     0098                     	;# 
   173     0099                     	;# 
   174     009C                     	;# 
   175     009D                     	;# 
   176     009E                     	;# 
   177     009F                     	;# 
   178     010C                     	;# 
   179     010D                     	;# 
   180     010E                     	;# 
   181     010F                     	;# 
   182     018C                     	;# 
   183     018D                     	;# 
   184     0000                     	;# 
   185     0001                     	;# 
   186     0002                     	;# 
   187     0003                     	;# 
   188     0004                     	;# 
   189     0005                     	;# 
   190     0006                     	;# 
   191     0007                     	;# 
   192     0008                     	;# 
   193     0009                     	;# 
   194     000A                     	;# 
   195     000B                     	;# 
   196     000C                     	;# 
   197     000D                     	;# 
   198     000E                     	;# 
   199     000E                     	;# 
   200     000F                     	;# 
   201     0010                     	;# 
   202     0011                     	;# 
   203     0012                     	;# 
   204     0013                     	;# 
   205     0014                     	;# 
   206     0015                     	;# 
   207     0015                     	;# 
   208     0016                     	;# 
   209     0017                     	;# 
   210     0018                     	;# 
   211     0019                     	;# 
   212     001A                     	;# 
   213     001B                     	;# 
   214     001B                     	;# 
   215     001C                     	;# 
   216     001D                     	;# 
   217     001E                     	;# 
   218     001F                     	;# 
   219     0081                     	;# 
   220     0085                     	;# 
   221     0086                     	;# 
   222     0087                     	;# 
   223     0088                     	;# 
   224     0089                     	;# 
   225     008C                     	;# 
   226     008D                     	;# 
   227     008E                     	;# 
   228     0091                     	;# 
   229     0092                     	;# 
   230     0093                     	;# 
   231     0094                     	;# 
   232     0098                     	;# 
   233     0099                     	;# 
   234     009C                     	;# 
   235     009D                     	;# 
   236     009E                     	;# 
   237     009F                     	;# 
   238     010C                     	;# 
   239     010D                     	;# 
   240     010E                     	;# 
   241     010F                     	;# 
   242     018C                     	;# 
   243     018D                     	;# 
   244     0000                     	;# 
   245     0001                     	;# 
   246     0002                     	;# 
   247     0003                     	;# 
   248     0004                     	;# 
   249     0005                     	;# 
   250     0006                     	;# 
   251     0007                     	;# 
   252     0008                     	;# 
   253     0009                     	;# 
   254     000A                     	;# 
   255     000B                     	;# 
   256     000C                     	;# 
   257     000D                     	;# 
   258     000E                     	;# 
   259     000E                     	;# 
   260     000F                     	;# 
   261     0010                     	;# 
   262     0011                     	;# 
   263     0012                     	;# 
   264     0013                     	;# 
   265     0014                     	;# 
   266     0015                     	;# 
   267     0015                     	;# 
   268     0016                     	;# 
   269     0017                     	;# 
   270     0018                     	;# 
   271     0019                     	;# 
   272     001A                     	;# 
   273     001B                     	;# 
   274     001B                     	;# 
   275     001C                     	;# 
   276     001D                     	;# 
   277     001E                     	;# 
   278     001F                     	;# 
   279     0081                     	;# 
   280     0085                     	;# 
   281     0086                     	;# 
   282     0087                     	;# 
   283     0088                     	;# 
   284     0089                     	;# 
   285     008C                     	;# 
   286     008D                     	;# 
   287     008E                     	;# 
   288     0091                     	;# 
   289     0092                     	;# 
   290     0093                     	;# 
   291     0094                     	;# 
   292     0098                     	;# 
   293     0099                     	;# 
   294     009C                     	;# 
   295     009D                     	;# 
   296     009E                     	;# 
   297     009F                     	;# 
   298     010C                     	;# 
   299     010D                     	;# 
   300     010E                     	;# 
   301     010F                     	;# 
   302     018C                     	;# 
   303     018D                     	;# 
   304                           
   305                           	psect	idataBANK0
   306     05C6                     __pidataBANK0:
   307                           
   308                           ;initializer for _Write
   309     05C6  3457               	retlw	87
   310     05C7  3472               	retlw	114
   311     05C8  3469               	retlw	105
   312     05C9  3474               	retlw	116
   313     05CA  3465               	retlw	101
   314     05CB  343A               	retlw	58
   315     05CC  3400               	retlw	0
   316                           
   317                           ;initializer for _Read
   318     05CD  3452               	retlw	82
   319     05CE  3445               	retlw	69
   320     05CF  3441               	retlw	65
   321     05D0  3444               	retlw	68
   322     05D1  343A               	retlw	58
   323     05D2  3400               	retlw	0
   324                           
   325                           ;initializer for _Word
   326     05D3  3449               	retlw	73
   327     05D4  3432               	retlw	50
   328     05D5  3443               	retlw	67
   329     05D6  3400               	retlw	0
   330     0013                     _SSPBUF	set	19
   331     0014                     _SSPCON	set	20
   332     0007                     _PORTC	set	7
   333     0008                     _PORTD	set	8
   334     0063                     _SSPIF	set	99
   335     00A5                     _SSPEN	set	165
   336     0093                     _SSPADD	set	147
   337     0091                     _SSPCON2	set	145
   338     0087                     _TRISC	set	135
   339     0088                     _TRISD	set	136
   340     048B                     _RCEN	set	1163
   341     048E                     _ACKSTAT	set	1166
   342     048C                     _ACKEN	set	1164
   343     048D                     _ACKDT	set	1165
   344     04A6                     _CKE	set	1190
   345     04A7                     _SMP	set	1191
   346     043C                     _TRISC4	set	1084
   347     043B                     _TRISC3	set	1083
   348     0489                     _RSEN	set	1161
   349     048A                     _PEN	set	1162
   350     0488                     _SEN	set	1160
   351     04A2                     _READ_WRITE	set	1186
   352                           
   353                           	psect	cinit
   354     07EA                     start_initialization:	
   355                           ; #config settings
   356                           
   357     07EA                     __initialization:
   358                           
   359                           ; Initialize objects allocated to BANK0
   360     07EA  1383               	bcf	3,7	;select IRP bank0
   361     07EB  3031               	movlw	low (__pdataBANK0+17)
   362     07EC  00FD               	movwf	btemp+-1
   363     07ED  3005               	movlw	high __pidataBANK0
   364     07EE  00FE               	movwf	btemp
   365     07EF  30C6               	movlw	low __pidataBANK0
   366     07F0  00FF               	movwf	btemp+1
   367     07F1  3020               	movlw	low __pdataBANK0
   368     07F2  0084               	movwf	4
   369     07F3  120A  118A  25DB  120A  118A  	fcall	init_ram0
   370                           
   371                           ; Clear objects allocated to BANK0
   372     07F8  01B1               	clrf	__pbssBANK0& (0+127)
   373     07F9  01B2               	clrf	(__pbssBANK0+1)& (0+127)
   374     07FA  01B3               	clrf	(__pbssBANK0+2)& (0+127)
   375     07FB  01B4               	clrf	(__pbssBANK0+3)& (0+127)
   376     07FC                     end_of_initialization:	
   377                           ;End of C runtime variable initialization code
   378                           
   379     07FC                     __end_of__initialization:
   380     07FC  0183               	clrf	3
   381     07FD  120A  118A  2F71   	ljmp	_main	;jump to C main() function
   382                           
   383                           	psect	bssBANK0
   384     0031                     __pbssBANK0:
   385     0031                     _buff:
   386     0031                     	ds	1
   387     0032                     _result:
   388     0032                     	ds	3
   389                           
   390                           	psect	dataBANK0
   391     0020                     __pdataBANK0:
   392     0020                     _Write:
   393     0020                     	ds	7
   394     0027                     _Read:
   395     0027                     	ds	6
   396     002D                     _Word:
   397     002D                     	ds	4
   398                           
   399                           	psect	inittext
   400     05D7                     init_fetch0:	
   401                           ;	Called with low address in FSR and high address in W
   402                           
   403     05D7  087E               	movf	btemp,w
   404     05D8  008A               	movwf	10
   405     05D9  087F               	movf	btemp+1,w
   406     05DA  0082               	movwf	2
   407     05DB                     init_ram0:	
   408                           ;Called with:
   409                           ;	high address of idata address in btemp 
   410                           ;	low address of idata address in btemp+1 
   411                           ;	low address of data in FSR
   412                           ;	high address + 1 of data in btemp-1
   413                           
   414     05DB  120A  118A  25D7  120A  118A  	fcall	init_fetch0
   415     05E0  0080               	movwf	0
   416     05E1  0A84               	incf	4,f
   417     05E2  0804               	movf	4,w
   418     05E3  067D               	xorwf	btemp+-1,w
   419     05E4  1903               	btfsc	3,2
   420     05E5  3400               	retlw	0
   421     05E6  0AFF               	incf	btemp+1,f
   422     05E7  1903               	btfsc	3,2
   423     05E8  0AFE               	incf	btemp,f
   424     05E9  2DDB               	goto	init_ram0
   425                           
   426                           	psect	cstackCOMMON
   427     0070                     __pcstackCOMMON:
   428     0070                     ?_Lcd_Configuration:
   429     0070                     ?_Lcd_Cmd:	
   430                           ; 1 bytes @ 0x0
   431                           
   432     0070                     ??_Lcd_Cmd:	
   433                           ; 1 bytes @ 0x0
   434                           
   435     0070                     ?_Lcd_Print:	
   436                           ; 1 bytes @ 0x0
   437                           
   438     0070                     ?_I2C_Master_Init:	
   439                           ; 1 bytes @ 0x0
   440                           
   441     0070                     ??_I2C_Master_Init:	
   442                           ; 1 bytes @ 0x0
   443                           
   444     0070                     ?_I2C_Start:	
   445                           ; 1 bytes @ 0x0
   446                           
   447     0070                     ??_I2C_Start:	
   448                           ; 1 bytes @ 0x0
   449                           
   450     0070                     ?_I2C_Stop:	
   451                           ; 1 bytes @ 0x0
   452                           
   453     0070                     ??_I2C_Stop:	
   454                           ; 1 bytes @ 0x0
   455                           
   456     0070                     ?_main:	
   457                           ; 1 bytes @ 0x0
   458                           
   459     0070                     ?_Lcd_Data:	
   460                           ; 1 bytes @ 0x0
   461                           
   462     0070                     ??_Lcd_Data:	
   463                           ; 1 bytes @ 0x0
   464                           
   465     0070                     ?_I2C_Wait:	
   466                           ; 1 bytes @ 0x0
   467                           
   468     0070                     ??_I2C_Wait:	
   469                           ; 1 bytes @ 0x0
   470                           
   471     0070                     ?_I2C_Repeat_Start:	
   472                           ; 1 bytes @ 0x0
   473                           
   474     0070                     ??_I2C_Repeat_Start:	
   475                           ; 1 bytes @ 0x0
   476                           
   477     0070                     ?_I2C_ACK:	
   478                           ; 1 bytes @ 0x0
   479                           
   480     0070                     ??_I2C_ACK:	
   481                           ; 1 bytes @ 0x0
   482                           
   483     0070                     ?_I2C_NACK:	
   484                           ; 1 bytes @ 0x0
   485                           
   486     0070                     ??_I2C_NACK:	
   487                           ; 1 bytes @ 0x0
   488                           
   489     0070                     ?_I2C_Read_Data:	
   490                           ; 1 bytes @ 0x0
   491                           
   492     0070                     ?_I2C_Write_Data:	
   493                           ; 1 bytes @ 0x0
   494                           
   495     0070                     I2C_Read_Data@flag:	
   496                           ; 2 bytes @ 0x0
   497                           
   498                           
   499                           ; 2 bytes @ 0x0
   500     0070                     	ds	2
   501     0072                     ??_I2C_Write_Data:
   502     0072                     ??_I2C_Read_Data:	
   503                           ; 1 bytes @ 0x2
   504                           
   505     0072                     Lcd_Data@data:	
   506                           ; 1 bytes @ 0x2
   507                           
   508     0072                     Lcd_Cmd@cmd:	
   509                           ; 1 bytes @ 0x2
   510                           
   511                           
   512                           ; 1 bytes @ 0x2
   513     0072                     	ds	1
   514     0073                     ??_Lcd_Configuration:
   515     0073                     ??_Lcd_Print:	
   516                           ; 1 bytes @ 0x3
   517                           
   518     0073                     Lcd_Print@x:	
   519                           ; 1 bytes @ 0x3
   520                           
   521                           
   522                           ; 1 bytes @ 0x3
   523     0073                     	ds	1
   524     0074                     I2C_Write_Data@data:
   525                           
   526                           ; 1 bytes @ 0x4
   527     0074                     	ds	1
   528     0075                     ?_I2C_Page_Write:
   529     0075                     ?_I2C_Page_Read:	
   530                           ; 1 bytes @ 0x5
   531                           
   532     0075                     I2C_Page_Write@Device_add:	
   533                           ; 1 bytes @ 0x5
   534                           
   535     0075                     I2C_Page_Read@Size:	
   536                           ; 1 bytes @ 0x5
   537                           
   538                           
   539                           ; 2 bytes @ 0x5
   540     0075                     	ds	1
   541     0076                     I2C_Page_Write@Reg_add:
   542                           
   543                           ; 1 bytes @ 0x6
   544     0076                     	ds	1
   545     0077                     ??_I2C_Page_Write:
   546     0077                     I2C_Page_Read@Device_add:	
   547                           ; 1 bytes @ 0x7
   548                           
   549                           
   550                           ; 1 bytes @ 0x7
   551     0077                     	ds	1
   552     0078                     I2C_Page_Read@Reg_add:
   553                           
   554                           ; 1 bytes @ 0x8
   555     0078                     	ds	1
   556     0079                     ??_I2C_Page_Read:
   557     0079                     I2C_Page_Write@data:	
   558                           ; 1 bytes @ 0x9
   559                           
   560                           
   561                           ; 1 bytes @ 0x9
   562     0079                     	ds	2
   563     007B                     I2C_Page_Read@result:
   564                           
   565                           ; 1 bytes @ 0xB
   566     007B                     	ds	1
   567     007C                     I2C_Page_Read@i:
   568                           
   569                           ; 2 bytes @ 0xC
   570     007C                     	ds	2
   571                           
   572                           	psect	cstackBANK0
   573     0035                     __pcstackBANK0:
   574     0035                     ??_main:
   575                           
   576                           ; 1 bytes @ 0x0
   577     0035                     	ds	3
   578                           
   579                           	psect	maintext
   580     0771                     __pmaintext:	
   581 ;;
   582 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   583 ;;
   584 ;; *************** function _main *****************
   585 ;; Defined at:
   586 ;;		line 25 in file "I2C_MASTER.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;		None
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   595 ;; Tracked objects:
   596 ;;		On entry : B00/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   600 ;;      Params:         0       0       0       0       0
   601 ;;      Locals:         0       0       0       0       0
   602 ;;      Temps:          0       3       0       0       0
   603 ;;      Totals:         0       3       0       0       0
   604 ;;Total ram usage:        3 bytes
   605 ;; Hardware stack levels required when called: 4
   606 ;; This function calls:
   607 ;;		_I2C_Master_Init
   608 ;;		_I2C_Page_Read
   609 ;;		_I2C_Page_Write
   610 ;;		_I2C_Start
   611 ;;		_I2C_Stop
   612 ;;		_Lcd_Cmd
   613 ;;		_Lcd_Configuration
   614 ;;		_Lcd_Print
   615 ;; This function is called by:
   616 ;;		Startup code after reset
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620     0771                     _main:	
   621                           ;psect for function _main
   622                           
   623     0771                     l1058:	
   624                           ;incstack = 0
   625                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   626                           
   627                           
   628                           ;I2C_MASTER.c: 29:     Lcd_Configuration();
   629     0771  120A  118A  26B6  120A  118A  	fcall	_Lcd_Configuration
   630                           
   631                           ;I2C_MASTER.c: 31:     Lcd_Cmd(0x80);
   632     0776  3080               	movlw	128
   633     0777  120A  118A  2616  120A  118A  	fcall	_Lcd_Cmd
   634     077C                     l1060:
   635                           
   636                           ;I2C_MASTER.c: 33:     Lcd_Print(Read);
   637     077C  3027               	movlw	(low (_Read| 0))& (0+255)
   638     077D  120A  118A  25FF  120A  118A  	fcall	_Lcd_Print
   639     0782                     l1062:
   640                           
   641                           ;I2C_MASTER.c: 36:     Lcd_Cmd(0xC0);
   642     0782  30C0               	movlw	192
   643     0783  120A  118A  2616  120A  118A  	fcall	_Lcd_Cmd
   644                           
   645                           ;I2C_MASTER.c: 38:     Lcd_Print(Write);
   646     0788  3020               	movlw	(low (_Write| 0))& (0+255)
   647     0789  120A  118A  25FF  120A  118A  	fcall	_Lcd_Print
   648     078E                     l1064:
   649                           
   650                           ;I2C_MASTER.c: 43:     I2C_Master_Init();
   651     078E  120A  118A  25B7  120A  118A  	fcall	_I2C_Master_Init
   652     0793                     l1066:
   653                           
   654                           ;I2C_MASTER.c: 47:     Lcd_Cmd(0x80+6);
   655     0793  3086               	movlw	134
   656     0794  120A  118A  2616  120A  118A  	fcall	_Lcd_Cmd
   657     0799                     l1068:
   658                           
   659                           ;I2C_MASTER.c: 49:     Lcd_Print(Word);
   660     0799  302D               	movlw	(low (_Word| 0))& (0+255)
   661     079A  120A  118A  25FF  120A  118A  	fcall	_Lcd_Print
   662     079F                     l1070:
   663                           
   664                           ;I2C_MASTER.c: 51:     I2C_Start();
   665     079F  120A  118A  2580  120A  118A  	fcall	_I2C_Start
   666     07A4                     l1072:
   667                           
   668                           ;I2C_MASTER.c: 53:     I2C_Page_Write(Word,0xA0,0x0020);
   669     07A4  30A0               	movlw	160
   670     07A5  00F5               	movwf	I2C_Page_Write@Device_add
   671     07A6  3020               	movlw	32
   672     07A7  00F6               	movwf	I2C_Page_Write@Reg_add
   673     07A8  302D               	movlw	(low (_Word| 0))& (0+255)
   674     07A9  120A  118A  2677  120A  118A  	fcall	_I2C_Page_Write
   675     07AE                     l1074:
   676                           
   677                           ;I2C_MASTER.c: 57:     I2C_Stop();
   678     07AE  120A  118A  2589  120A  118A  	fcall	_I2C_Stop
   679     07B3                     l1076:
   680                           
   681                           ;I2C_MASTER.c: 59:     _delay((unsigned long)((100)*(16000000/4000.0)));
   682     07B3  3003               	movlw	3
   683     07B4  1283               	bcf	3,5	;RP0=0, select bank0
   684     07B5  1303               	bcf	3,6	;RP1=0, select bank0
   685     07B6  00B7               	movwf	??_main+2
   686     07B7  3008               	movlw	8
   687     07B8  00B6               	movwf	??_main+1
   688     07B9  3076               	movlw	118
   689     07BA  00B5               	movwf	??_main
   690     07BB                     u217:
   691     07BB  0BB5               	decfsz	??_main,f
   692     07BC  2FBB               	goto	u217
   693     07BD  0BB6               	decfsz	??_main+1,f
   694     07BE  2FBB               	goto	u217
   695     07BF  0BB7               	decfsz	??_main+2,f
   696     07C0  2FBB               	goto	u217
   697     07C1  0000               	nop
   698     07C2                     l1078:
   699                           
   700                           ;I2C_MASTER.c: 63:     I2C_Start();
   701     07C2  120A  118A  2580  120A  118A  	fcall	_I2C_Start
   702     07C7                     l1080:
   703                           
   704                           ;I2C_MASTER.c: 65:     I2C_Page_Read(result,3 -1,0xA0,0x0020);
   705     07C7  3002               	movlw	2
   706     07C8  00F5               	movwf	I2C_Page_Read@Size
   707     07C9  3000               	movlw	0
   708     07CA  00F6               	movwf	I2C_Page_Read@Size+1
   709     07CB  30A0               	movlw	160
   710     07CC  00F7               	movwf	I2C_Page_Read@Device_add
   711     07CD  3020               	movlw	32
   712     07CE  00F8               	movwf	I2C_Page_Read@Reg_add
   713     07CF  3032               	movlw	(low (_result| 0))& (0+255)
   714     07D0  120A  118A  270D  120A  118A  	fcall	_I2C_Page_Read
   715     07D5                     l1082:
   716                           
   717                           ;I2C_MASTER.c: 69:     I2C_Stop();
   718     07D5  120A  118A  2589  120A  118A  	fcall	_I2C_Stop
   719     07DA                     l1084:
   720                           
   721                           ;I2C_MASTER.c: 71:     Lcd_Cmd(0xC6);
   722     07DA  30C6               	movlw	198
   723     07DB  120A  118A  2616  120A  118A  	fcall	_Lcd_Cmd
   724     07E0                     l1086:
   725                           
   726                           ;I2C_MASTER.c: 75:     Lcd_Print(result);
   727     07E0  3032               	movlw	(low (_result| 0))& (0+255)
   728     07E1  120A  118A  25FF  120A  118A  	fcall	_Lcd_Print
   729     07E6                     l31:	
   730                           ;I2C_MASTER.c: 78:     while(1);
   731                           
   732     07E6                     l32:
   733     07E6  2FE6               	goto	l31
   734     07E7  120A  118A  2800   	ljmp	start
   735     07EA                     __end_of_main:
   736                           
   737                           	psect	text1
   738     05FF                     __ptext1:	
   739 ;; *************** function _Lcd_Print *****************
   740 ;; Defined at:
   741 ;;		line 42 in file "LCD.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;  x               1    wreg     PTR unsigned char 
   744 ;;		 -> result(3), Word(4), Write(7), Read(6), 
   745 ;; Auto vars:     Size  Location     Type
   746 ;;  x               1    3[COMMON] PTR unsigned char 
   747 ;;		 -> result(3), Word(4), Write(7), Read(6), 
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   757 ;;      Params:         0       0       0       0       0
   758 ;;      Locals:         1       0       0       0       0
   759 ;;      Temps:          0       0       0       0       0
   760 ;;      Totals:         1       0       0       0       0
   761 ;;Total ram usage:        1 bytes
   762 ;; Hardware stack levels used: 1
   763 ;; Hardware stack levels required when called: 1
   764 ;; This function calls:
   765 ;;		_Lcd_Data
   766 ;; This function is called by:
   767 ;;		_main
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771     05FF                     _Lcd_Print:	
   772                           ;psect for function _Lcd_Print
   773                           
   774                           
   775                           ;incstack = 0
   776                           ; Regs used in _Lcd_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   777                           ;Lcd_Print@x stored from wreg
   778     05FF  00F3               	movwf	Lcd_Print@x
   779     0600                     l1002:
   780                           
   781                           ;LCD.c: 44:     while(*x){
   782     0600  2E0D               	goto	l1008
   783     0601                     l1004:
   784                           
   785                           ;LCD.c: 45:         Lcd_Data(*x);
   786     0601  0873               	movf	Lcd_Print@x,w
   787     0602  0084               	movwf	4
   788     0603  0800               	movf	0,w
   789     0604  120A  118A  25EA  120A  118A  	fcall	_Lcd_Data
   790     0609                     l1006:
   791                           
   792                           ;LCD.c: 46:         x++;
   793     0609  3001               	movlw	1
   794     060A  00FF               	movwf	btemp+1
   795     060B  087F               	movf	btemp+1,w
   796     060C  07F3               	addwf	Lcd_Print@x,f
   797     060D                     l1008:
   798                           
   799                           ;LCD.c: 44:     while(*x){
   800     060D  0873               	movf	Lcd_Print@x,w
   801     060E  0084               	movwf	4
   802     060F  1383               	bcf	3,7	;select IRP bank0
   803     0610  0800               	movf	0,w
   804     0611  1D03               	btfss	3,2
   805     0612  2E14               	goto	u151
   806     0613  2E15               	goto	u150
   807     0614                     u151:
   808     0614  2E01               	goto	l1004
   809     0615                     u150:
   810     0615                     l56:
   811     0615  0008               	return
   812     0616                     __end_of_Lcd_Print:
   813                           
   814                           	psect	text2
   815     05EA                     __ptext2:	
   816 ;; *************** function _Lcd_Data *****************
   817 ;; Defined at:
   818 ;;		line 7 in file "LCD.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  data            1    wreg     unsigned char 
   821 ;; Auto vars:     Size  Location     Type
   822 ;;  data            1    2[COMMON] unsigned char 
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, status,2, status,0, btemp+1
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   832 ;;      Params:         0       0       0       0       0
   833 ;;      Locals:         1       0       0       0       0
   834 ;;      Temps:          2       0       0       0       0
   835 ;;      Totals:         3       0       0       0       0
   836 ;;Total ram usage:        3 bytes
   837 ;; Hardware stack levels used: 1
   838 ;; This function calls:
   839 ;;		Nothing
   840 ;; This function is called by:
   841 ;;		_Lcd_Print
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845     05EA                     _Lcd_Data:	
   846                           ;psect for function _Lcd_Data
   847                           
   848                           
   849                           ;incstack = 0
   850                           ; Regs used in _Lcd_Data: [wreg+status,2+status,0+btemp+1]
   851                           ;Lcd_Data@data stored from wreg
   852     05EA  00F2               	movwf	Lcd_Data@data
   853     05EB                     l942:
   854                           
   855                           ;LCD.c: 11:     PORTD = data;
   856     05EB  0872               	movf	Lcd_Data@data,w
   857     05EC  1283               	bcf	3,5	;RP0=0, select bank0
   858     05ED  1303               	bcf	3,6	;RP1=0, select bank0
   859     05EE  0088               	movwf	8	;volatile
   860     05EF                     l944:
   861                           
   862                           ;LCD.c: 13:     PORTC |= 0x40;
   863     05EF  1707               	bsf	7,6	;volatile
   864     05F0                     l946:
   865                           
   866                           ;LCD.c: 15:     PORTC |= 0x80;
   867     05F0  1787               	bsf	7,7	;volatile
   868     05F1                     l948:
   869                           
   870                           ;LCD.c: 17:     PORTC &= ~0x80;
   871     05F1  307F               	movlw	127
   872     05F2  00FF               	movwf	btemp+1
   873     05F3  087F               	movf	btemp+1,w
   874     05F4  0587               	andwf	7,f	;volatile
   875     05F5                     l950:
   876                           
   877                           ;LCD.c: 19:     _delay((unsigned long)((10)*(16000000/4000.0)));
   878     05F5  3034               	movlw	52
   879     05F6  00F1               	movwf	??_Lcd_Data+1
   880     05F7  30F1               	movlw	241
   881     05F8  00F0               	movwf	??_Lcd_Data
   882     05F9                     u227:
   883     05F9  0BF0               	decfsz	??_Lcd_Data,f
   884     05FA  2DF9               	goto	u227
   885     05FB  0BF1               	decfsz	??_Lcd_Data+1,f
   886     05FC  2DF9               	goto	u227
   887     05FD  2DFE               	nop2
   888     05FE                     l47:
   889     05FE  0008               	return
   890     05FF                     __end_of_Lcd_Data:
   891                           
   892                           	psect	text3
   893     06B6                     __ptext3:	
   894 ;; *************** function _Lcd_Configuration *****************
   895 ;; Defined at:
   896 ;;		line 52 in file "LCD.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;		None
   899 ;; Auto vars:     Size  Location     Type
   900 ;;		None
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      void 
   903 ;; Registers used:
   904 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   910 ;;      Params:         0       0       0       0       0
   911 ;;      Locals:         0       0       0       0       0
   912 ;;      Temps:          2       0       0       0       0
   913 ;;      Totals:         2       0       0       0       0
   914 ;;Total ram usage:        2 bytes
   915 ;; Hardware stack levels used: 1
   916 ;; Hardware stack levels required when called: 1
   917 ;; This function calls:
   918 ;;		_Lcd_Cmd
   919 ;; This function is called by:
   920 ;;		_main
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924     06B6                     _Lcd_Configuration:	
   925                           ;psect for function _Lcd_Configuration
   926                           
   927     06B6                     l984:	
   928                           ;incstack = 0
   929                           ; Regs used in _Lcd_Configuration: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   930                           
   931                           
   932                           ;LCD.c: 54:     TRISD=0x00;
   933     06B6  1683               	bsf	3,5	;RP0=1, select bank1
   934     06B7  1303               	bcf	3,6	;RP1=0, select bank1
   935     06B8  0188               	clrf	8	;volatile
   936                           
   937                           ;LCD.c: 56:     PORTD=0x00;
   938     06B9  1283               	bcf	3,5	;RP0=0, select bank0
   939     06BA  1303               	bcf	3,6	;RP1=0, select bank0
   940     06BB  0188               	clrf	8	;volatile
   941     06BC                     l986:
   942                           
   943                           ;LCD.c: 58:     TRISC=(TRISC&0x3F);
   944     06BC  1683               	bsf	3,5	;RP0=1, select bank1
   945     06BD  1303               	bcf	3,6	;RP1=0, select bank1
   946     06BE  0807               	movf	7,w	;volatile
   947     06BF  393F               	andlw	63
   948     06C0  0087               	movwf	7	;volatile
   949     06C1                     l988:
   950                           
   951                           ;LCD.c: 61:     Lcd_Cmd(0x0C);
   952     06C1  300C               	movlw	12
   953     06C2  120A  118A  2616  120A  118A  	fcall	_Lcd_Cmd
   954     06C7                     l990:
   955                           
   956                           ;LCD.c: 63:     _delay((unsigned long)((10)*(16000000/4000.0)));
   957     06C7  3034               	movlw	52
   958     06C8  00F4               	movwf	??_Lcd_Configuration+1
   959     06C9  30F1               	movlw	241
   960     06CA  00F3               	movwf	??_Lcd_Configuration
   961     06CB                     u237:
   962     06CB  0BF3               	decfsz	??_Lcd_Configuration,f
   963     06CC  2ECB               	goto	u237
   964     06CD  0BF4               	decfsz	??_Lcd_Configuration+1,f
   965     06CE  2ECB               	goto	u237
   966     06CF  2ED0               	nop2
   967                           
   968                           ;LCD.c: 65:     Lcd_Cmd(0x01);
   969     06D0  3001               	movlw	1
   970     06D1  120A  118A  2616  120A  118A  	fcall	_Lcd_Cmd
   971     06D6                     l992:
   972                           
   973                           ;LCD.c: 67:     _delay((unsigned long)((10)*(16000000/4000.0)));
   974     06D6  3034               	movlw	52
   975     06D7  00F4               	movwf	??_Lcd_Configuration+1
   976     06D8  30F1               	movlw	241
   977     06D9  00F3               	movwf	??_Lcd_Configuration
   978     06DA                     u247:
   979     06DA  0BF3               	decfsz	??_Lcd_Configuration,f
   980     06DB  2EDA               	goto	u247
   981     06DC  0BF4               	decfsz	??_Lcd_Configuration+1,f
   982     06DD  2EDA               	goto	u247
   983     06DE  2EDF               	nop2
   984     06DF                     l994:
   985                           
   986                           ;LCD.c: 69:     Lcd_Cmd(0x38);
   987     06DF  3038               	movlw	56
   988     06E0  120A  118A  2616  120A  118A  	fcall	_Lcd_Cmd
   989                           
   990                           ;LCD.c: 71:     _delay((unsigned long)((10)*(16000000/4000.0)));
   991     06E5  3034               	movlw	52
   992     06E6  00F4               	movwf	??_Lcd_Configuration+1
   993     06E7  30F1               	movlw	241
   994     06E8  00F3               	movwf	??_Lcd_Configuration
   995     06E9                     u257:
   996     06E9  0BF3               	decfsz	??_Lcd_Configuration,f
   997     06EA  2EE9               	goto	u257
   998     06EB  0BF4               	decfsz	??_Lcd_Configuration+1,f
   999     06EC  2EE9               	goto	u257
  1000     06ED  2EEE               	nop2
  1001     06EE                     l996:
  1002                           
  1003                           ;LCD.c: 73:     Lcd_Cmd(0x06);
  1004     06EE  3006               	movlw	6
  1005     06EF  120A  118A  2616  120A  118A  	fcall	_Lcd_Cmd
  1006     06F4                     l998:
  1007                           
  1008                           ;LCD.c: 75:     _delay((unsigned long)((10)*(16000000/4000.0)));
  1009     06F4  3034               	movlw	52
  1010     06F5  00F4               	movwf	??_Lcd_Configuration+1
  1011     06F6  30F1               	movlw	241
  1012     06F7  00F3               	movwf	??_Lcd_Configuration
  1013     06F8                     u267:
  1014     06F8  0BF3               	decfsz	??_Lcd_Configuration,f
  1015     06F9  2EF8               	goto	u267
  1016     06FA  0BF4               	decfsz	??_Lcd_Configuration+1,f
  1017     06FB  2EF8               	goto	u267
  1018     06FC  2EFD               	nop2
  1019                           
  1020                           ;LCD.c: 77:     Lcd_Cmd(0x81);
  1021     06FD  3081               	movlw	129
  1022     06FE  120A  118A  2616  120A  118A  	fcall	_Lcd_Cmd
  1023     0703                     l1000:
  1024                           
  1025                           ;LCD.c: 79:     _delay((unsigned long)((10)*(16000000/4000.0)));
  1026     0703  3034               	movlw	52
  1027     0704  00F4               	movwf	??_Lcd_Configuration+1
  1028     0705  30F1               	movlw	241
  1029     0706  00F3               	movwf	??_Lcd_Configuration
  1030     0707                     u277:
  1031     0707  0BF3               	decfsz	??_Lcd_Configuration,f
  1032     0708  2F07               	goto	u277
  1033     0709  0BF4               	decfsz	??_Lcd_Configuration+1,f
  1034     070A  2F07               	goto	u277
  1035     070B  2F0C               	nop2
  1036     070C                     l59:
  1037     070C  0008               	return
  1038     070D                     __end_of_Lcd_Configuration:
  1039                           
  1040                           	psect	text4
  1041     0616                     __ptext4:	
  1042 ;; *************** function _Lcd_Cmd *****************
  1043 ;; Defined at:
  1044 ;;		line 26 in file "LCD.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;  cmd             1    wreg     unsigned char 
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;  cmd             1    2[COMMON] unsigned char 
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, status,2, status,0, btemp+1
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1058 ;;      Params:         0       0       0       0       0
  1059 ;;      Locals:         1       0       0       0       0
  1060 ;;      Temps:          2       0       0       0       0
  1061 ;;      Totals:         3       0       0       0       0
  1062 ;;Total ram usage:        3 bytes
  1063 ;; Hardware stack levels used: 1
  1064 ;; This function calls:
  1065 ;;		Nothing
  1066 ;; This function is called by:
  1067 ;;		_main
  1068 ;;		_Lcd_Configuration
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072     0616                     _Lcd_Cmd:	
  1073                           ;psect for function _Lcd_Cmd
  1074                           
  1075                           
  1076                           ;incstack = 0
  1077                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+btemp+1]
  1078                           ;Lcd_Cmd@cmd stored from wreg
  1079     0616  00F2               	movwf	Lcd_Cmd@cmd
  1080     0617                     l934:
  1081                           
  1082                           ;LCD.c: 28:     PORTD = cmd;
  1083     0617  0872               	movf	Lcd_Cmd@cmd,w
  1084     0618  1283               	bcf	3,5	;RP0=0, select bank0
  1085     0619  1303               	bcf	3,6	;RP1=0, select bank0
  1086     061A  0088               	movwf	8	;volatile
  1087     061B                     l936:
  1088                           
  1089                           ;LCD.c: 30:     PORTC &= ~0x40;
  1090     061B  30BF               	movlw	191
  1091     061C  00FF               	movwf	btemp+1
  1092     061D  087F               	movf	btemp+1,w
  1093     061E  0587               	andwf	7,f	;volatile
  1094     061F                     l938:
  1095                           
  1096                           ;LCD.c: 33:     PORTC |= 0x80;
  1097     061F  1787               	bsf	7,7	;volatile
  1098     0620                     l940:
  1099                           
  1100                           ;LCD.c: 35:     PORTC &= ~0x80;
  1101     0620  307F               	movlw	127
  1102     0621  00FF               	movwf	btemp+1
  1103     0622  087F               	movf	btemp+1,w
  1104     0623  0587               	andwf	7,f	;volatile
  1105                           
  1106                           ;LCD.c: 37:     _delay((unsigned long)((10)*(16000000/4000.0)));
  1107     0624  3034               	movlw	52
  1108     0625  00F1               	movwf	??_Lcd_Cmd+1
  1109     0626  30F1               	movlw	241
  1110     0627  00F0               	movwf	??_Lcd_Cmd
  1111     0628                     u287:
  1112     0628  0BF0               	decfsz	??_Lcd_Cmd,f
  1113     0629  2E28               	goto	u287
  1114     062A  0BF1               	decfsz	??_Lcd_Cmd+1,f
  1115     062B  2E28               	goto	u287
  1116     062C  2E2D               	nop2
  1117     062D                     l50:
  1118     062D  0008               	return
  1119     062E                     __end_of_Lcd_Cmd:
  1120                           
  1121                           	psect	text5
  1122     0589                     __ptext5:	
  1123 ;; *************** function _I2C_Stop *****************
  1124 ;; Defined at:
  1125 ;;		line 29 in file "I2C.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;		None
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg, status,2, status,0, pclath, cstack
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1139 ;;      Params:         0       0       0       0       0
  1140 ;;      Locals:         0       0       0       0       0
  1141 ;;      Temps:          0       0       0       0       0
  1142 ;;      Totals:         0       0       0       0       0
  1143 ;;Total ram usage:        0 bytes
  1144 ;; Hardware stack levels used: 1
  1145 ;; Hardware stack levels required when called: 1
  1146 ;; This function calls:
  1147 ;;		_I2C_Wait
  1148 ;; This function is called by:
  1149 ;;		_main
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153     0589                     _I2C_Stop:	
  1154                           ;psect for function _I2C_Stop
  1155                           
  1156     0589                     l1032:	
  1157                           ;incstack = 0
  1158                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  1159                           
  1160                           
  1161                           ;I2C.c: 31: I2C_Wait();
  1162     0589  120A  118A  25AA  120A  118A  	fcall	_I2C_Wait
  1163     058E                     l1034:
  1164                           
  1165                           ;I2C.c: 33: PEN=1;
  1166     058E  1683               	bsf	3,5	;RP0=1, select bank1
  1167     058F  1303               	bcf	3,6	;RP1=0, select bank1
  1168     0590  1511               	bsf	17,2	;volatile
  1169     0591                     l111:
  1170     0591  0008               	return
  1171     0592                     __end_of_I2C_Stop:
  1172                           
  1173                           	psect	text6
  1174     0580                     __ptext6:	
  1175 ;; *************** function _I2C_Start *****************
  1176 ;; Defined at:
  1177 ;;		line 19 in file "I2C.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;		None
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;		None
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, status,2, status,0, pclath, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1191 ;;      Params:         0       0       0       0       0
  1192 ;;      Locals:         0       0       0       0       0
  1193 ;;      Temps:          0       0       0       0       0
  1194 ;;      Totals:         0       0       0       0       0
  1195 ;;Total ram usage:        0 bytes
  1196 ;; Hardware stack levels used: 1
  1197 ;; Hardware stack levels required when called: 1
  1198 ;; This function calls:
  1199 ;;		_I2C_Wait
  1200 ;; This function is called by:
  1201 ;;		_main
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205     0580                     _I2C_Start:	
  1206                           ;psect for function _I2C_Start
  1207                           
  1208     0580                     l1014:	
  1209                           ;incstack = 0
  1210                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  1211                           
  1212                           
  1213                           ;I2C.c: 21: I2C_Wait();
  1214     0580  120A  118A  25AA  120A  118A  	fcall	_I2C_Wait
  1215     0585                     l1016:
  1216                           
  1217                           ;I2C.c: 23: SEN=1;
  1218     0585  1683               	bsf	3,5	;RP0=1, select bank1
  1219     0586  1303               	bcf	3,6	;RP1=0, select bank1
  1220     0587  1411               	bsf	17,0	;volatile
  1221     0588                     l108:
  1222     0588  0008               	return
  1223     0589                     __end_of_I2C_Start:
  1224                           
  1225                           	psect	text7
  1226     0677                     __ptext7:	
  1227 ;; *************** function _I2C_Page_Write *****************
  1228 ;; Defined at:
  1229 ;;		line 129 in file "I2C.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  data            1    wreg     PTR unsigned char 
  1232 ;;		 -> Word(4), 
  1233 ;;  Device_add      1    5[COMMON] unsigned char 
  1234 ;;  Reg_add         1    6[COMMON] unsigned char 
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;  data            1    9[COMMON] PTR unsigned char 
  1237 ;;		 -> Word(4), 
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      void 
  1240 ;; Registers used:
  1241 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1247 ;;      Params:         2       0       0       0       0
  1248 ;;      Locals:         1       0       0       0       0
  1249 ;;      Temps:          2       0       0       0       0
  1250 ;;      Totals:         5       0       0       0       0
  1251 ;;Total ram usage:        5 bytes
  1252 ;; Hardware stack levels used: 1
  1253 ;; Hardware stack levels required when called: 2
  1254 ;; This function calls:
  1255 ;;		_I2C_Repeat_Start
  1256 ;;		_I2C_Write_Data
  1257 ;; This function is called by:
  1258 ;;		_main
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262     0677                     _I2C_Page_Write:	
  1263                           ;psect for function _I2C_Page_Write
  1264                           
  1265                           
  1266                           ;incstack = 0
  1267                           ; Regs used in _I2C_Page_Write: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1268                           ;I2C_Page_Write@data stored from wreg
  1269     0677  00F9               	movwf	I2C_Page_Write@data
  1270     0678                     l1018:
  1271                           
  1272                           ;I2C.c: 129: void I2C_Page_Write(unsigned char *data,unsigned char Device_add,;I2C.c: 13
      +                          0:          unsigned char Reg_add){;I2C.c: 132:   while(I2C_Write_Data((Device_add & 0xF
      +                          E))){
  1273     0678  2E7E               	goto	l139
  1274     0679                     l1020:
  1275                           
  1276                           ;I2C.c: 134:       I2C_Repeat_Start();
  1277     0679  120A  118A  2577  120A  118A  	fcall	_I2C_Repeat_Start
  1278     067E                     l139:	
  1279                           ;I2C.c: 136:   }
  1280                           
  1281                           
  1282                           ;I2C.c: 132:   while(I2C_Write_Data((Device_add & 0xFE))){
  1283     067E  0875               	movf	I2C_Page_Write@Device_add,w
  1284     067F  39FE               	andlw	254
  1285     0680  120A  118A  262E  120A  118A  	fcall	_I2C_Write_Data
  1286     0685  0870               	movf	?_I2C_Write_Data,w
  1287     0686  0471               	iorwf	?_I2C_Write_Data+1,w
  1288     0687  1D03               	btfss	3,2
  1289     0688  2E8A               	goto	u161
  1290     0689  2E8B               	goto	u160
  1291     068A                     u161:
  1292     068A  2E79               	goto	l1020
  1293     068B                     u160:
  1294     068B                     l1022:
  1295                           
  1296                           ;I2C.c: 138:   I2C_Write_Data(Reg_add>>8);
  1297     068B  3000               	movlw	0
  1298     068C  120A  118A  262E  120A  118A  	fcall	_I2C_Write_Data
  1299                           
  1300                           ;I2C.c: 140:   I2C_Write_Data((unsigned char)Reg_add);
  1301     0691  0876               	movf	I2C_Page_Write@Reg_add,w
  1302     0692  120A  118A  262E  120A  118A  	fcall	_I2C_Write_Data
  1303                           
  1304                           ;I2C.c: 142:   while(*data){
  1305     0697  2EA4               	goto	l1028
  1306     0698                     l1024:
  1307                           
  1308                           ;I2C.c: 144:       I2C_Write_Data(*data);
  1309     0698  0879               	movf	I2C_Page_Write@data,w
  1310     0699  0084               	movwf	4
  1311     069A  0800               	movf	0,w
  1312     069B  120A  118A  262E  120A  118A  	fcall	_I2C_Write_Data
  1313     06A0                     l1026:
  1314                           
  1315                           ;I2C.c: 146:        data++;
  1316     06A0  3001               	movlw	1
  1317     06A1  00FF               	movwf	btemp+1
  1318     06A2  087F               	movf	btemp+1,w
  1319     06A3  07F9               	addwf	I2C_Page_Write@data,f
  1320     06A4                     l1028:
  1321                           
  1322                           ;I2C.c: 142:   while(*data){
  1323     06A4  0879               	movf	I2C_Page_Write@data,w
  1324     06A5  0084               	movwf	4
  1325     06A6  1383               	bcf	3,7	;select IRP bank0
  1326     06A7  0800               	movf	0,w
  1327     06A8  1D03               	btfss	3,2
  1328     06A9  2EAB               	goto	u171
  1329     06AA  2EAC               	goto	u170
  1330     06AB                     u171:
  1331     06AB  2E98               	goto	l1024
  1332     06AC                     u170:
  1333     06AC                     l1030:
  1334                           
  1335                           ;I2C.c: 149:   _delay((unsigned long)((10)*(16000000/4000.0)));
  1336     06AC  3034               	movlw	52
  1337     06AD  00F8               	movwf	??_I2C_Page_Write+1
  1338     06AE  30F1               	movlw	241
  1339     06AF  00F7               	movwf	??_I2C_Page_Write
  1340     06B0                     u297:
  1341     06B0  0BF7               	decfsz	??_I2C_Page_Write,f
  1342     06B1  2EB0               	goto	u297
  1343     06B2  0BF8               	decfsz	??_I2C_Page_Write+1,f
  1344     06B3  2EB0               	goto	u297
  1345     06B4  2EB5               	nop2
  1346     06B5                     l145:
  1347     06B5  0008               	return
  1348     06B6                     __end_of_I2C_Page_Write:
  1349                           
  1350                           	psect	text8
  1351     070D                     __ptext8:	
  1352 ;; *************** function _I2C_Page_Read *****************
  1353 ;; Defined at:
  1354 ;;		line 155 in file "I2C.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;  result          1    wreg     PTR unsigned char 
  1357 ;;		 -> result(3), 
  1358 ;;  Size            2    5[COMMON] int 
  1359 ;;  Device_add      1    7[COMMON] unsigned char 
  1360 ;;  Reg_add         1    8[COMMON] unsigned char 
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  result          1   11[COMMON] PTR unsigned char 
  1363 ;;		 -> result(3), 
  1364 ;;  i               2   12[COMMON] int 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1374 ;;      Params:         4       0       0       0       0
  1375 ;;      Locals:         3       0       0       0       0
  1376 ;;      Temps:          2       0       0       0       0
  1377 ;;      Totals:         9       0       0       0       0
  1378 ;;Total ram usage:        9 bytes
  1379 ;; Hardware stack levels used: 1
  1380 ;; Hardware stack levels required when called: 3
  1381 ;; This function calls:
  1382 ;;		_I2C_Read_Data
  1383 ;;		_I2C_Repeat_Start
  1384 ;;		_I2C_Write_Data
  1385 ;; This function is called by:
  1386 ;;		_main
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390     070D                     _I2C_Page_Read:	
  1391                           ;psect for function _I2C_Page_Read
  1392                           
  1393                           
  1394                           ;incstack = 0
  1395                           ; Regs used in _I2C_Page_Read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1396                           ;I2C_Page_Read@result stored from wreg
  1397     070D  00FB               	movwf	I2C_Page_Read@result
  1398     070E                     l1036:
  1399                           
  1400                           ;I2C.c: 155:   void I2C_Page_Read(unsigned char* result,int Size,;I2C.c: 156:         un
      +                          signed char Device_add,unsigned char Reg_add){;I2C.c: 158:   while(I2C_Write_Data(Device
      +                          _add & 0xFE)){
  1401     070E  2F14               	goto	l148
  1402     070F                     l1038:
  1403                           
  1404                           ;I2C.c: 159:       I2C_Repeat_Start();
  1405     070F  120A  118A  2577  120A  118A  	fcall	_I2C_Repeat_Start
  1406     0714                     l148:	
  1407                           ;I2C.c: 161:   }
  1408                           
  1409                           
  1410                           ;I2C.c: 158:   while(I2C_Write_Data(Device_add & 0xFE)){
  1411     0714  0877               	movf	I2C_Page_Read@Device_add,w
  1412     0715  39FE               	andlw	254
  1413     0716  120A  118A  262E  120A  118A  	fcall	_I2C_Write_Data
  1414     071B  0870               	movf	?_I2C_Write_Data,w
  1415     071C  0471               	iorwf	?_I2C_Write_Data+1,w
  1416     071D  1D03               	btfss	3,2
  1417     071E  2F20               	goto	u181
  1418     071F  2F21               	goto	u180
  1419     0720                     u181:
  1420     0720  2F0F               	goto	l1038
  1421     0721                     u180:
  1422     0721                     l1040:
  1423                           
  1424                           ;I2C.c: 163:   I2C_Write_Data(Reg_add>>8);
  1425     0721  3000               	movlw	0
  1426     0722  120A  118A  262E  120A  118A  	fcall	_I2C_Write_Data
  1427                           
  1428                           ;I2C.c: 165:   I2C_Write_Data((unsigned char)Reg_add);
  1429     0727  0878               	movf	I2C_Page_Read@Reg_add,w
  1430     0728  120A  118A  262E  120A  118A  	fcall	_I2C_Write_Data
  1431                           
  1432                           ;I2C.c: 168:   I2C_Repeat_Start();
  1433     072D  120A  118A  2577  120A  118A  	fcall	_I2C_Repeat_Start
  1434                           
  1435                           ;I2C.c: 170:   while(I2C_Write_Data(Device_add | 0x01))
  1436     0732  2F38               	goto	l151
  1437     0733                     l1042:
  1438                           
  1439                           ;I2C.c: 171:       I2C_Repeat_Start();
  1440     0733  120A  118A  2577  120A  118A  	fcall	_I2C_Repeat_Start
  1441     0738                     l151:
  1442                           
  1443                           ;I2C.c: 170:   while(I2C_Write_Data(Device_add | 0x01))
  1444     0738  0877               	movf	I2C_Page_Read@Device_add,w
  1445     0739  3801               	iorlw	1
  1446     073A  120A  118A  262E  120A  118A  	fcall	_I2C_Write_Data
  1447     073F  0870               	movf	?_I2C_Write_Data,w
  1448     0740  0471               	iorwf	?_I2C_Write_Data+1,w
  1449     0741  1D03               	btfss	3,2
  1450     0742  2F44               	goto	u191
  1451     0743  2F45               	goto	u190
  1452     0744                     u191:
  1453     0744  2F33               	goto	l1042
  1454     0745                     u190:
  1455     0745                     l1044:
  1456                           
  1457                           ;I2C.c: 174:   for(int i=Size;i>=0;i--)
  1458     0745  0876               	movf	I2C_Page_Read@Size+1,w
  1459     0746  00FD               	movwf	I2C_Page_Read@i+1
  1460     0747  0875               	movf	I2C_Page_Read@Size,w
  1461     0748  00FC               	movwf	I2C_Page_Read@i
  1462     0749                     l1046:
  1463     0749  1FFD               	btfss	I2C_Page_Read@i+1,7
  1464     074A  2F4C               	goto	u201
  1465     074B  2F4D               	goto	u200
  1466     074C                     u201:
  1467     074C  2F4E               	goto	l1050
  1468     074D                     u200:
  1469     074D  2F69               	goto	l1056
  1470     074E                     l1050:
  1471                           
  1472                           ;I2C.c: 175:   {;I2C.c: 177:       result[Size-i]=(unsigned char)I2C_Read_Data(i);
  1473     074E  087B               	movf	I2C_Page_Read@result,w
  1474     074F  00F9               	movwf	??_I2C_Page_Read
  1475     0750  087C               	movf	I2C_Page_Read@i,w
  1476     0751  02F9               	subwf	??_I2C_Page_Read,f
  1477     0752  0875               	movf	I2C_Page_Read@Size,w
  1478     0753  0779               	addwf	??_I2C_Page_Read,w
  1479     0754  00FA               	movwf	??_I2C_Page_Read+1
  1480     0755  087A               	movf	??_I2C_Page_Read+1,w
  1481     0756  0084               	movwf	4
  1482     0757  087D               	movf	I2C_Page_Read@i+1,w
  1483     0758  00F1               	movwf	I2C_Read_Data@flag+1
  1484     0759  087C               	movf	I2C_Page_Read@i,w
  1485     075A  00F0               	movwf	I2C_Read_Data@flag
  1486     075B  120A  118A  264C  120A  118A  	fcall	_I2C_Read_Data
  1487     0760  1383               	bcf	3,7	;select IRP bank0
  1488     0761  0080               	movwf	0
  1489     0762                     l1052:
  1490                           
  1491                           ;I2C.c: 178:   }
  1492     0762  30FF               	movlw	255
  1493     0763  07FC               	addwf	I2C_Page_Read@i,f
  1494     0764  1803               	skipnc
  1495     0765  0AFD               	incf	I2C_Page_Read@i+1,f
  1496     0766  30FF               	movlw	255
  1497     0767  07FD               	addwf	I2C_Page_Read@i+1,f
  1498     0768  2F49               	goto	l1046
  1499     0769                     l1056:
  1500                           
  1501                           ;I2C.c: 180:   result[Size+1]=0;
  1502     0769  0875               	movf	I2C_Page_Read@Size,w
  1503     076A  077B               	addwf	I2C_Page_Read@result,w
  1504     076B  00F9               	movwf	??_I2C_Page_Read
  1505     076C  0A79               	incf	??_I2C_Page_Read,w
  1506     076D  0084               	movwf	4
  1507     076E  1383               	bcf	3,7	;select IRP bank0
  1508     076F  0180               	clrf	0
  1509     0770                     l156:
  1510     0770  0008               	return
  1511     0771                     __end_of_I2C_Page_Read:
  1512                           
  1513                           	psect	text9
  1514     062E                     __ptext9:	
  1515 ;; *************** function _I2C_Write_Data *****************
  1516 ;; Defined at:
  1517 ;;		line 97 in file "I2C.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  data            1    wreg     unsigned char 
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;  data            1    4[COMMON] unsigned char 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  2    0[COMMON] int 
  1524 ;; Registers used:
  1525 ;;		wreg, status,2, status,0, pclath, cstack
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1531 ;;      Params:         2       0       0       0       0
  1532 ;;      Locals:         1       0       0       0       0
  1533 ;;      Temps:          2       0       0       0       0
  1534 ;;      Totals:         5       0       0       0       0
  1535 ;;Total ram usage:        5 bytes
  1536 ;; Hardware stack levels used: 1
  1537 ;; Hardware stack levels required when called: 1
  1538 ;; This function calls:
  1539 ;;		_I2C_Wait
  1540 ;; This function is called by:
  1541 ;;		_I2C_Page_Write
  1542 ;;		_I2C_Page_Read
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546     062E                     _I2C_Write_Data:	
  1547                           ;psect for function _I2C_Write_Data
  1548                           
  1549                           
  1550                           ;incstack = 0
  1551                           ; Regs used in _I2C_Write_Data: [wreg+status,2+status,0+pclath+cstack]
  1552                           ;I2C_Write_Data@data stored from wreg
  1553     062E  00F4               	movwf	I2C_Write_Data@data
  1554     062F                     l956:
  1555                           
  1556                           ;I2C.c: 99:  I2C_Wait();
  1557     062F  120A  118A  25AA  120A  118A  	fcall	_I2C_Wait
  1558     0634                     l958:
  1559                           
  1560                           ;I2C.c: 101:  SSPBUF=data;
  1561     0634  0874               	movf	I2C_Write_Data@data,w
  1562     0635  1283               	bcf	3,5	;RP0=0, select bank0
  1563     0636  1303               	bcf	3,6	;RP1=0, select bank0
  1564     0637  0093               	movwf	19	;volatile
  1565     0638                     l960:
  1566                           
  1567                           ;I2C.c: 103:  I2C_Wait();
  1568     0638  120A  118A  25AA  120A  118A  	fcall	_I2C_Wait
  1569     063D                     l962:
  1570                           
  1571                           ;I2C.c: 105:   return (int)ACKSTAT;
  1572     063D  1003               	clrc
  1573     063E  1683               	bsf	3,5	;RP0=1, select bank1
  1574     063F  1303               	bcf	3,6	;RP1=0, select bank1
  1575     0640  1B11               	btfsc	17,6	;volatile
  1576     0641  1403               	setc
  1577     0642  3000               	movlw	0
  1578     0643  1803               	skipnc
  1579     0644  3001               	movlw	1
  1580     0645  00F2               	movwf	??_I2C_Write_Data
  1581     0646  01F3               	clrf	??_I2C_Write_Data+1
  1582     0647  0872               	movf	??_I2C_Write_Data,w
  1583     0648  00F0               	movwf	?_I2C_Write_Data
  1584     0649  0873               	movf	??_I2C_Write_Data+1,w
  1585     064A  00F1               	movwf	?_I2C_Write_Data+1
  1586     064B                     l126:
  1587     064B  0008               	return
  1588     064C                     __end_of_I2C_Write_Data:
  1589                           
  1590                           	psect	text10
  1591     0577                     __ptext10:	
  1592 ;; *************** function _I2C_Repeat_Start *****************
  1593 ;; Defined at:
  1594 ;;		line 39 in file "I2C.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;		None
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;		None
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      void 
  1601 ;; Registers used:
  1602 ;;		wreg, status,2, status,0, pclath, cstack
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1608 ;;      Params:         0       0       0       0       0
  1609 ;;      Locals:         0       0       0       0       0
  1610 ;;      Temps:          0       0       0       0       0
  1611 ;;      Totals:         0       0       0       0       0
  1612 ;;Total ram usage:        0 bytes
  1613 ;; Hardware stack levels used: 1
  1614 ;; Hardware stack levels required when called: 1
  1615 ;; This function calls:
  1616 ;;		_I2C_Wait
  1617 ;; This function is called by:
  1618 ;;		_I2C_Page_Write
  1619 ;;		_I2C_Page_Read
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623     0577                     _I2C_Repeat_Start:	
  1624                           ;psect for function _I2C_Repeat_Start
  1625                           
  1626     0577                     l952:	
  1627                           ;incstack = 0
  1628                           ; Regs used in _I2C_Repeat_Start: [wreg+status,2+status,0+pclath+cstack]
  1629                           
  1630                           
  1631                           ;I2C.c: 41: I2C_Wait();
  1632     0577  120A  118A  25AA  120A  118A  	fcall	_I2C_Wait
  1633     057C                     l954:
  1634                           
  1635                           ;I2C.c: 43: RSEN=1;
  1636     057C  1683               	bsf	3,5	;RP0=1, select bank1
  1637     057D  1303               	bcf	3,6	;RP1=0, select bank1
  1638     057E  1491               	bsf	17,1	;volatile
  1639     057F                     l114:
  1640     057F  0008               	return
  1641     0580                     __end_of_I2C_Repeat_Start:
  1642                           
  1643                           	psect	text11
  1644     064C                     __ptext11:	
  1645 ;; *************** function _I2C_Read_Data *****************
  1646 ;; Defined at:
  1647 ;;		line 110 in file "I2C.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;  flag            2    0[COMMON] int 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;		None
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      unsigned char 
  1654 ;; Registers used:
  1655 ;;		wreg, status,2, status,0, pclath, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1661 ;;      Params:         2       0       0       0       0
  1662 ;;      Locals:         0       0       0       0       0
  1663 ;;      Temps:          0       0       0       0       0
  1664 ;;      Totals:         2       0       0       0       0
  1665 ;;Total ram usage:        2 bytes
  1666 ;; Hardware stack levels used: 1
  1667 ;; Hardware stack levels required when called: 2
  1668 ;; This function calls:
  1669 ;;		_I2C_ACK
  1670 ;;		_I2C_NACK
  1671 ;;		_I2C_Wait
  1672 ;; This function is called by:
  1673 ;;		_I2C_Page_Read
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677     064C                     _I2C_Read_Data:	
  1678                           ;psect for function _I2C_Read_Data
  1679                           
  1680     064C                     l966:	
  1681                           ;incstack = 0
  1682                           ; Regs used in _I2C_Read_Data: [wreg+status,2+status,0+pclath+cstack]
  1683                           
  1684                           
  1685                           ;I2C.c: 112:   I2C_Wait();
  1686     064C  120A  118A  25AA  120A  118A  	fcall	_I2C_Wait
  1687     0651                     l968:
  1688                           
  1689                           ;I2C.c: 114:   RCEN=1;
  1690     0651  1683               	bsf	3,5	;RP0=1, select bank1
  1691     0652  1303               	bcf	3,6	;RP1=0, select bank1
  1692     0653  1591               	bsf	17,3	;volatile
  1693                           
  1694                           ;I2C.c: 116:   I2C_Wait();
  1695     0654  120A  118A  25AA  120A  118A  	fcall	_I2C_Wait
  1696     0659                     l129:	
  1697                           ;I2C.c: 118:    while(!SSPIF);
  1698                           
  1699     0659  1283               	bcf	3,5	;RP0=0, select bank0
  1700     065A  1303               	bcf	3,6	;RP1=0, select bank0
  1701     065B  1D8C               	btfss	12,3	;volatile
  1702     065C  2E5E               	goto	u131
  1703     065D  2E5F               	goto	u130
  1704     065E                     u131:
  1705     065E  2E59               	goto	l129
  1706     065F                     u130:
  1707     065F                     l970:
  1708                           
  1709                           ;I2C.c: 120:   buff=SSPBUF;
  1710     065F  0813               	movf	19,w	;volatile
  1711     0660  00B1               	movwf	_buff
  1712     0661                     l972:
  1713                           
  1714                           ;I2C.c: 122:   SSPIF=0;
  1715     0661  118C               	bcf	12,3	;volatile
  1716     0662                     l974:
  1717                           
  1718                           ;I2C.c: 124:   (flag!=0)?I2C_ACK():I2C_NACK();
  1719     0662  0870               	movf	I2C_Read_Data@flag,w
  1720     0663  0471               	iorwf	I2C_Read_Data@flag+1,w
  1721     0664  1903               	btfsc	3,2
  1722     0665  2E67               	goto	u141
  1723     0666  2E68               	goto	u140
  1724     0667                     u141:
  1725     0667  2E6E               	goto	l978
  1726     0668                     u140:
  1727     0668                     l976:
  1728     0668  120A  118A  2592  120A  118A  	fcall	_I2C_ACK
  1729     066D  2E73               	goto	l980
  1730     066E                     l978:
  1731     066E  120A  118A  259E  120A  118A  	fcall	_I2C_NACK
  1732     0673                     l980:
  1733                           
  1734                           ;I2C.c: 126:   return buff;
  1735     0673  1283               	bcf	3,5	;RP0=0, select bank0
  1736     0674  1303               	bcf	3,6	;RP1=0, select bank0
  1737     0675  0831               	movf	_buff,w
  1738     0676                     l136:
  1739     0676  0008               	return
  1740     0677                     __end_of_I2C_Read_Data:
  1741                           
  1742                           	psect	text12
  1743     059E                     __ptext12:	
  1744 ;; *************** function _I2C_NACK *****************
  1745 ;; Defined at:
  1746 ;;		line 84 in file "I2C.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, status,2, status,0, pclath, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1760 ;;      Params:         0       0       0       0       0
  1761 ;;      Locals:         0       0       0       0       0
  1762 ;;      Temps:          0       0       0       0       0
  1763 ;;      Totals:         0       0       0       0       0
  1764 ;;Total ram usage:        0 bytes
  1765 ;; Hardware stack levels used: 1
  1766 ;; Hardware stack levels required when called: 1
  1767 ;; This function calls:
  1768 ;;		_I2C_Wait
  1769 ;; This function is called by:
  1770 ;;		_I2C_Read_Data
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774     059E                     _I2C_NACK:	
  1775                           ;psect for function _I2C_NACK
  1776                           
  1777     059E                     l928:	
  1778                           ;incstack = 0
  1779                           ; Regs used in _I2C_NACK: [wreg+status,2+status,0+pclath+cstack]
  1780                           
  1781                           
  1782                           ;I2C.c: 86:  ACKDT=1;
  1783     059E  1683               	bsf	3,5	;RP0=1, select bank1
  1784     059F  1303               	bcf	3,6	;RP1=0, select bank1
  1785     05A0  1691               	bsf	17,5	;volatile
  1786     05A1                     l930:
  1787                           
  1788                           ;I2C.c: 88:  I2C_Wait();
  1789     05A1  120A  118A  25AA  120A  118A  	fcall	_I2C_Wait
  1790     05A6                     l932:
  1791                           
  1792                           ;I2C.c: 90:  ACKEN=1;
  1793     05A6  1683               	bsf	3,5	;RP0=1, select bank1
  1794     05A7  1303               	bcf	3,6	;RP1=0, select bank1
  1795     05A8  1611               	bsf	17,4	;volatile
  1796     05A9                     l123:
  1797     05A9  0008               	return
  1798     05AA                     __end_of_I2C_NACK:
  1799                           
  1800                           	psect	text13
  1801     0592                     __ptext13:	
  1802 ;; *************** function _I2C_ACK *****************
  1803 ;; Defined at:
  1804 ;;		line 71 in file "I2C.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;		None
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;		None
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  1    wreg      void 
  1811 ;; Registers used:
  1812 ;;		wreg, status,2, status,0, pclath, cstack
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1818 ;;      Params:         0       0       0       0       0
  1819 ;;      Locals:         0       0       0       0       0
  1820 ;;      Temps:          0       0       0       0       0
  1821 ;;      Totals:         0       0       0       0       0
  1822 ;;Total ram usage:        0 bytes
  1823 ;; Hardware stack levels used: 1
  1824 ;; Hardware stack levels required when called: 1
  1825 ;; This function calls:
  1826 ;;		_I2C_Wait
  1827 ;; This function is called by:
  1828 ;;		_I2C_Read_Data
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832     0592                     _I2C_ACK:	
  1833                           ;psect for function _I2C_ACK
  1834                           
  1835     0592                     l922:	
  1836                           ;incstack = 0
  1837                           ; Regs used in _I2C_ACK: [wreg+status,2+status,0+pclath+cstack]
  1838                           
  1839                           
  1840                           ;I2C.c: 73:  ACKDT=0;
  1841     0592  1683               	bsf	3,5	;RP0=1, select bank1
  1842     0593  1303               	bcf	3,6	;RP1=0, select bank1
  1843     0594  1291               	bcf	17,5	;volatile
  1844     0595                     l924:
  1845                           
  1846                           ;I2C.c: 75:  I2C_Wait();
  1847     0595  120A  118A  25AA  120A  118A  	fcall	_I2C_Wait
  1848     059A                     l926:
  1849                           
  1850                           ;I2C.c: 77:     ACKEN=1;
  1851     059A  1683               	bsf	3,5	;RP0=1, select bank1
  1852     059B  1303               	bcf	3,6	;RP1=0, select bank1
  1853     059C  1611               	bsf	17,4	;volatile
  1854     059D                     l120:
  1855     059D  0008               	return
  1856     059E                     __end_of_I2C_ACK:
  1857                           
  1858                           	psect	text14
  1859     05AA                     __ptext14:	
  1860 ;; *************** function _I2C_Wait *****************
  1861 ;; Defined at:
  1862 ;;		line 10 in file "I2C.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;		None
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;		None
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg, status,2
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1876 ;;      Params:         0       0       0       0       0
  1877 ;;      Locals:         0       0       0       0       0
  1878 ;;      Temps:          0       0       0       0       0
  1879 ;;      Totals:         0       0       0       0       0
  1880 ;;Total ram usage:        0 bytes
  1881 ;; Hardware stack levels used: 1
  1882 ;; This function calls:
  1883 ;;		Nothing
  1884 ;; This function is called by:
  1885 ;;		_I2C_Start
  1886 ;;		_I2C_Stop
  1887 ;;		_I2C_Repeat_Start
  1888 ;;		_I2C_ACK
  1889 ;;		_I2C_NACK
  1890 ;;		_I2C_Write_Data
  1891 ;;		_I2C_Read_Data
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895     05AA                     _I2C_Wait:	
  1896                           ;psect for function _I2C_Wait
  1897                           
  1898     05AA                     l918:	
  1899                           ;incstack = 0
  1900                           ; Regs used in _I2C_Wait: [wreg+status,2]
  1901                           
  1902     05AA                     l102:	
  1903                           ;I2C.c: 12: while(READ_WRITE || SSPCON2&0X1F);
  1904                           
  1905     05AA  1683               	bsf	3,5	;RP0=1, select bank1
  1906     05AB  1303               	bcf	3,6	;RP1=0, select bank1
  1907     05AC  1914               	btfsc	20,2	;volatile
  1908     05AD  2DAF               	goto	u111
  1909     05AE  2DB0               	goto	u110
  1910     05AF                     u111:
  1911     05AF  2DAA               	goto	l102
  1912     05B0                     u110:
  1913     05B0                     l920:
  1914     05B0  0811               	movf	17,w	;volatile
  1915     05B1  391F               	andlw	31
  1916     05B2  1D03               	btfss	3,2
  1917     05B3  2DB5               	goto	u121
  1918     05B4  2DB6               	goto	u120
  1919     05B5                     u121:
  1920     05B5  2DAA               	goto	l102
  1921     05B6                     u120:
  1922     05B6                     l105:
  1923     05B6  0008               	return
  1924     05B7                     __end_of_I2C_Wait:
  1925                           
  1926                           	psect	text15
  1927     05B7                     __ptext15:	
  1928 ;; *************** function _I2C_Master_Init *****************
  1929 ;; Defined at:
  1930 ;;		line 49 in file "I2C.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;		None
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;		None
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		wreg
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1944 ;;      Params:         0       0       0       0       0
  1945 ;;      Locals:         0       0       0       0       0
  1946 ;;      Temps:          0       0       0       0       0
  1947 ;;      Totals:         0       0       0       0       0
  1948 ;;Total ram usage:        0 bytes
  1949 ;; Hardware stack levels used: 1
  1950 ;; This function calls:
  1951 ;;		Nothing
  1952 ;; This function is called by:
  1953 ;;		_main
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957     05B7                     _I2C_Master_Init:	
  1958                           ;psect for function _I2C_Master_Init
  1959                           
  1960     05B7                     l1010:	
  1961                           ;incstack = 0
  1962                           ; Regs used in _I2C_Master_Init: [wreg]
  1963                           
  1964                           
  1965                           ;I2C.c: 51: TRISC3=1;
  1966     05B7  1683               	bsf	3,5	;RP0=1, select bank1
  1967     05B8  1303               	bcf	3,6	;RP1=0, select bank1
  1968     05B9  1587               	bsf	7,3	;volatile
  1969                           
  1970                           ;I2C.c: 53: TRISC4=1;
  1971     05BA  1607               	bsf	7,4	;volatile
  1972                           
  1973                           ;I2C.c: 55: SMP=1;
  1974     05BB  1794               	bsf	20,7	;volatile
  1975                           
  1976                           ;I2C.c: 57: CKE=0;
  1977     05BC  1314               	bcf	20,6	;volatile
  1978                           
  1979                           ;I2C.c: 59: SSPEN=1;
  1980     05BD  1283               	bcf	3,5	;RP0=0, select bank0
  1981     05BE  1303               	bcf	3,6	;RP1=0, select bank0
  1982     05BF  1694               	bsf	20,5	;volatile
  1983                           
  1984                           ;I2C.c: 61: SSPCON|=0X08;
  1985     05C0  1594               	bsf	20,3	;volatile
  1986     05C1                     l1012:
  1987                           
  1988                           ;I2C.c: 63: SSPADD=((16000000)/(4*100000))-1;
  1989     05C1  3027               	movlw	39
  1990     05C2  1683               	bsf	3,5	;RP0=1, select bank1
  1991     05C3  1303               	bcf	3,6	;RP1=0, select bank1
  1992     05C4  0093               	movwf	19	;volatile
  1993     05C5                     l117:
  1994     05C5  0008               	return
  1995     05C6                     __end_of_I2C_Master_Init:
  1996     007E                     btemp	set	126	;btemp
  1997     007E                     wtemp0	set	126
  1998                           
  1999                           	psect	config
  2000                           
  2001                           ;Config register CONFIG @ 0x2007
  2002                           ;	Oscillator Selection bits
  2003                           ;	FOSC = EXTRC, RC oscillator
  2004                           ;	Watchdog Timer Enable bit
  2005                           ;	WDTE = OFF, WDT disabled
  2006                           ;	Power-up Timer Enable bit
  2007                           ;	PWRTE = OFF, PWRT disabled
  2008                           ;	Brown-out Reset Enable bit
  2009                           ;	BOREN = OFF, BOR disabled
  2010                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2011                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2012                           ;	Data EEPROM Memory Code Protection bit
  2013                           ;	CPD = OFF, Data EEPROM code protection off
  2014                           ;	Flash Program Memory Write Enable bits
  2015                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2016                           ;	In-Circuit Debugger Mode bit
  2017                           ;	DEBUG = 0x1, unprogrammed default
  2018                           ;	Flash Program Memory Code Protection bit
  2019                           ;	CP = OFF, Code protection off
  2020     2007                     	org	8199
  2021     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      3      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    I2C_Page_Read@result	PTR unsigned char  size(1) Largest target is 3
		 -> result(BANK0[3]), 

    I2C_Page_Write@data	PTR unsigned char  size(1) Largest target is 4
		 -> Word(BANK0[4]), 

    Lcd_Print@x	PTR unsigned char  size(1) Largest target is 7
		 -> result(BANK0[3]), Word(BANK0[4]), Write(BANK0[7]), Read(BANK0[6]), 


Critical Paths under _main in COMMON

    _main->_I2C_Page_Read
    _Lcd_Print->_Lcd_Data
    _Lcd_Configuration->_Lcd_Cmd
    _I2C_Page_Write->_I2C_Write_Data
    _I2C_Page_Read->_I2C_Write_Data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1186
                                              0 BANK0      3     3      0
                    _I2C_Master_Init
                      _I2C_Page_Read
                     _I2C_Page_Write
                          _I2C_Start
                           _I2C_Stop
                            _Lcd_Cmd
                  _Lcd_Configuration
                          _Lcd_Print
 ---------------------------------------------------------------------------------
 (1) _Lcd_Print                                            1     1      0     199
                                              3 COMMON     1     1      0
                           _Lcd_Data
 ---------------------------------------------------------------------------------
 (2) _Lcd_Data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Configuration                                    2     2      0      22
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Page_Write                                       5     3      2     296
                                              5 COMMON     5     3      2
                   _I2C_Repeat_Start
                     _I2C_Write_Data
 ---------------------------------------------------------------------------------
 (1) _I2C_Page_Read                                        9     5      4     647
                                              5 COMMON     9     5      4
                      _I2C_Read_Data
                   _I2C_Repeat_Start
                     _I2C_Write_Data
 ---------------------------------------------------------------------------------
 (2) _I2C_Write_Data                                       5     3      2      22
                                              0 COMMON     5     3      2
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Repeat_Start                                     0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Read_Data                                        2     0      2      98
                                              0 COMMON     2     0      2
                            _I2C_ACK
                           _I2C_NACK
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_NACK                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_ACK                                              0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
   _I2C_Page_Read
     _I2C_Read_Data
       _I2C_ACK
         _I2C_Wait
       _I2C_NACK
         _I2C_Wait
       _I2C_Wait
     _I2C_Repeat_Start
       _I2C_Wait
     _I2C_Write_Data
       _I2C_Wait
   _I2C_Page_Write
     _I2C_Repeat_Start
     _I2C_Write_Data
   _I2C_Start
     _I2C_Wait
   _I2C_Stop
     _I2C_Wait
   _Lcd_Cmd
   _Lcd_Configuration
     _Lcd_Cmd
   _Lcd_Print
     _Lcd_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3      18       5       30.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      26      12        0.0%
ABS                  0      0      26       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Nov 15 11:48:23 2023

                        pc 0002                         l31 07E6                         l32 07E6  
                       l50 062D                         l47 05FE                         l56 0615  
                       l59 070C                         fsr 0004                        l102 05AA  
                      l111 0591                        l120 059D                        l105 05B6  
                      l114 057F                        l123 05A9                        l108 0588  
                      l117 05C5                        l126 064B                        l151 0738  
                      l136 0676                        l129 0659                        l145 06B5  
                      l139 067E                        l156 0770                        l148 0714  
                      l920 05B0                        l922 0592                        l930 05A1  
                      l924 0595                        l932 05A6                        l940 0620  
                      l918 05AA                        l926 059A                        l934 0617  
                      l950 05F5                        l942 05EB                        _CKE 04A6  
                      l928 059E                        l952 0577                        l960 0638  
                      l936 061B                        l944 05EF                        l970 065F  
                      l954 057C                        l962 063D                        l938 061F  
                      l946 05F0                        l980 0673                        l972 0661  
                      l956 062F                        l948 05F1                        l974 0662  
                      l966 064C                        l958 0634                        l990 06C7  
                      l976 0668                        l968 0651                        l992 06D6  
                      l984 06B6                        l978 066E                        l994 06DF  
                      l986 06BC                        l996 06EE                        l988 06C1  
                      l998 06F4                        u110 05B0                        u111 05AF  
                      u120 05B6                        u200 074D                        u121 05B5  
                      u201 074C                        u130 065F                        u131 065E  
                      u140 0668                        u141 0667                        u150 0615  
                      u151 0614                        u160 068B                        u161 068A  
                      u217 07BB                        u170 06AC                        u171 06AB  
                      u227 05F9                        u180 0721                        u181 0720  
                      u237 06CB                        u190 0745                        u191 0744  
                      u247 06DA                        _PEN 048A                        u257 06E9  
                      u267 06F8                        u277 0707                        u287 0628  
                      u297 06B0                        _SEN 0488                        _SMP 04A7  
          __end_of_I2C_ACK 059E                        fsr0 0004                        indf 0000  
 __end_of_I2C_Repeat_Start 0580                       l1000 0703                       l1010 05B7  
                     l1002 0600                       l1012 05C1                       l1020 0679  
                     l1004 0601                       l1030 06AC                       l1022 068B  
                     l1014 0580                       l1006 0609                       l1040 0721  
                     l1024 0698                       l1016 0585                       l1032 0589  
                     l1008 060D                       l1050 074E                       l1042 0733  
                     l1026 06A0                       l1018 0678                       l1034 058E  
                     l1052 0762                       l1044 0745                       l1036 070E  
                     l1028 06A4                       l1060 077C                       l1046 0749  
                     l1038 070F                       l1070 079F                       l1062 0782  
                     l1056 0769                       l1080 07C7                       l1072 07A4  
                     l1064 078E                       l1082 07D5                       l1074 07AE  
                     l1066 0793                       l1058 0771                       l1084 07DA  
                     l1076 07B3                       l1068 0799                       l1086 07E0  
                     l1078 07C2                       _RCEN 048B                       _RSEN 0489  
                     _Read 0027           __end_of_I2C_NACK 05AA                       _Word 002D  
                     _buff 0031                       _main 0771                       btemp 007E  
         __end_of_I2C_Wait 05B7           __end_of_I2C_Stop 0592                       start 0000  
          __end_of_Lcd_Cmd 062E           ?_I2C_Master_Init 0070                      ?_main 0070  
                    _ACKEN 048C                      _ACKDT 048D                      _PORTC 0007  
                    _PORTD 0008                      _TRISC 0087                      _TRISD 0088  
                    _SSPEN 00A5                      _SSPIF 0063                      _Write 0020  
      I2C_Page_Read@result 007B          __end_of_I2C_Start 0589                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Data 05FF  
          __initialization 07EA               __end_of_main 07EA                  ??_I2C_ACK 0070  
                   ??_main 0035       I2C_Page_Read@Reg_add 0078                  ??_Lcd_Cmd 0070  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013         I2C_Page_Write@data 0079  
            _I2C_Page_Read 070D              _I2C_Read_Data 064C                     _result 0032  
                ?_I2C_NACK 0070                  ?_I2C_Wait 0070                  ?_I2C_Stop 0070  
  __end_of__initialization 07FC             ?_I2C_Page_Read 0075          __end_of_Lcd_Print 0616  
           ?_I2C_Read_Data 0070             __pcstackCOMMON 0070               __pidataBANK0 05C6  
               ??_I2C_NACK 0070                 ??_I2C_Wait 0070                 ??_I2C_Stop 0070  
                ?_Lcd_Data 0070          ?_I2C_Repeat_Start 0070                 __pbssBANK0 0031  
       ??_I2C_Repeat_Start 0070             I2C_Page_Read@i 007C    I2C_Page_Read@Device_add 0077  
               __pmaintext 0771                    _I2C_ACK 0592                    _ACKSTAT 048E  
               ??_Lcd_Data 0070                    _SSPCON2 0091            ??_I2C_Page_Read 0079  
                  _Lcd_Cmd 0616                  _I2C_Start 0580            ??_I2C_Read_Data 0072  
           _I2C_Page_Write 0677                    __ptext1 05FF                    __ptext2 05EA  
                  __ptext3 06B6                    __ptext4 0616                    __ptext5 0589  
                  __ptext6 0580                    __ptext7 0677                    __ptext8 070D  
                  __ptext9 062E       end_of_initialization 07FC     __end_of_I2C_Page_Write 06B6  
               ?_I2C_Start 0070      I2C_Page_Write@Reg_add 0076            ?_I2C_Page_Write 0075  
        I2C_Page_Read@Size 0075                  _Lcd_Print 05FF             _I2C_Write_Data 062E  
      start_initialization 07EA          ??_I2C_Master_Init 0070                ??_I2C_Start 0070  
   __end_of_I2C_Write_Data 064C                 init_fetch0 05D7                 ?_Lcd_Print 0070  
              __pdataBANK0 0020                   ?_I2C_ACK 0070                  ___latbits 0002  
            __pcstackBANK0 0035                   ?_Lcd_Cmd 0070            ?_I2C_Write_Data 0070  
        _Lcd_Configuration 06B6         ?_Lcd_Configuration 0070                   _I2C_NACK 059E  
                 _I2C_Wait 05AA                   _I2C_Stop 0589        ??_Lcd_Configuration 0073  
             Lcd_Data@data 0072      __end_of_I2C_Page_Read 0771  __end_of_Lcd_Configuration 070D  
    __end_of_I2C_Read_Data 0677                ??_Lcd_Print 0073                   _Lcd_Data 05EA  
         ??_I2C_Page_Write 0077          I2C_Read_Data@flag 0070           _I2C_Repeat_Start 0577  
          _I2C_Master_Init 05B7                   __ptext10 0577                   __ptext11 064C  
                 __ptext12 059E                   __ptext13 0592                   __ptext14 05AA  
                 __ptext15 05B7                 _READ_WRITE 04A2                   init_ram0 05DB  
 I2C_Page_Write@Device_add 0075           ??_I2C_Write_Data 0072                 Lcd_Cmd@cmd 0072  
  __end_of_I2C_Master_Init 05C6                 Lcd_Print@x 0073         I2C_Write_Data@data 0074  
